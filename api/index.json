{
  "navigation": [
    {
      "group": "API Documentation",
      "pages": [
        {
          "title": "CompilationTarget.SharedLibrary",
          "path": "cppsharp.compilationtarget.sharedlibrary.md"
        },
        {
          "title": "CompilationTarget.StaticLibrary",
          "path": "cppsharp.compilationtarget.staticlibrary.md"
        },
        {
          "title": "CompilationTarget.Application",
          "path": "cppsharp.compilationtarget.application.md"
        },
        {
          "title": "CompilationTarget",
          "path": "cppsharp.compilationtarget.md"
        },
        {
          "title": "CompilationOptions.Platform",
          "path": "cppsharp.compilationoptions.platform.md"
        },
        {
          "title": "CompilationOptions.VsVersion",
          "path": "cppsharp.compilationoptions.vsversion.md"
        },
        {
          "title": "CompilationOptions.Target",
          "path": "cppsharp.compilationoptions.target.md"
        },
        {
          "title": "CompilationOptions.CompileSharedLibrary",
          "path": "cppsharp.compilationoptions.compilesharedlibrary.md"
        },
        {
          "title": "CompilationOptions.DebugMode",
          "path": "cppsharp.compilationoptions.debugmode.md"
        },
        {
          "title": "CompilationOptions",
          "path": "cppsharp.compilationoptions.md"
        },
        {
          "title": "CppSharp Namespace",
          "path": "cppsharp.md"
        },
        {
          "title": "DiagnosticKind.Debug",
          "path": "cppsharp.diagnostickind.debug.md"
        },
        {
          "title": "DiagnosticKind.Message",
          "path": "cppsharp.diagnostickind.message.md"
        },
        {
          "title": "DiagnosticKind.Warning",
          "path": "cppsharp.diagnostickind.warning.md"
        },
        {
          "title": "DiagnosticKind.Error",
          "path": "cppsharp.diagnostickind.error.md"
        },
        {
          "title": "DiagnosticKind",
          "path": "cppsharp.diagnostickind.md"
        },
        {
          "title": "DiagnosticInfo.Kind",
          "path": "cppsharp.diagnosticinfo.kind.md"
        },
        {
          "title": "DiagnosticInfo.Message",
          "path": "cppsharp.diagnosticinfo.message.md"
        },
        {
          "title": "DiagnosticInfo.File",
          "path": "cppsharp.diagnosticinfo.file.md"
        },
        {
          "title": "DiagnosticInfo.Line",
          "path": "cppsharp.diagnosticinfo.line.md"
        },
        {
          "title": "DiagnosticInfo.Column",
          "path": "cppsharp.diagnosticinfo.column.md"
        },
        {
          "title": "DiagnosticInfo",
          "path": "cppsharp.diagnosticinfo.md"
        },
        {
          "title": "IDiagnostics.Level",
          "path": "cppsharp.idiagnostics.level.md"
        },
        {
          "title": "IDiagnostics.Emit(DiagnosticInfo)",
          "path": "cppsharp.idiagnostics.emit.md"
        },
        {
          "title": "IDiagnostics.PushIndent(int)",
          "path": "cppsharp.idiagnostics.pushindent.md"
        },
        {
          "title": "IDiagnostics.PopIndent()",
          "path": "cppsharp.idiagnostics.popindent.md"
        },
        {
          "title": "IDiagnostics",
          "path": "cppsharp.idiagnostics.md"
        },
        {
          "title": "Diagnostics.Implementation",
          "path": "cppsharp.diagnostics.implementation.md"
        },
        {
          "title": "Diagnostics.Level",
          "path": "cppsharp.diagnostics.level.md"
        },
        {
          "title": "Diagnostics.PushIndent(int)",
          "path": "cppsharp.diagnostics.pushindent.md"
        },
        {
          "title": "Diagnostics.PopIndent()",
          "path": "cppsharp.diagnostics.popindent.md"
        },
        {
          "title": "Diagnostics.Debug(string,object[])",
          "path": "cppsharp.diagnostics.debug.md"
        },
        {
          "title": "Diagnostics.Message(string,object[])",
          "path": "cppsharp.diagnostics.message.md"
        },
        {
          "title": "Diagnostics.Warning(string,object[])",
          "path": "cppsharp.diagnostics.warning.md"
        },
        {
          "title": "Diagnostics.Error(string,object[])",
          "path": "cppsharp.diagnostics.error.md"
        },
        {
          "title": "Diagnostics",
          "path": "cppsharp.diagnostics.md"
        },
        {
          "title": "ConsoleDiagnostics.Indents",
          "path": "cppsharp.consolediagnostics.indents.md"
        },
        {
          "title": "ConsoleDiagnostics.Level",
          "path": "cppsharp.consolediagnostics.level.md"
        },
        {
          "title": "ConsoleDiagnostics()",
          "path": "cppsharp.consolediagnostics..ctor.md"
        },
        {
          "title": "ConsoleDiagnostics.Emit(DiagnosticInfo)",
          "path": "cppsharp.consolediagnostics.emit.md"
        },
        {
          "title": "ConsoleDiagnostics.PushIndent(int)",
          "path": "cppsharp.consolediagnostics.pushindent.md"
        },
        {
          "title": "ConsoleDiagnostics.PopIndent()",
          "path": "cppsharp.consolediagnostics.popindent.md"
        },
        {
          "title": "ConsoleDiagnostics",
          "path": "cppsharp.consolediagnostics.md"
        },
        {
          "title": "TargetPlatform.Windows",
          "path": "cppsharp.targetplatform.windows.md"
        },
        {
          "title": "TargetPlatform.Linux",
          "path": "cppsharp.targetplatform.linux.md"
        },
        {
          "title": "TargetPlatform.Android",
          "path": "cppsharp.targetplatform.android.md"
        },
        {
          "title": "TargetPlatform.MacOS",
          "path": "cppsharp.targetplatform.macos.md"
        },
        {
          "title": "TargetPlatform.iOS",
          "path": "cppsharp.targetplatform.ios.md"
        },
        {
          "title": "TargetPlatform.WatchOS",
          "path": "cppsharp.targetplatform.watchos.md"
        },
        {
          "title": "TargetPlatform.TVOS",
          "path": "cppsharp.targetplatform.tvos.md"
        },
        {
          "title": "TargetPlatform.Emscripten",
          "path": "cppsharp.targetplatform.emscripten.md"
        },
        {
          "title": "TargetPlatform",
          "path": "cppsharp.targetplatform.md"
        },
        {
          "title": "Platform.IsWindows",
          "path": "cppsharp.platform.iswindows.md"
        },
        {
          "title": "Platform.IsMacOS",
          "path": "cppsharp.platform.ismacos.md"
        },
        {
          "title": "Platform.IsLinux",
          "path": "cppsharp.platform.islinux.md"
        },
        {
          "title": "Platform.IsMono",
          "path": "cppsharp.platform.ismono.md"
        },
        {
          "title": "Platform.IsUnixPlatform",
          "path": "cppsharp.platform.isunixplatform.md"
        },
        {
          "title": "Platform.Host",
          "path": "cppsharp.platform.host.md"
        },
        {
          "title": "Platform",
          "path": "cppsharp.platform.md"
        },
        {
          "title": "ManagedToolchain.ReadMonoPathFromWindowsRegistry(bool)",
          "path": "cppsharp.managedtoolchain.readmonopathfromwindowsregistry.md"
        },
        {
          "title": "ManagedToolchain.FindMonoPath(bool)",
          "path": "cppsharp.managedtoolchain.findmonopath.md"
        },
        {
          "title": "ManagedToolchain.FindCSharpCompilerDir()",
          "path": "cppsharp.managedtoolchain.findcsharpcompilerdir.md"
        },
        {
          "title": "ManagedToolchain.FindCSharpCompilerPath()",
          "path": "cppsharp.managedtoolchain.findcsharpcompilerpath.md"
        },
        {
          "title": "ManagedToolchain",
          "path": "cppsharp.managedtoolchain.md"
        },
        {
          "title": "VisualStudioVersion.VS2012",
          "path": "cppsharp.visualstudioversion.vs2012.md"
        },
        {
          "title": "VisualStudioVersion.VS2013",
          "path": "cppsharp.visualstudioversion.vs2013.md"
        },
        {
          "title": "VisualStudioVersion.VS2015",
          "path": "cppsharp.visualstudioversion.vs2015.md"
        },
        {
          "title": "VisualStudioVersion.VS2017",
          "path": "cppsharp.visualstudioversion.vs2017.md"
        },
        {
          "title": "VisualStudioVersion.VS2019",
          "path": "cppsharp.visualstudioversion.vs2019.md"
        },
        {
          "title": "VisualStudioVersion.VS2022",
          "path": "cppsharp.visualstudioversion.vs2022.md"
        },
        {
          "title": "VisualStudioVersion.Latest",
          "path": "cppsharp.visualstudioversion.latest.md"
        },
        {
          "title": "VisualStudioVersion",
          "path": "cppsharp.visualstudioversion.md"
        },
        {
          "title": "ToolchainVersion.Version",
          "path": "cppsharp.toolchainversion.version.md"
        },
        {
          "title": "ToolchainVersion.Directory",
          "path": "cppsharp.toolchainversion.directory.md"
        },
        {
          "title": "ToolchainVersion.Value",
          "path": "cppsharp.toolchainversion.value.md"
        },
        {
          "title": "ToolchainVersion.IsValid",
          "path": "cppsharp.toolchainversion.isvalid.md"
        },
        {
          "title": "ToolchainVersion.ToString()",
          "path": "cppsharp.toolchainversion.tostring.md"
        },
        {
          "title": "ToolchainVersion",
          "path": "cppsharp.toolchainversion.md"
        },
        {
          "title": "Version.Major",
          "path": "cppsharp.version.major.md"
        },
        {
          "title": "Version.Minor",
          "path": "cppsharp.version.minor.md"
        },
        {
          "title": "Version",
          "path": "cppsharp.version.md"
        },
        {
          "title": "MSVCToolchain.GetCLVersion(VisualStudioVersion)",
          "path": "cppsharp.msvctoolchain.getclversion.md"
        },
        {
          "title": "MSVCToolchain.GetNetFrameworkSdks()",
          "path": "cppsharp.msvctoolchain.getnetframeworksdks.md"
        },
        {
          "title": "MSVCToolchain.GetMSBuildSdks()",
          "path": "cppsharp.msvctoolchain.getmsbuildsdks.md"
        },
        {
          "title": "MSVCToolchain.GetWindowsSdks()",
          "path": "cppsharp.msvctoolchain.getwindowssdks.md"
        },
        {
          "title": "MSVCToolchain.GetWindowsKitsSdks()",
          "path": "cppsharp.msvctoolchain.getwindowskitssdks.md"
        },
        {
          "title": "MSVCToolchain.GetToolchainsFromSystemRegistryValues(string,string,RegistryView)",
          "path": "cppsharp.msvctoolchain.gettoolchainsfromsystemregistryvalues.md"
        },
        {
          "title": "MSVCToolchain",
          "path": "cppsharp.msvctoolchain.md"
        },
        {
          "title": "XcodeToolchain.GetXcodePath()",
          "path": "cppsharp.xcodetoolchain.getxcodepath.md"
        },
        {
          "title": "XcodeToolchain.GetXcodeToolchainPath()",
          "path": "cppsharp.xcodetoolchain.getxcodetoolchainpath.md"
        },
        {
          "title": "XcodeToolchain.GetXcodeSDKPath()",
          "path": "cppsharp.xcodetoolchain.getxcodesdkpath.md"
        },
        {
          "title": "XcodeToolchain.GetXcodeCppIncludesFolder()",
          "path": "cppsharp.xcodetoolchain.getxcodecppincludesfolder.md"
        },
        {
          "title": "XcodeToolchain.GetXcodeBuiltinIncludesFolder()",
          "path": "cppsharp.xcodetoolchain.getxcodebuiltinincludesfolder.md"
        },
        {
          "title": "XcodeToolchain.GetXcodeIncludesFolder()",
          "path": "cppsharp.xcodetoolchain.getxcodeincludesfolder.md"
        },
        {
          "title": "XcodeToolchain",
          "path": "cppsharp.xcodetoolchain.md"
        },
        {
          "title": "CppAbi.Itanium",
          "path": "cppsharp.ast.cppabi.itanium.md"
        },
        {
          "title": "CppAbi.Microsoft",
          "path": "cppsharp.ast.cppabi.microsoft.md"
        },
        {
          "title": "CppAbi.ARM",
          "path": "cppsharp.ast.cppabi.arm.md"
        },
        {
          "title": "CppAbi.AArch64",
          "path": "cppsharp.ast.cppabi.aarch64.md"
        },
        {
          "title": "CppAbi.iOS",
          "path": "cppsharp.ast.cppabi.ios.md"
        },
        {
          "title": "CppAbi.AppleARM64",
          "path": "cppsharp.ast.cppabi.applearm64.md"
        },
        {
          "title": "CppAbi.WebAssembly",
          "path": "cppsharp.ast.cppabi.webassembly.md"
        },
        {
          "title": "CppAbi",
          "path": "cppsharp.ast.cppabi.md"
        },
        {
          "title": "ASTContext.TranslationUnits",
          "path": "cppsharp.ast.astcontext.translationunits.md"
        },
        {
          "title": "ASTContext()",
          "path": "cppsharp.ast.astcontext..ctor.md"
        },
        {
          "title": "ASTContext.FindOrCreateTranslationUnit(string)",
          "path": "cppsharp.ast.astcontext.findorcreatetranslationunit.md"
        },
        {
          "title": "ASTContext.FindEnum(string)",
          "path": "cppsharp.ast.astcontext.findenum.md"
        },
        {
          "title": "ASTContext.FindCompleteEnum(string)",
          "path": "cppsharp.ast.astcontext.findcompleteenum.md"
        },
        {
          "title": "ASTContext.FindClass(string,bool,bool)",
          "path": "cppsharp.ast.astcontext.findclass.md"
        },
        {
          "title": "ASTContext.FindCompleteClass(string,bool)",
          "path": "cppsharp.ast.astcontext.findcompleteclass.md"
        },
        {
          "title": "ASTContext.FindFunction(string)",
          "path": "cppsharp.ast.astcontext.findfunction.md"
        },
        {
          "title": "ASTContext.FindTypedef(string)",
          "path": "cppsharp.ast.astcontext.findtypedef.md"
        },
        {
          "title": "ASTContext.FindDecl(string)",
          "path": "cppsharp.ast.astcontext.finddecl.md"
        },
        {
          "title": "ASTContext.SetEnumAsFlags(string)",
          "path": "cppsharp.ast.astcontext.setenumasflags.md"
        },
        {
          "title": "ASTContext.ExcludeFromPass(string,System.Type)",
          "path": "cppsharp.ast.astcontext.excludefrompass.md"
        },
        {
          "title": "ASTContext.RenameNamespace(string,string)",
          "path": "cppsharp.ast.astcontext.renamenamespace.md"
        },
        {
          "title": "ASTContext",
          "path": "cppsharp.ast.astcontext.md"
        },
        {
          "title": "CppSharp.AST Namespace",
          "path": "cppsharp.ast.md"
        },
        {
          "title": "IAstVisited.Visited",
          "path": "cppsharp.ast.iastvisited.visited.md"
        },
        {
          "title": "IAstVisited.AlreadyVisited(Declaration)",
          "path": "cppsharp.ast.iastvisited.alreadyvisited-1.md"
        },
        {
          "title": "IAstVisited.AlreadyVisited(Type)",
          "path": "cppsharp.ast.iastvisited.alreadyvisited-2.md"
        },
        {
          "title": "IAstVisited",
          "path": "cppsharp.ast.iastvisited.md"
        },
        {
          "title": "IAstVisitor.VisitOptions",
          "path": "cppsharp.ast.iastvisitor.visitoptions.md"
        },
        {
          "title": "IAstVisitor",
          "path": "cppsharp.ast.iastvisitor.md"
        },
        {
          "title": "VisitFlags.Default",
          "path": "cppsharp.ast.visitflags.default.md"
        },
        {
          "title": "VisitFlags.ClassBases",
          "path": "cppsharp.ast.visitflags.classbases.md"
        },
        {
          "title": "VisitFlags.ClassFields",
          "path": "cppsharp.ast.visitflags.classfields.md"
        },
        {
          "title": "VisitFlags.ClassProperties",
          "path": "cppsharp.ast.visitflags.classproperties.md"
        },
        {
          "title": "VisitFlags.ClassMethods",
          "path": "cppsharp.ast.visitflags.classmethods.md"
        },
        {
          "title": "VisitFlags.ClassTemplateSpecializations",
          "path": "cppsharp.ast.visitflags.classtemplatespecializations.md"
        },
        {
          "title": "VisitFlags.PropertyAccessors",
          "path": "cppsharp.ast.visitflags.propertyaccessors.md"
        },
        {
          "title": "VisitFlags.NamespaceEnums",
          "path": "cppsharp.ast.visitflags.namespaceenums.md"
        },
        {
          "title": "VisitFlags.NamespaceTemplates",
          "path": "cppsharp.ast.visitflags.namespacetemplates.md"
        },
        {
          "title": "VisitFlags.NamespaceTypedefs",
          "path": "cppsharp.ast.visitflags.namespacetypedefs.md"
        },
        {
          "title": "VisitFlags.NamespaceEvents",
          "path": "cppsharp.ast.visitflags.namespaceevents.md"
        },
        {
          "title": "VisitFlags.NamespaceVariables",
          "path": "cppsharp.ast.visitflags.namespacevariables.md"
        },
        {
          "title": "VisitFlags.NamespaceClasses",
          "path": "cppsharp.ast.visitflags.namespaceclasses.md"
        },
        {
          "title": "VisitFlags.NamespaceFunctions",
          "path": "cppsharp.ast.visitflags.namespacefunctions.md"
        },
        {
          "title": "VisitFlags.FunctionReturnType",
          "path": "cppsharp.ast.visitflags.functionreturntype.md"
        },
        {
          "title": "VisitFlags.FunctionParameters",
          "path": "cppsharp.ast.visitflags.functionparameters.md"
        },
        {
          "title": "VisitFlags.EventParameters",
          "path": "cppsharp.ast.visitflags.eventparameters.md"
        },
        {
          "title": "VisitFlags.TemplateArguments",
          "path": "cppsharp.ast.visitflags.templatearguments.md"
        },
        {
          "title": "VisitFlags.Any",
          "path": "cppsharp.ast.visitflags.any.md"
        },
        {
          "title": "VisitFlags",
          "path": "cppsharp.ast.visitflags.md"
        },
        {
          "title": "AstVisitorOptions(VisitFlags)",
          "path": "cppsharp.ast.astvisitoroptions..ctor.md"
        },
        {
          "title": "AstVisitorOptions.VisitClassBases",
          "path": "cppsharp.ast.astvisitoroptions.visitclassbases.md"
        },
        {
          "title": "AstVisitorOptions.VisitClassFields",
          "path": "cppsharp.ast.astvisitoroptions.visitclassfields.md"
        },
        {
          "title": "AstVisitorOptions.VisitClassProperties",
          "path": "cppsharp.ast.astvisitoroptions.visitclassproperties.md"
        },
        {
          "title": "AstVisitorOptions.VisitClassMethods",
          "path": "cppsharp.ast.astvisitoroptions.visitclassmethods.md"
        },
        {
          "title": "AstVisitorOptions.VisitClassTemplateSpecializations",
          "path": "cppsharp.ast.astvisitoroptions.visitclasstemplatespecializations.md"
        },
        {
          "title": "AstVisitorOptions.VisitPropertyAccessors",
          "path": "cppsharp.ast.astvisitoroptions.visitpropertyaccessors.md"
        },
        {
          "title": "AstVisitorOptions.VisitNamespaceClasses",
          "path": "cppsharp.ast.astvisitoroptions.visitnamespaceclasses.md"
        },
        {
          "title": "AstVisitorOptions.VisitNamespaceEnums",
          "path": "cppsharp.ast.astvisitoroptions.visitnamespaceenums.md"
        },
        {
          "title": "AstVisitorOptions.VisitNamespaceFunctions",
          "path": "cppsharp.ast.astvisitoroptions.visitnamespacefunctions.md"
        },
        {
          "title": "AstVisitorOptions.VisitNamespaceTemplates",
          "path": "cppsharp.ast.astvisitoroptions.visitnamespacetemplates.md"
        },
        {
          "title": "AstVisitorOptions.VisitNamespaceTypedefs",
          "path": "cppsharp.ast.astvisitoroptions.visitnamespacetypedefs.md"
        },
        {
          "title": "AstVisitorOptions.VisitNamespaceEvents",
          "path": "cppsharp.ast.astvisitoroptions.visitnamespaceevents.md"
        },
        {
          "title": "AstVisitorOptions.VisitNamespaceVariables",
          "path": "cppsharp.ast.astvisitoroptions.visitnamespacevariables.md"
        },
        {
          "title": "AstVisitorOptions.VisitFunctionReturnType",
          "path": "cppsharp.ast.astvisitoroptions.visitfunctionreturntype.md"
        },
        {
          "title": "AstVisitorOptions.VisitFunctionParameters",
          "path": "cppsharp.ast.astvisitoroptions.visitfunctionparameters.md"
        },
        {
          "title": "AstVisitorOptions.VisitEventParameters",
          "path": "cppsharp.ast.astvisitoroptions.visiteventparameters.md"
        },
        {
          "title": "AstVisitorOptions.VisitTemplateArguments",
          "path": "cppsharp.ast.astvisitoroptions.visittemplatearguments.md"
        },
        {
          "title": "AstVisitorOptions.SetFlags(VisitFlags)",
          "path": "cppsharp.ast.astvisitoroptions.setflags.md"
        },
        {
          "title": "AstVisitorOptions.ResetFlags(VisitFlags)",
          "path": "cppsharp.ast.astvisitoroptions.resetflags.md"
        },
        {
          "title": "AstVisitorOptions.ClearFlags(VisitFlags)",
          "path": "cppsharp.ast.astvisitoroptions.clearflags.md"
        },
        {
          "title": "AstVisitorOptions",
          "path": "cppsharp.ast.astvisitoroptions.md"
        },
        {
          "title": "AstVisitor.Visited",
          "path": "cppsharp.ast.astvisitor.visited.md"
        },
        {
          "title": "AstVisitor.VisitOptions",
          "path": "cppsharp.ast.astvisitor.visitoptions.md"
        },
        {
          "title": "AstVisitor.AlreadyVisited(Type)",
          "path": "cppsharp.ast.astvisitor.alreadyvisited-1.md"
        },
        {
          "title": "AstVisitor.AlreadyVisited(Declaration)",
          "path": "cppsharp.ast.astvisitor.alreadyvisited-2.md"
        },
        {
          "title": "AstVisitor.AlreadyVisited(Stmt)",
          "path": "cppsharp.ast.astvisitor.alreadyvisited-3.md"
        },
        {
          "title": "AstVisitor.VisitType(Type,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visittype.md"
        },
        {
          "title": "AstVisitor.VisitTagType(TagType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visittagtype.md"
        },
        {
          "title": "AstVisitor.VisitArrayType(ArrayType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitarraytype.md"
        },
        {
          "title": "AstVisitor.VisitFunctionType(FunctionType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitfunctiontype.md"
        },
        {
          "title": "AstVisitor.VisitPointerType(PointerType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitpointertype.md"
        },
        {
          "title": "AstVisitor.VisitMemberPointerType(MemberPointerType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitmemberpointertype.md"
        },
        {
          "title": "AstVisitor.VisitBuiltinType(BuiltinType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitbuiltintype.md"
        },
        {
          "title": "AstVisitor.VisitTypedefType(TypedefType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visittypedeftype.md"
        },
        {
          "title": "AstVisitor.VisitAttributedType(AttributedType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitattributedtype.md"
        },
        {
          "title": "AstVisitor.VisitDecayedType(DecayedType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitdecayedtype.md"
        },
        {
          "title": "AstVisitor.VisitTemplateSpecializationType(TemplateSpecializationType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visittemplatespecializationtype.md"
        },
        {
          "title": "AstVisitor.VisitDependentTemplateSpecializationType(DependentTemplateSpecializationType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitdependenttemplatespecializationtype.md"
        },
        {
          "title": "AstVisitor.VisitTemplateParameterType(TemplateParameterType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visittemplateparametertype.md"
        },
        {
          "title": "AstVisitor.VisitTemplateParameterSubstitutionType(TemplateParameterSubstitutionType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visittemplateparametersubstitutiontype.md"
        },
        {
          "title": "AstVisitor.VisitInjectedClassNameType(InjectedClassNameType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitinjectedclassnametype.md"
        },
        {
          "title": "AstVisitor.VisitDependentNameType(DependentNameType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitdependentnametype.md"
        },
        {
          "title": "AstVisitor.VisitPackExpansionType(PackExpansionType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitpackexpansiontype.md"
        },
        {
          "title": "AstVisitor.VisitUnaryTransformType(UnaryTransformType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitunarytransformtype.md"
        },
        {
          "title": "AstVisitor.VisitUnresolvedUsingType(UnresolvedUsingType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitunresolvedusingtype.md"
        },
        {
          "title": "AstVisitor.VisitVectorType(VectorType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitvectortype.md"
        },
        {
          "title": "AstVisitor.VisitPrimitiveType(PrimitiveType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitprimitivetype.md"
        },
        {
          "title": "AstVisitor.VisitCILType(CILType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitciltype.md"
        },
        {
          "title": "AstVisitor.VisitUnsupportedType(UnsupportedType,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitunsupportedtype.md"
        },
        {
          "title": "AstVisitor.VisitQualifiedType(QualifiedType)",
          "path": "cppsharp.ast.astvisitor.visitqualifiedtype.md"
        },
        {
          "title": "AstVisitor.VisitDeclaration(Declaration,TypeQualifiers)",
          "path": "cppsharp.ast.astvisitor.visitdeclaration-1.md"
        },
        {
          "title": "AstVisitor.VisitDeclaration(Declaration)",
          "path": "cppsharp.ast.astvisitor.visitdeclaration-2.md"
        },
        {
          "title": "AstVisitor.VisitTranslationUnit(TranslationUnit)",
          "path": "cppsharp.ast.astvisitor.visittranslationunit.md"
        },
        {
          "title": "AstVisitor.VisitClassDecl(Class)",
          "path": "cppsharp.ast.astvisitor.visitclassdecl.md"
        },
        {
          "title": "AstVisitor.VisitFieldDecl(Field)",
          "path": "cppsharp.ast.astvisitor.visitfielddecl.md"
        },
        {
          "title": "AstVisitor.VisitProperty(Property)",
          "path": "cppsharp.ast.astvisitor.visitproperty.md"
        },
        {
          "title": "AstVisitor.VisitFriend(Friend)",
          "path": "cppsharp.ast.astvisitor.visitfriend.md"
        },
        {
          "title": "AstVisitor.VisitFunctionDecl(Function)",
          "path": "cppsharp.ast.astvisitor.visitfunctiondecl.md"
        },
        {
          "title": "AstVisitor.VisitMethodDecl(Method)",
          "path": "cppsharp.ast.astvisitor.visitmethoddecl.md"
        },
        {
          "title": "AstVisitor.VisitParameterDecl(Parameter)",
          "path": "cppsharp.ast.astvisitor.visitparameterdecl.md"
        },
        {
          "title": "AstVisitor.VisitTypedefNameDecl(TypedefNameDecl)",
          "path": "cppsharp.ast.astvisitor.visittypedefnamedecl.md"
        },
        {
          "title": "AstVisitor.VisitTypedefDecl(TypedefDecl)",
          "path": "cppsharp.ast.astvisitor.visittypedefdecl.md"
        },
        {
          "title": "AstVisitor.VisitTypeAliasDecl(TypeAlias)",
          "path": "cppsharp.ast.astvisitor.visittypealiasdecl.md"
        },
        {
          "title": "AstVisitor.VisitEnumDecl(Enumeration)",
          "path": "cppsharp.ast.astvisitor.visitenumdecl.md"
        },
        {
          "title": "AstVisitor.VisitVariableDecl(Variable)",
          "path": "cppsharp.ast.astvisitor.visitvariabledecl.md"
        },
        {
          "title": "AstVisitor.VisitEnumItemDecl(Enumeration.Item)",
          "path": "cppsharp.ast.astvisitor.visitenumitemdecl.md"
        },
        {
          "title": "AstVisitor.VisitTypeAliasTemplateDecl(TypeAliasTemplate)",
          "path": "cppsharp.ast.astvisitor.visittypealiastemplatedecl.md"
        },
        {
          "title": "AstVisitor.VisitClassTemplateDecl(ClassTemplate)",
          "path": "cppsharp.ast.astvisitor.visitclasstemplatedecl.md"
        },
        {
          "title": "AstVisitor.VisitClassTemplateSpecializationDecl(ClassTemplateSpecialization)",
          "path": "cppsharp.ast.astvisitor.visitclasstemplatespecializationdecl.md"
        },
        {
          "title": "AstVisitor.VisitFunctionTemplateDecl(FunctionTemplate)",
          "path": "cppsharp.ast.astvisitor.visitfunctiontemplatedecl.md"
        },
        {
          "title": "AstVisitor.VisitFunctionTemplateSpecializationDecl(FunctionTemplateSpecialization)",
          "path": "cppsharp.ast.astvisitor.visitfunctiontemplatespecializationdecl.md"
        },
        {
          "title": "AstVisitor.VisitVarTemplateDecl(VarTemplate)",
          "path": "cppsharp.ast.astvisitor.visitvartemplatedecl.md"
        },
        {
          "title": "AstVisitor.VisitVarTemplateSpecializationDecl(VarTemplateSpecialization)",
          "path": "cppsharp.ast.astvisitor.visitvartemplatespecializationdecl.md"
        },
        {
          "title": "AstVisitor.VisitMacroDefinition(MacroDefinition)",
          "path": "cppsharp.ast.astvisitor.visitmacrodefinition.md"
        },
        {
          "title": "AstVisitor.VisitNamespace(Namespace)",
          "path": "cppsharp.ast.astvisitor.visitnamespace.md"
        },
        {
          "title": "AstVisitor.VisitDeclarationContext(DeclarationContext)",
          "path": "cppsharp.ast.astvisitor.visitdeclarationcontext.md"
        },
        {
          "title": "AstVisitor.VisitEvent(Event)",
          "path": "cppsharp.ast.astvisitor.visitevent.md"
        },
        {
          "title": "AstVisitor.VisitTemplateTemplateParameterDecl(TemplateTemplateParameter)",
          "path": "cppsharp.ast.astvisitor.visittemplatetemplateparameterdecl.md"
        },
        {
          "title": "AstVisitor.VisitTemplateParameterDecl(TypeTemplateParameter)",
          "path": "cppsharp.ast.astvisitor.visittemplateparameterdecl.md"
        },
        {
          "title": "AstVisitor.VisitNonTypeTemplateParameterDecl(NonTypeTemplateParameter)",
          "path": "cppsharp.ast.astvisitor.visitnontypetemplateparameterdecl.md"
        },
        {
          "title": "AstVisitor.VisitUnresolvedUsingDecl(UnresolvedUsingTypename)",
          "path": "cppsharp.ast.astvisitor.visitunresolvedusingdecl.md"
        },
        {
          "title": "AstVisitor.VisitStmt(Stmt)",
          "path": "cppsharp.ast.astvisitor.visitstmt.md"
        },
        {
          "title": "AstVisitor",
          "path": "cppsharp.ast.astvisitor.md"
        },
        {
          "title": "Attribute()",
          "path": "cppsharp.ast.attribute..ctor.md"
        },
        {
          "title": "Attribute.Type",
          "path": "cppsharp.ast.attribute.type.md"
        },
        {
          "title": "Attribute.Value",
          "path": "cppsharp.ast.attribute.value.md"
        },
        {
          "title": "Attribute",
          "path": "cppsharp.ast.attribute.md"
        },
        {
          "title": "AccessSpecifier.Private",
          "path": "cppsharp.ast.accessspecifier.private.md"
        },
        {
          "title": "AccessSpecifier.Protected",
          "path": "cppsharp.ast.accessspecifier.protected.md"
        },
        {
          "title": "AccessSpecifier.Public",
          "path": "cppsharp.ast.accessspecifier.public.md"
        },
        {
          "title": "AccessSpecifier.Internal",
          "path": "cppsharp.ast.accessspecifier.internal.md"
        },
        {
          "title": "AccessSpecifier",
          "path": "cppsharp.ast.accessspecifier.md"
        },
        {
          "title": "TagKind.Struct",
          "path": "cppsharp.ast.tagkind.struct.md"
        },
        {
          "title": "TagKind.Interface",
          "path": "cppsharp.ast.tagkind.interface.md"
        },
        {
          "title": "TagKind.Union",
          "path": "cppsharp.ast.tagkind.union.md"
        },
        {
          "title": "TagKind.Class",
          "path": "cppsharp.ast.tagkind.class.md"
        },
        {
          "title": "TagKind.Enum",
          "path": "cppsharp.ast.tagkind.enum.md"
        },
        {
          "title": "TagKind",
          "path": "cppsharp.ast.tagkind.md"
        },
        {
          "title": "AccessSpecifierDecl.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.accessspecifierdecl.visit.md"
        },
        {
          "title": "AccessSpecifierDecl",
          "path": "cppsharp.ast.accessspecifierdecl.md"
        },
        {
          "title": "BaseClassSpecifier()",
          "path": "cppsharp.ast.baseclassspecifier..ctor-1.md"
        },
        {
          "title": "BaseClassSpecifier(BaseClassSpecifier)",
          "path": "cppsharp.ast.baseclassspecifier..ctor-2.md"
        },
        {
          "title": "BaseClassSpecifier.Access",
          "path": "cppsharp.ast.baseclassspecifier.access.md"
        },
        {
          "title": "BaseClassSpecifier.IsVirtual",
          "path": "cppsharp.ast.baseclassspecifier.isvirtual.md"
        },
        {
          "title": "BaseClassSpecifier.Type",
          "path": "cppsharp.ast.baseclassspecifier.type.md"
        },
        {
          "title": "BaseClassSpecifier.Offset",
          "path": "cppsharp.ast.baseclassspecifier.offset.md"
        },
        {
          "title": "BaseClassSpecifier.Class",
          "path": "cppsharp.ast.baseclassspecifier.class.md"
        },
        {
          "title": "BaseClassSpecifier.IsClass",
          "path": "cppsharp.ast.baseclassspecifier.isclass.md"
        },
        {
          "title": "BaseClassSpecifier",
          "path": "cppsharp.ast.baseclassspecifier.md"
        },
        {
          "title": "ClassType.ValueType",
          "path": "cppsharp.ast.classtype.valuetype.md"
        },
        {
          "title": "ClassType.RefType",
          "path": "cppsharp.ast.classtype.reftype.md"
        },
        {
          "title": "ClassType.Interface",
          "path": "cppsharp.ast.classtype.interface.md"
        },
        {
          "title": "ClassType",
          "path": "cppsharp.ast.classtype.md"
        },
        {
          "title": "Class.Bases",
          "path": "cppsharp.ast.class.bases.md"
        },
        {
          "title": "Class.Fields",
          "path": "cppsharp.ast.class.fields.md"
        },
        {
          "title": "Class.Properties",
          "path": "cppsharp.ast.class.properties.md"
        },
        {
          "title": "Class.Methods",
          "path": "cppsharp.ast.class.methods.md"
        },
        {
          "title": "Class.Specifiers",
          "path": "cppsharp.ast.class.specifiers.md"
        },
        {
          "title": "Class.IsPOD",
          "path": "cppsharp.ast.class.ispod.md"
        },
        {
          "title": "Class.Type",
          "path": "cppsharp.ast.class.type.md"
        },
        {
          "title": "Class.Layout",
          "path": "cppsharp.ast.class.layout.md"
        },
        {
          "title": "Class.IsAbstract",
          "path": "cppsharp.ast.class.isabstract.md"
        },
        {
          "title": "Class.IsUnion",
          "path": "cppsharp.ast.class.isunion.md"
        },
        {
          "title": "Class.TagKind",
          "path": "cppsharp.ast.class.tagkind.md"
        },
        {
          "title": "Class.IsFinal",
          "path": "cppsharp.ast.class.isfinal.md"
        },
        {
          "title": "Class.IsInjected",
          "path": "cppsharp.ast.class.isinjected.md"
        },
        {
          "title": "Class.IsOpaque",
          "path": "cppsharp.ast.class.isopaque.md"
        },
        {
          "title": "Class.IsDynamic",
          "path": "cppsharp.ast.class.isdynamic.md"
        },
        {
          "title": "Class.IsPolymorphic",
          "path": "cppsharp.ast.class.ispolymorphic.md"
        },
        {
          "title": "Class.HasNonTrivialDefaultConstructor",
          "path": "cppsharp.ast.class.hasnontrivialdefaultconstructor.md"
        },
        {
          "title": "Class.HasNonTrivialCopyConstructor",
          "path": "cppsharp.ast.class.hasnontrivialcopyconstructor.md"
        },
        {
          "title": "Class.HasNonTrivialDestructor",
          "path": "cppsharp.ast.class.hasnontrivialdestructor.md"
        },
        {
          "title": "Class.IsStatic",
          "path": "cppsharp.ast.class.isstatic.md"
        },
        {
          "title": "Class()",
          "path": "cppsharp.ast.class..ctor.md"
        },
        {
          "title": "Class.HasBase",
          "path": "cppsharp.ast.class.hasbase.md"
        },
        {
          "title": "Class.HasBaseClass",
          "path": "cppsharp.ast.class.hasbaseclass.md"
        },
        {
          "title": "Class.BaseClass",
          "path": "cppsharp.ast.class.baseclass.md"
        },
        {
          "title": "Class.HasNonIgnoredBase",
          "path": "cppsharp.ast.class.hasnonignoredbase.md"
        },
        {
          "title": "Class.NeedsBase",
          "path": "cppsharp.ast.class.needsbase.md"
        },
        {
          "title": "Class.OriginalClass",
          "path": "cppsharp.ast.class.originalclass.md"
        },
        {
          "title": "Class.IsValueType",
          "path": "cppsharp.ast.class.isvaluetype.md"
        },
        {
          "title": "Class.IsRefType",
          "path": "cppsharp.ast.class.isreftype.md"
        },
        {
          "title": "Class.IsInterface",
          "path": "cppsharp.ast.class.isinterface.md"
        },
        {
          "title": "Class.HasUnionFields",
          "path": "cppsharp.ast.class.hasunionfields.md"
        },
        {
          "title": "Class.IsAbstractImpl",
          "path": "cppsharp.ast.class.isabstractimpl.md"
        },
        {
          "title": "Class.Constructors",
          "path": "cppsharp.ast.class.constructors.md"
        },
        {
          "title": "Class.Destructors",
          "path": "cppsharp.ast.class.destructors.md"
        },
        {
          "title": "Class.Operators",
          "path": "cppsharp.ast.class.operators.md"
        },
        {
          "title": "Class.TemplateParameters",
          "path": "cppsharp.ast.class.templateparameters.md"
        },
        {
          "title": "Class.Specializations",
          "path": "cppsharp.ast.class.specializations.md"
        },
        {
          "title": "Class.IsTemplate",
          "path": "cppsharp.ast.class.istemplate.md"
        },
        {
          "title": "Class.FindOperator(CXXOperatorKind)",
          "path": "cppsharp.ast.class.findoperator.md"
        },
        {
          "title": "Class.GetOverloads(Function)",
          "path": "cppsharp.ast.class.getoverloads.md"
        },
        {
          "title": "Class.FindMethod(string)",
          "path": "cppsharp.ast.class.findmethod.md"
        },
        {
          "title": "Class.FindMethodByUSR(string)",
          "path": "cppsharp.ast.class.findmethodbyusr.md"
        },
        {
          "title": "Class.FindVariable(string)",
          "path": "cppsharp.ast.class.findvariable.md"
        },
        {
          "title": "Class.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.class.visit.md"
        },
        {
          "title": "Class",
          "path": "cppsharp.ast.class.md"
        },
        {
          "title": "ClassExtensions.GetFunctionOverloads(Class,Function)",
          "path": "cppsharp.ast.classextensions.getfunctionoverloads.md"
        },
        {
          "title": "ClassExtensions.HasClassInHierarchy(Class,string)",
          "path": "cppsharp.ast.classextensions.hasclassinhierarchy.md"
        },
        {
          "title": "ClassExtensions.FindHierarchy(Class,Func\u003CClass, bool\u003E)",
          "path": "cppsharp.ast.classextensions.findhierarchy-1.md"
        },
        {
          "title": "ClassExtensions.FindHierarchy(Class,Func\u003CClass, IEnumerable\u003CT\u003E\u003E)",
          "path": "cppsharp.ast.classextensions.findhierarchy-2.md"
        },
        {
          "title": "ClassExtensions.GetAbstractMethods(Class)",
          "path": "cppsharp.ast.classextensions.getabstractmethods.md"
        },
        {
          "title": "ClassExtensions.GetNonIgnoredRootBase(Class)",
          "path": "cppsharp.ast.classextensions.getnonignoredrootbase.md"
        },
        {
          "title": "ClassExtensions.GetBaseMethod(Class,Method)",
          "path": "cppsharp.ast.classextensions.getbasemethod.md"
        },
        {
          "title": "ClassExtensions.GetBaseProperty(Class,Property)",
          "path": "cppsharp.ast.classextensions.getbaseproperty.md"
        },
        {
          "title": "ClassExtensions.GetBasePropertyByName(Class,Property,bool)",
          "path": "cppsharp.ast.classextensions.getbasepropertybyname.md"
        },
        {
          "title": "ClassExtensions.GetPropertyByName(Class,string)",
          "path": "cppsharp.ast.classextensions.getpropertybyname.md"
        },
        {
          "title": "ClassExtensions.GetPropertyByConstituentMethod(Class,Method)",
          "path": "cppsharp.ast.classextensions.getpropertybyconstituentmethod.md"
        },
        {
          "title": "ClassExtensions.HasRefBase(Class)",
          "path": "cppsharp.ast.classextensions.hasrefbase.md"
        },
        {
          "title": "ClassExtensions.GetGenerated(IEnumerable\u003CTranslationUnit\u003E)",
          "path": "cppsharp.ast.classextensions.getgenerated.md"
        },
        {
          "title": "ClassExtensions.GetSpecializedClassesToGenerate(Class)",
          "path": "cppsharp.ast.classextensions.getspecializedclassestogenerate.md"
        },
        {
          "title": "ClassExtensions.GetInterface(Class)",
          "path": "cppsharp.ast.classextensions.getinterface.md"
        },
        {
          "title": "ClassExtensions.GetParentSpecialization(Class)",
          "path": "cppsharp.ast.classextensions.getparentspecialization.md"
        },
        {
          "title": "ClassExtensions.HasDependentValueFieldInLayout(Class,IEnumerable\u003CClassTemplateSpecialization\u003E)",
          "path": "cppsharp.ast.classextensions.hasdependentvaluefieldinlayout.md"
        },
        {
          "title": "ClassExtensions.GetConstCharFieldProperties(Class)",
          "path": "cppsharp.ast.classextensions.getconstcharfieldproperties.md"
        },
        {
          "title": "ClassExtensions",
          "path": "cppsharp.ast.classextensions.md"
        },
        {
          "title": "VTableComponentKind.VCallOffset",
          "path": "cppsharp.ast.vtablecomponentkind.vcalloffset.md"
        },
        {
          "title": "VTableComponentKind.VBaseOffset",
          "path": "cppsharp.ast.vtablecomponentkind.vbaseoffset.md"
        },
        {
          "title": "VTableComponentKind.OffsetToTop",
          "path": "cppsharp.ast.vtablecomponentkind.offsettotop.md"
        },
        {
          "title": "VTableComponentKind.RTTI",
          "path": "cppsharp.ast.vtablecomponentkind.rtti.md"
        },
        {
          "title": "VTableComponentKind.FunctionPointer",
          "path": "cppsharp.ast.vtablecomponentkind.functionpointer.md"
        },
        {
          "title": "VTableComponentKind.CompleteDtorPointer",
          "path": "cppsharp.ast.vtablecomponentkind.completedtorpointer.md"
        },
        {
          "title": "VTableComponentKind.DeletingDtorPointer",
          "path": "cppsharp.ast.vtablecomponentkind.deletingdtorpointer.md"
        },
        {
          "title": "VTableComponentKind.UnusedFunctionPointer",
          "path": "cppsharp.ast.vtablecomponentkind.unusedfunctionpointer.md"
        },
        {
          "title": "VTableComponentKind",
          "path": "cppsharp.ast.vtablecomponentkind.md"
        },
        {
          "title": "VTableComponent.Kind",
          "path": "cppsharp.ast.vtablecomponent.kind.md"
        },
        {
          "title": "VTableComponent.Offset",
          "path": "cppsharp.ast.vtablecomponent.offset.md"
        },
        {
          "title": "VTableComponent.Declaration",
          "path": "cppsharp.ast.vtablecomponent.declaration.md"
        },
        {
          "title": "VTableComponent.Method",
          "path": "cppsharp.ast.vtablecomponent.method.md"
        },
        {
          "title": "VTableComponent",
          "path": "cppsharp.ast.vtablecomponent.md"
        },
        {
          "title": "VTableLayout.Components",
          "path": "cppsharp.ast.vtablelayout.components.md"
        },
        {
          "title": "VTableLayout()",
          "path": "cppsharp.ast.vtablelayout..ctor.md"
        },
        {
          "title": "VTableLayout",
          "path": "cppsharp.ast.vtablelayout.md"
        },
        {
          "title": "VFTableInfo.VBTableIndex",
          "path": "cppsharp.ast.vftableinfo.vbtableindex.md"
        },
        {
          "title": "VFTableInfo.VFPtrOffset",
          "path": "cppsharp.ast.vftableinfo.vfptroffset.md"
        },
        {
          "title": "VFTableInfo.VFPtrFullOffset",
          "path": "cppsharp.ast.vftableinfo.vfptrfulloffset.md"
        },
        {
          "title": "VFTableInfo.Layout",
          "path": "cppsharp.ast.vftableinfo.layout.md"
        },
        {
          "title": "VFTableInfo",
          "path": "cppsharp.ast.vftableinfo.md"
        },
        {
          "title": "RecordArgABI.Default",
          "path": "cppsharp.ast.recordargabi.default.md"
        },
        {
          "title": "RecordArgABI.DirectInMemory",
          "path": "cppsharp.ast.recordargabi.directinmemory.md"
        },
        {
          "title": "RecordArgABI.Indirect",
          "path": "cppsharp.ast.recordargabi.indirect.md"
        },
        {
          "title": "RecordArgABI",
          "path": "cppsharp.ast.recordargabi.md"
        },
        {
          "title": "ClassLayout.ABI",
          "path": "cppsharp.ast.classlayout.abi.md"
        },
        {
          "title": "ClassLayout.ArgABI",
          "path": "cppsharp.ast.classlayout.argabi.md"
        },
        {
          "title": "ClassLayout.VFTables",
          "path": "cppsharp.ast.classlayout.vftables.md"
        },
        {
          "title": "ClassLayout.Layout",
          "path": "cppsharp.ast.classlayout.layout.md"
        },
        {
          "title": "ClassLayout()",
          "path": "cppsharp.ast.classlayout..ctor-1.md"
        },
        {
          "title": "ClassLayout.Fields",
          "path": "cppsharp.ast.classlayout.fields.md"
        },
        {
          "title": "ClassLayout.Bases",
          "path": "cppsharp.ast.classlayout.bases.md"
        },
        {
          "title": "ClassLayout(ClassLayout)",
          "path": "cppsharp.ast.classlayout..ctor-2.md"
        },
        {
          "title": "ClassLayout.HasOwnVFPtr",
          "path": "cppsharp.ast.classlayout.hasownvfptr.md"
        },
        {
          "title": "ClassLayout.VBPtrOffset",
          "path": "cppsharp.ast.classlayout.vbptroffset.md"
        },
        {
          "title": "ClassLayout.PrimaryBase",
          "path": "cppsharp.ast.classlayout.primarybase.md"
        },
        {
          "title": "ClassLayout.HasVirtualBases",
          "path": "cppsharp.ast.classlayout.hasvirtualbases.md"
        },
        {
          "title": "ClassLayout.Alignment",
          "path": "cppsharp.ast.classlayout.alignment.md"
        },
        {
          "title": "ClassLayout.Size",
          "path": "cppsharp.ast.classlayout.size.md"
        },
        {
          "title": "ClassLayout.DataSize",
          "path": "cppsharp.ast.classlayout.datasize.md"
        },
        {
          "title": "ClassLayout.VTablePointers",
          "path": "cppsharp.ast.classlayout.vtablepointers.md"
        },
        {
          "title": "ClassLayout.HasSubclassAtNonZeroOffset",
          "path": "cppsharp.ast.classlayout.hassubclassatnonzerooffset.md"
        },
        {
          "title": "ClassLayout",
          "path": "cppsharp.ast.classlayout.md"
        },
        {
          "title": "CommentKind.Invalid",
          "path": "cppsharp.ast.commentkind.invalid.md"
        },
        {
          "title": "CommentKind.BCPL",
          "path": "cppsharp.ast.commentkind.bcpl.md"
        },
        {
          "title": "CommentKind.C",
          "path": "cppsharp.ast.commentkind.c.md"
        },
        {
          "title": "CommentKind.BCPLSlash",
          "path": "cppsharp.ast.commentkind.bcplslash.md"
        },
        {
          "title": "CommentKind.BCPLExcl",
          "path": "cppsharp.ast.commentkind.bcplexcl.md"
        },
        {
          "title": "CommentKind.JavaDoc",
          "path": "cppsharp.ast.commentkind.javadoc.md"
        },
        {
          "title": "CommentKind.Qt",
          "path": "cppsharp.ast.commentkind.qt.md"
        },
        {
          "title": "CommentKind.Merged",
          "path": "cppsharp.ast.commentkind.merged.md"
        },
        {
          "title": "CommentKind",
          "path": "cppsharp.ast.commentkind.md"
        },
        {
          "title": "DocumentationCommentKind.FullComment",
          "path": "cppsharp.ast.documentationcommentkind.fullcomment.md"
        },
        {
          "title": "DocumentationCommentKind.BlockContentComment",
          "path": "cppsharp.ast.documentationcommentkind.blockcontentcomment.md"
        },
        {
          "title": "DocumentationCommentKind.BlockCommandComment",
          "path": "cppsharp.ast.documentationcommentkind.blockcommandcomment.md"
        },
        {
          "title": "DocumentationCommentKind.ParamCommandComment",
          "path": "cppsharp.ast.documentationcommentkind.paramcommandcomment.md"
        },
        {
          "title": "DocumentationCommentKind.TParamCommandComment",
          "path": "cppsharp.ast.documentationcommentkind.tparamcommandcomment.md"
        },
        {
          "title": "DocumentationCommentKind.VerbatimBlockComment",
          "path": "cppsharp.ast.documentationcommentkind.verbatimblockcomment.md"
        },
        {
          "title": "DocumentationCommentKind.VerbatimLineComment",
          "path": "cppsharp.ast.documentationcommentkind.verbatimlinecomment.md"
        },
        {
          "title": "DocumentationCommentKind.ParagraphComment",
          "path": "cppsharp.ast.documentationcommentkind.paragraphcomment.md"
        },
        {
          "title": "DocumentationCommentKind.HTMLTagComment",
          "path": "cppsharp.ast.documentationcommentkind.htmltagcomment.md"
        },
        {
          "title": "DocumentationCommentKind.HTMLStartTagComment",
          "path": "cppsharp.ast.documentationcommentkind.htmlstarttagcomment.md"
        },
        {
          "title": "DocumentationCommentKind.HTMLEndTagComment",
          "path": "cppsharp.ast.documentationcommentkind.htmlendtagcomment.md"
        },
        {
          "title": "DocumentationCommentKind.TextComment",
          "path": "cppsharp.ast.documentationcommentkind.textcomment.md"
        },
        {
          "title": "DocumentationCommentKind.InlineContentComment",
          "path": "cppsharp.ast.documentationcommentkind.inlinecontentcomment.md"
        },
        {
          "title": "DocumentationCommentKind.InlineCommandComment",
          "path": "cppsharp.ast.documentationcommentkind.inlinecommandcomment.md"
        },
        {
          "title": "DocumentationCommentKind.VerbatimBlockLineComment",
          "path": "cppsharp.ast.documentationcommentkind.verbatimblocklinecomment.md"
        },
        {
          "title": "DocumentationCommentKind",
          "path": "cppsharp.ast.documentationcommentkind.md"
        },
        {
          "title": "RawComment.Kind",
          "path": "cppsharp.ast.rawcomment.kind.md"
        },
        {
          "title": "RawComment.Text",
          "path": "cppsharp.ast.rawcomment.text.md"
        },
        {
          "title": "RawComment.BriefText",
          "path": "cppsharp.ast.rawcomment.brieftext.md"
        },
        {
          "title": "RawComment.IsInvalid",
          "path": "cppsharp.ast.rawcomment.isinvalid.md"
        },
        {
          "title": "RawComment.IsOrdinary",
          "path": "cppsharp.ast.rawcomment.isordinary.md"
        },
        {
          "title": "RawComment.IsDocumentation",
          "path": "cppsharp.ast.rawcomment.isdocumentation.md"
        },
        {
          "title": "RawComment.FullComment",
          "path": "cppsharp.ast.rawcomment.fullcomment.md"
        },
        {
          "title": "RawComment",
          "path": "cppsharp.ast.rawcomment.md"
        },
        {
          "title": "ICommentVisitor.VisitBlockCommand(BlockCommandComment)",
          "path": "cppsharp.ast.icommentvisitor.visitblockcommand.md"
        },
        {
          "title": "ICommentVisitor.VisitParamCommand(ParamCommandComment)",
          "path": "cppsharp.ast.icommentvisitor.visitparamcommand.md"
        },
        {
          "title": "ICommentVisitor.VisitTParamCommand(TParamCommandComment)",
          "path": "cppsharp.ast.icommentvisitor.visittparamcommand.md"
        },
        {
          "title": "ICommentVisitor.VisitVerbatimBlock(VerbatimBlockComment)",
          "path": "cppsharp.ast.icommentvisitor.visitverbatimblock.md"
        },
        {
          "title": "ICommentVisitor.VisitVerbatimLine(VerbatimLineComment)",
          "path": "cppsharp.ast.icommentvisitor.visitverbatimline.md"
        },
        {
          "title": "ICommentVisitor.VisitParagraphCommand(ParagraphComment)",
          "path": "cppsharp.ast.icommentvisitor.visitparagraphcommand.md"
        },
        {
          "title": "ICommentVisitor.VisitFull(FullComment)",
          "path": "cppsharp.ast.icommentvisitor.visitfull.md"
        },
        {
          "title": "ICommentVisitor.VisitHTMLStartTag(HTMLStartTagComment)",
          "path": "cppsharp.ast.icommentvisitor.visithtmlstarttag.md"
        },
        {
          "title": "ICommentVisitor.VisitHTMLEndTag(HTMLEndTagComment)",
          "path": "cppsharp.ast.icommentvisitor.visithtmlendtag.md"
        },
        {
          "title": "ICommentVisitor.VisitText(TextComment)",
          "path": "cppsharp.ast.icommentvisitor.visittext.md"
        },
        {
          "title": "ICommentVisitor.VisitInlineCommand(InlineCommandComment)",
          "path": "cppsharp.ast.icommentvisitor.visitinlinecommand.md"
        },
        {
          "title": "ICommentVisitor.VisitVerbatimBlockLine(VerbatimBlockLineComment)",
          "path": "cppsharp.ast.icommentvisitor.visitverbatimblockline.md"
        },
        {
          "title": "ICommentVisitor",
          "path": "cppsharp.ast.icommentvisitor.md"
        },
        {
          "title": "Comment.Kind",
          "path": "cppsharp.ast.comment.kind.md"
        },
        {
          "title": "Comment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.comment.visit.md"
        },
        {
          "title": "Comment.GetMultiLineCommentPrologue(CommentKind)",
          "path": "cppsharp.ast.comment.getmultilinecommentprologue.md"
        },
        {
          "title": "Comment.GetLineCommentPrologue(CommentKind)",
          "path": "cppsharp.ast.comment.getlinecommentprologue.md"
        },
        {
          "title": "Comment.GetLineCommentEpilogue(CommentKind)",
          "path": "cppsharp.ast.comment.getlinecommentepilogue.md"
        },
        {
          "title": "Comment",
          "path": "cppsharp.ast.comment.md"
        },
        {
          "title": "FullComment.Blocks",
          "path": "cppsharp.ast.fullcomment.blocks.md"
        },
        {
          "title": "FullComment()",
          "path": "cppsharp.ast.fullcomment..ctor.md"
        },
        {
          "title": "FullComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.fullcomment.visit.md"
        },
        {
          "title": "FullComment",
          "path": "cppsharp.ast.fullcomment.md"
        },
        {
          "title": "BlockContentComment",
          "path": "cppsharp.ast.blockcontentcomment.md"
        },
        {
          "title": "Argument.Text",
          "path": "cppsharp.ast.blockcommandcomment.argument.text.md"
        },
        {
          "title": "Argument",
          "path": "cppsharp.ast.blockcommandcomment.argument.md"
        },
        {
          "title": "BlockCommandComment.CommandId",
          "path": "cppsharp.ast.blockcommandcomment.commandid.md"
        },
        {
          "title": "BlockCommandComment.CommandKind",
          "path": "cppsharp.ast.blockcommandcomment.commandkind.md"
        },
        {
          "title": "BlockCommandComment.ParagraphComment",
          "path": "cppsharp.ast.blockcommandcomment.paragraphcomment.md"
        },
        {
          "title": "BlockCommandComment.Arguments",
          "path": "cppsharp.ast.blockcommandcomment.arguments.md"
        },
        {
          "title": "BlockCommandComment()",
          "path": "cppsharp.ast.blockcommandcomment..ctor.md"
        },
        {
          "title": "BlockCommandComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.blockcommandcomment.visit.md"
        },
        {
          "title": "BlockCommandComment",
          "path": "cppsharp.ast.blockcommandcomment.md"
        },
        {
          "title": "ParamCommandComment.InvalidParamIndex",
          "path": "cppsharp.ast.paramcommandcomment.invalidparamindex.md"
        },
        {
          "title": "ParamCommandComment.VarArgParamIndex",
          "path": "cppsharp.ast.paramcommandcomment.varargparamindex.md"
        },
        {
          "title": "ParamCommandComment()",
          "path": "cppsharp.ast.paramcommandcomment..ctor.md"
        },
        {
          "title": "PassDirection.In",
          "path": "cppsharp.ast.paramcommandcomment.passdirection.in.md"
        },
        {
          "title": "PassDirection.Out",
          "path": "cppsharp.ast.paramcommandcomment.passdirection.out.md"
        },
        {
          "title": "PassDirection.InOut",
          "path": "cppsharp.ast.paramcommandcomment.passdirection.inout.md"
        },
        {
          "title": "PassDirection",
          "path": "cppsharp.ast.paramcommandcomment.passdirection.md"
        },
        {
          "title": "ParamCommandComment.IsParamIndexValid",
          "path": "cppsharp.ast.paramcommandcomment.isparamindexvalid.md"
        },
        {
          "title": "ParamCommandComment.IsVarArgParam",
          "path": "cppsharp.ast.paramcommandcomment.isvarargparam.md"
        },
        {
          "title": "ParamCommandComment.ParamIndex",
          "path": "cppsharp.ast.paramcommandcomment.paramindex.md"
        },
        {
          "title": "ParamCommandComment.Direction",
          "path": "cppsharp.ast.paramcommandcomment.direction.md"
        },
        {
          "title": "ParamCommandComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.paramcommandcomment.visit.md"
        },
        {
          "title": "ParamCommandComment",
          "path": "cppsharp.ast.paramcommandcomment.md"
        },
        {
          "title": "TParamCommandComment.Position",
          "path": "cppsharp.ast.tparamcommandcomment.position.md"
        },
        {
          "title": "TParamCommandComment()",
          "path": "cppsharp.ast.tparamcommandcomment..ctor.md"
        },
        {
          "title": "TParamCommandComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.tparamcommandcomment.visit.md"
        },
        {
          "title": "TParamCommandComment",
          "path": "cppsharp.ast.tparamcommandcomment.md"
        },
        {
          "title": "VerbatimBlockComment.Lines",
          "path": "cppsharp.ast.verbatimblockcomment.lines.md"
        },
        {
          "title": "VerbatimBlockComment()",
          "path": "cppsharp.ast.verbatimblockcomment..ctor.md"
        },
        {
          "title": "VerbatimBlockComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.verbatimblockcomment.visit.md"
        },
        {
          "title": "VerbatimBlockComment",
          "path": "cppsharp.ast.verbatimblockcomment.md"
        },
        {
          "title": "VerbatimLineComment.Text",
          "path": "cppsharp.ast.verbatimlinecomment.text.md"
        },
        {
          "title": "VerbatimLineComment()",
          "path": "cppsharp.ast.verbatimlinecomment..ctor.md"
        },
        {
          "title": "VerbatimLineComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.verbatimlinecomment.visit.md"
        },
        {
          "title": "VerbatimLineComment",
          "path": "cppsharp.ast.verbatimlinecomment.md"
        },
        {
          "title": "ParagraphComment.Content",
          "path": "cppsharp.ast.paragraphcomment.content.md"
        },
        {
          "title": "ParagraphComment.IsWhitespace",
          "path": "cppsharp.ast.paragraphcomment.iswhitespace.md"
        },
        {
          "title": "ParagraphComment()",
          "path": "cppsharp.ast.paragraphcomment..ctor.md"
        },
        {
          "title": "ParagraphComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.paragraphcomment.visit.md"
        },
        {
          "title": "ParagraphComment",
          "path": "cppsharp.ast.paragraphcomment.md"
        },
        {
          "title": "InlineContentComment.HasTrailingNewline",
          "path": "cppsharp.ast.inlinecontentcomment.hastrailingnewline.md"
        },
        {
          "title": "InlineContentComment",
          "path": "cppsharp.ast.inlinecontentcomment.md"
        },
        {
          "title": "HTMLTagComment.TagName",
          "path": "cppsharp.ast.htmltagcomment.tagname.md"
        },
        {
          "title": "HTMLTagComment",
          "path": "cppsharp.ast.htmltagcomment.md"
        },
        {
          "title": "Attribute.Name",
          "path": "cppsharp.ast.htmlstarttagcomment.attribute.name.md"
        },
        {
          "title": "Attribute.Value",
          "path": "cppsharp.ast.htmlstarttagcomment.attribute.value.md"
        },
        {
          "title": "Attribute",
          "path": "cppsharp.ast.htmlstarttagcomment.attribute.md"
        },
        {
          "title": "HTMLStartTagComment.Attributes",
          "path": "cppsharp.ast.htmlstarttagcomment.attributes.md"
        },
        {
          "title": "HTMLStartTagComment()",
          "path": "cppsharp.ast.htmlstarttagcomment..ctor.md"
        },
        {
          "title": "HTMLStartTagComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.htmlstarttagcomment.visit.md"
        },
        {
          "title": "HTMLStartTagComment",
          "path": "cppsharp.ast.htmlstarttagcomment.md"
        },
        {
          "title": "HTMLEndTagComment()",
          "path": "cppsharp.ast.htmlendtagcomment..ctor.md"
        },
        {
          "title": "HTMLEndTagComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.htmlendtagcomment.visit.md"
        },
        {
          "title": "HTMLEndTagComment",
          "path": "cppsharp.ast.htmlendtagcomment.md"
        },
        {
          "title": "TextComment.Text",
          "path": "cppsharp.ast.textcomment.text.md"
        },
        {
          "title": "TextComment()",
          "path": "cppsharp.ast.textcomment..ctor.md"
        },
        {
          "title": "TextComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.textcomment.visit.md"
        },
        {
          "title": "TextComment",
          "path": "cppsharp.ast.textcomment.md"
        },
        {
          "title": "Argument.Text",
          "path": "cppsharp.ast.inlinecommandcomment.argument.text.md"
        },
        {
          "title": "Argument",
          "path": "cppsharp.ast.inlinecommandcomment.argument.md"
        },
        {
          "title": "RenderKind.RenderNormal",
          "path": "cppsharp.ast.inlinecommandcomment.renderkind.rendernormal.md"
        },
        {
          "title": "RenderKind.RenderBold",
          "path": "cppsharp.ast.inlinecommandcomment.renderkind.renderbold.md"
        },
        {
          "title": "RenderKind.RenderMonospaced",
          "path": "cppsharp.ast.inlinecommandcomment.renderkind.rendermonospaced.md"
        },
        {
          "title": "RenderKind.RenderEmphasized",
          "path": "cppsharp.ast.inlinecommandcomment.renderkind.renderemphasized.md"
        },
        {
          "title": "RenderKind.RenderAnchor",
          "path": "cppsharp.ast.inlinecommandcomment.renderkind.renderanchor.md"
        },
        {
          "title": "RenderKind",
          "path": "cppsharp.ast.inlinecommandcomment.renderkind.md"
        },
        {
          "title": "InlineCommandComment.CommandId",
          "path": "cppsharp.ast.inlinecommandcomment.commandid.md"
        },
        {
          "title": "InlineCommandComment.CommandKind",
          "path": "cppsharp.ast.inlinecommandcomment.commandkind.md"
        },
        {
          "title": "InlineCommandComment.CommentRenderKind",
          "path": "cppsharp.ast.inlinecommandcomment.commentrenderkind.md"
        },
        {
          "title": "InlineCommandComment.Arguments",
          "path": "cppsharp.ast.inlinecommandcomment.arguments.md"
        },
        {
          "title": "InlineCommandComment()",
          "path": "cppsharp.ast.inlinecommandcomment..ctor.md"
        },
        {
          "title": "InlineCommandComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.inlinecommandcomment.visit.md"
        },
        {
          "title": "InlineCommandComment",
          "path": "cppsharp.ast.inlinecommandcomment.md"
        },
        {
          "title": "VerbatimBlockLineComment.Text",
          "path": "cppsharp.ast.verbatimblocklinecomment.text.md"
        },
        {
          "title": "VerbatimBlockLineComment()",
          "path": "cppsharp.ast.verbatimblocklinecomment..ctor.md"
        },
        {
          "title": "VerbatimBlockLineComment.Visit(ICommentVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.verbatimblocklinecomment.visit.md"
        },
        {
          "title": "VerbatimBlockLineComment",
          "path": "cppsharp.ast.verbatimblocklinecomment.md"
        },
        {
          "title": "CommentCommandKind.A",
          "path": "cppsharp.ast.commentcommandkind.a.md"
        },
        {
          "title": "CommentCommandKind.Abstract",
          "path": "cppsharp.ast.commentcommandkind.abstract.md"
        },
        {
          "title": "CommentCommandKind.Addindex",
          "path": "cppsharp.ast.commentcommandkind.addindex.md"
        },
        {
          "title": "CommentCommandKind.Addtogroup",
          "path": "cppsharp.ast.commentcommandkind.addtogroup.md"
        },
        {
          "title": "CommentCommandKind.Anchor",
          "path": "cppsharp.ast.commentcommandkind.anchor.md"
        },
        {
          "title": "CommentCommandKind.Arg",
          "path": "cppsharp.ast.commentcommandkind.arg.md"
        },
        {
          "title": "CommentCommandKind.Attention",
          "path": "cppsharp.ast.commentcommandkind.attention.md"
        },
        {
          "title": "CommentCommandKind.Author",
          "path": "cppsharp.ast.commentcommandkind.author.md"
        },
        {
          "title": "CommentCommandKind.Authors",
          "path": "cppsharp.ast.commentcommandkind.authors.md"
        },
        {
          "title": "CommentCommandKind.B",
          "path": "cppsharp.ast.commentcommandkind.b.md"
        },
        {
          "title": "CommentCommandKind.Brief",
          "path": "cppsharp.ast.commentcommandkind.brief.md"
        },
        {
          "title": "CommentCommandKind.Bug",
          "path": "cppsharp.ast.commentcommandkind.bug.md"
        },
        {
          "title": "CommentCommandKind.C",
          "path": "cppsharp.ast.commentcommandkind.c.md"
        },
        {
          "title": "CommentCommandKind.Callgraph",
          "path": "cppsharp.ast.commentcommandkind.callgraph.md"
        },
        {
          "title": "CommentCommandKind.Callback",
          "path": "cppsharp.ast.commentcommandkind.callback.md"
        },
        {
          "title": "CommentCommandKind.Callergraph",
          "path": "cppsharp.ast.commentcommandkind.callergraph.md"
        },
        {
          "title": "CommentCommandKind.Category",
          "path": "cppsharp.ast.commentcommandkind.category.md"
        },
        {
          "title": "CommentCommandKind.Cite",
          "path": "cppsharp.ast.commentcommandkind.cite.md"
        },
        {
          "title": "CommentCommandKind.Class",
          "path": "cppsharp.ast.commentcommandkind.class.md"
        },
        {
          "title": "CommentCommandKind.Classdesign",
          "path": "cppsharp.ast.commentcommandkind.classdesign.md"
        },
        {
          "title": "CommentCommandKind.Coclass",
          "path": "cppsharp.ast.commentcommandkind.coclass.md"
        },
        {
          "title": "CommentCommandKind.Code",
          "path": "cppsharp.ast.commentcommandkind.code.md"
        },
        {
          "title": "CommentCommandKind.Endcode",
          "path": "cppsharp.ast.commentcommandkind.endcode.md"
        },
        {
          "title": "CommentCommandKind.Concept",
          "path": "cppsharp.ast.commentcommandkind.concept.md"
        },
        {
          "title": "CommentCommandKind.Cond",
          "path": "cppsharp.ast.commentcommandkind.cond.md"
        },
        {
          "title": "CommentCommandKind.Const",
          "path": "cppsharp.ast.commentcommandkind.const.md"
        },
        {
          "title": "CommentCommandKind.Constant",
          "path": "cppsharp.ast.commentcommandkind.constant.md"
        },
        {
          "title": "CommentCommandKind.Copybrief",
          "path": "cppsharp.ast.commentcommandkind.copybrief.md"
        },
        {
          "title": "CommentCommandKind.Copydetails",
          "path": "cppsharp.ast.commentcommandkind.copydetails.md"
        },
        {
          "title": "CommentCommandKind.Copydoc",
          "path": "cppsharp.ast.commentcommandkind.copydoc.md"
        },
        {
          "title": "CommentCommandKind.Copyright",
          "path": "cppsharp.ast.commentcommandkind.copyright.md"
        },
        {
          "title": "CommentCommandKind.Date",
          "path": "cppsharp.ast.commentcommandkind.date.md"
        },
        {
          "title": "CommentCommandKind.Def",
          "path": "cppsharp.ast.commentcommandkind.def.md"
        },
        {
          "title": "CommentCommandKind.Defgroup",
          "path": "cppsharp.ast.commentcommandkind.defgroup.md"
        },
        {
          "title": "CommentCommandKind.Dependency",
          "path": "cppsharp.ast.commentcommandkind.dependency.md"
        },
        {
          "title": "CommentCommandKind.Deprecated",
          "path": "cppsharp.ast.commentcommandkind.deprecated.md"
        },
        {
          "title": "CommentCommandKind.Details",
          "path": "cppsharp.ast.commentcommandkind.details.md"
        },
        {
          "title": "CommentCommandKind.Diafile",
          "path": "cppsharp.ast.commentcommandkind.diafile.md"
        },
        {
          "title": "CommentCommandKind.Dir",
          "path": "cppsharp.ast.commentcommandkind.dir.md"
        },
        {
          "title": "CommentCommandKind.Discussion",
          "path": "cppsharp.ast.commentcommandkind.discussion.md"
        },
        {
          "title": "CommentCommandKind.Docbookinclude",
          "path": "cppsharp.ast.commentcommandkind.docbookinclude.md"
        },
        {
          "title": "CommentCommandKind.Docbookonly",
          "path": "cppsharp.ast.commentcommandkind.docbookonly.md"
        },
        {
          "title": "CommentCommandKind.Enddocbookonly",
          "path": "cppsharp.ast.commentcommandkind.enddocbookonly.md"
        },
        {
          "title": "CommentCommandKind.Dontinclude",
          "path": "cppsharp.ast.commentcommandkind.dontinclude.md"
        },
        {
          "title": "CommentCommandKind.Dot",
          "path": "cppsharp.ast.commentcommandkind.dot.md"
        },
        {
          "title": "CommentCommandKind.Enddot",
          "path": "cppsharp.ast.commentcommandkind.enddot.md"
        },
        {
          "title": "CommentCommandKind.Dotfile",
          "path": "cppsharp.ast.commentcommandkind.dotfile.md"
        },
        {
          "title": "CommentCommandKind.E",
          "path": "cppsharp.ast.commentcommandkind.e.md"
        },
        {
          "title": "CommentCommandKind.Else",
          "path": "cppsharp.ast.commentcommandkind.else.md"
        },
        {
          "title": "CommentCommandKind.Elseif",
          "path": "cppsharp.ast.commentcommandkind.elseif.md"
        },
        {
          "title": "CommentCommandKind.Em",
          "path": "cppsharp.ast.commentcommandkind.em.md"
        },
        {
          "title": "CommentCommandKind.Emoji",
          "path": "cppsharp.ast.commentcommandkind.emoji.md"
        },
        {
          "title": "CommentCommandKind.Endcond",
          "path": "cppsharp.ast.commentcommandkind.endcond.md"
        },
        {
          "title": "CommentCommandKind.Endif",
          "path": "cppsharp.ast.commentcommandkind.endif.md"
        },
        {
          "title": "CommentCommandKind.Enum",
          "path": "cppsharp.ast.commentcommandkind.enum.md"
        },
        {
          "title": "CommentCommandKind.Example",
          "path": "cppsharp.ast.commentcommandkind.example.md"
        },
        {
          "title": "CommentCommandKind.Exception",
          "path": "cppsharp.ast.commentcommandkind.exception.md"
        },
        {
          "title": "CommentCommandKind.Extends",
          "path": "cppsharp.ast.commentcommandkind.extends.md"
        },
        {
          "title": "CommentCommandKind.Flbrace",
          "path": "cppsharp.ast.commentcommandkind.flbrace.md"
        },
        {
          "title": "CommentCommandKind.Frbrace",
          "path": "cppsharp.ast.commentcommandkind.frbrace.md"
        },
        {
          "title": "CommentCommandKind.Flsquare",
          "path": "cppsharp.ast.commentcommandkind.flsquare.md"
        },
        {
          "title": "CommentCommandKind.Frsquare",
          "path": "cppsharp.ast.commentcommandkind.frsquare.md"
        },
        {
          "title": "CommentCommandKind.Fdollar",
          "path": "cppsharp.ast.commentcommandkind.fdollar.md"
        },
        {
          "title": "CommentCommandKind.Flparen",
          "path": "cppsharp.ast.commentcommandkind.flparen.md"
        },
        {
          "title": "CommentCommandKind.Frparen",
          "path": "cppsharp.ast.commentcommandkind.frparen.md"
        },
        {
          "title": "CommentCommandKind.File",
          "path": "cppsharp.ast.commentcommandkind.file.md"
        },
        {
          "title": "CommentCommandKind.Fn",
          "path": "cppsharp.ast.commentcommandkind.fn.md"
        },
        {
          "title": "CommentCommandKind.Function",
          "path": "cppsharp.ast.commentcommandkind.function.md"
        },
        {
          "title": "CommentCommandKind.Functiongroup",
          "path": "cppsharp.ast.commentcommandkind.functiongroup.md"
        },
        {
          "title": "CommentCommandKind.Headerfile",
          "path": "cppsharp.ast.commentcommandkind.headerfile.md"
        },
        {
          "title": "CommentCommandKind.Helper",
          "path": "cppsharp.ast.commentcommandkind.helper.md"
        },
        {
          "title": "CommentCommandKind.Helperclass",
          "path": "cppsharp.ast.commentcommandkind.helperclass.md"
        },
        {
          "title": "CommentCommandKind.Helps",
          "path": "cppsharp.ast.commentcommandkind.helps.md"
        },
        {
          "title": "CommentCommandKind.Hidecallgraph",
          "path": "cppsharp.ast.commentcommandkind.hidecallgraph.md"
        },
        {
          "title": "CommentCommandKind.Hidecallergraph",
          "path": "cppsharp.ast.commentcommandkind.hidecallergraph.md"
        },
        {
          "title": "CommentCommandKind.Hideinitializer",
          "path": "cppsharp.ast.commentcommandkind.hideinitializer.md"
        },
        {
          "title": "CommentCommandKind.Hiderefby",
          "path": "cppsharp.ast.commentcommandkind.hiderefby.md"
        },
        {
          "title": "CommentCommandKind.Hiderefs",
          "path": "cppsharp.ast.commentcommandkind.hiderefs.md"
        },
        {
          "title": "CommentCommandKind.Htmlinclude",
          "path": "cppsharp.ast.commentcommandkind.htmlinclude.md"
        },
        {
          "title": "CommentCommandKind.Htmlonly",
          "path": "cppsharp.ast.commentcommandkind.htmlonly.md"
        },
        {
          "title": "CommentCommandKind.Endhtmlonly",
          "path": "cppsharp.ast.commentcommandkind.endhtmlonly.md"
        },
        {
          "title": "CommentCommandKind.Idlexcept",
          "path": "cppsharp.ast.commentcommandkind.idlexcept.md"
        },
        {
          "title": "CommentCommandKind.If",
          "path": "cppsharp.ast.commentcommandkind.if.md"
        },
        {
          "title": "CommentCommandKind.Ifnot",
          "path": "cppsharp.ast.commentcommandkind.ifnot.md"
        },
        {
          "title": "CommentCommandKind.Image",
          "path": "cppsharp.ast.commentcommandkind.image.md"
        },
        {
          "title": "CommentCommandKind.Implements",
          "path": "cppsharp.ast.commentcommandkind.implements.md"
        },
        {
          "title": "CommentCommandKind.Include",
          "path": "cppsharp.ast.commentcommandkind.include.md"
        },
        {
          "title": "CommentCommandKind.Ingroup",
          "path": "cppsharp.ast.commentcommandkind.ingroup.md"
        },
        {
          "title": "CommentCommandKind.Instancesize",
          "path": "cppsharp.ast.commentcommandkind.instancesize.md"
        },
        {
          "title": "CommentCommandKind.Interface",
          "path": "cppsharp.ast.commentcommandkind.interface.md"
        },
        {
          "title": "CommentCommandKind.Internal",
          "path": "cppsharp.ast.commentcommandkind.internal.md"
        },
        {
          "title": "CommentCommandKind.Endinternal",
          "path": "cppsharp.ast.commentcommandkind.endinternal.md"
        },
        {
          "title": "CommentCommandKind.Invariant",
          "path": "cppsharp.ast.commentcommandkind.invariant.md"
        },
        {
          "title": "CommentCommandKind.Latexinclude",
          "path": "cppsharp.ast.commentcommandkind.latexinclude.md"
        },
        {
          "title": "CommentCommandKind.Latexonly",
          "path": "cppsharp.ast.commentcommandkind.latexonly.md"
        },
        {
          "title": "CommentCommandKind.Endlatexonly",
          "path": "cppsharp.ast.commentcommandkind.endlatexonly.md"
        },
        {
          "title": "CommentCommandKind.Li",
          "path": "cppsharp.ast.commentcommandkind.li.md"
        },
        {
          "title": "CommentCommandKind.Line",
          "path": "cppsharp.ast.commentcommandkind.line.md"
        },
        {
          "title": "CommentCommandKind.Link",
          "path": "cppsharp.ast.commentcommandkind.link.md"
        },
        {
          "title": "CommentCommandKind.Slashlink",
          "path": "cppsharp.ast.commentcommandkind.slashlink.md"
        },
        {
          "title": "CommentCommandKind.Mainpage",
          "path": "cppsharp.ast.commentcommandkind.mainpage.md"
        },
        {
          "title": "CommentCommandKind.Maninclude",
          "path": "cppsharp.ast.commentcommandkind.maninclude.md"
        },
        {
          "title": "CommentCommandKind.Manonly",
          "path": "cppsharp.ast.commentcommandkind.manonly.md"
        },
        {
          "title": "CommentCommandKind.Endmanonly",
          "path": "cppsharp.ast.commentcommandkind.endmanonly.md"
        },
        {
          "title": "CommentCommandKind.Memberof",
          "path": "cppsharp.ast.commentcommandkind.memberof.md"
        },
        {
          "title": "CommentCommandKind.Method",
          "path": "cppsharp.ast.commentcommandkind.method.md"
        },
        {
          "title": "CommentCommandKind.Methodgroup",
          "path": "cppsharp.ast.commentcommandkind.methodgroup.md"
        },
        {
          "title": "CommentCommandKind.Msc",
          "path": "cppsharp.ast.commentcommandkind.msc.md"
        },
        {
          "title": "CommentCommandKind.Endmsc",
          "path": "cppsharp.ast.commentcommandkind.endmsc.md"
        },
        {
          "title": "CommentCommandKind.Mscfile",
          "path": "cppsharp.ast.commentcommandkind.mscfile.md"
        },
        {
          "title": "CommentCommandKind.Name",
          "path": "cppsharp.ast.commentcommandkind.name.md"
        },
        {
          "title": "CommentCommandKind.Namespace",
          "path": "cppsharp.ast.commentcommandkind.namespace.md"
        },
        {
          "title": "CommentCommandKind.Noop",
          "path": "cppsharp.ast.commentcommandkind.noop.md"
        },
        {
          "title": "CommentCommandKind.Nosubgrouping",
          "path": "cppsharp.ast.commentcommandkind.nosubgrouping.md"
        },
        {
          "title": "CommentCommandKind.Note",
          "path": "cppsharp.ast.commentcommandkind.note.md"
        },
        {
          "title": "CommentCommandKind.Overload",
          "path": "cppsharp.ast.commentcommandkind.overload.md"
        },
        {
          "title": "CommentCommandKind.Ownership",
          "path": "cppsharp.ast.commentcommandkind.ownership.md"
        },
        {
          "title": "CommentCommandKind.P",
          "path": "cppsharp.ast.commentcommandkind.p.md"
        },
        {
          "title": "CommentCommandKind.Page",
          "path": "cppsharp.ast.commentcommandkind.page.md"
        },
        {
          "title": "CommentCommandKind.Par",
          "path": "cppsharp.ast.commentcommandkind.par.md"
        },
        {
          "title": "CommentCommandKind.Parblock",
          "path": "cppsharp.ast.commentcommandkind.parblock.md"
        },
        {
          "title": "CommentCommandKind.Endparblock",
          "path": "cppsharp.ast.commentcommandkind.endparblock.md"
        },
        {
          "title": "CommentCommandKind.Paragraph",
          "path": "cppsharp.ast.commentcommandkind.paragraph.md"
        },
        {
          "title": "CommentCommandKind.Param",
          "path": "cppsharp.ast.commentcommandkind.param.md"
        },
        {
          "title": "CommentCommandKind.Performance",
          "path": "cppsharp.ast.commentcommandkind.performance.md"
        },
        {
          "title": "CommentCommandKind.Post",
          "path": "cppsharp.ast.commentcommandkind.post.md"
        },
        {
          "title": "CommentCommandKind.Pre",
          "path": "cppsharp.ast.commentcommandkind.pre.md"
        },
        {
          "title": "CommentCommandKind.Private",
          "path": "cppsharp.ast.commentcommandkind.private.md"
        },
        {
          "title": "CommentCommandKind.Privatesection",
          "path": "cppsharp.ast.commentcommandkind.privatesection.md"
        },
        {
          "title": "CommentCommandKind.Property",
          "path": "cppsharp.ast.commentcommandkind.property.md"
        },
        {
          "title": "CommentCommandKind.Protected",
          "path": "cppsharp.ast.commentcommandkind.protected.md"
        },
        {
          "title": "CommentCommandKind.Protectedsection",
          "path": "cppsharp.ast.commentcommandkind.protectedsection.md"
        },
        {
          "title": "CommentCommandKind.Protocol",
          "path": "cppsharp.ast.commentcommandkind.protocol.md"
        },
        {
          "title": "CommentCommandKind.Public",
          "path": "cppsharp.ast.commentcommandkind.public.md"
        },
        {
          "title": "CommentCommandKind.Publicsection",
          "path": "cppsharp.ast.commentcommandkind.publicsection.md"
        },
        {
          "title": "CommentCommandKind.Pure",
          "path": "cppsharp.ast.commentcommandkind.pure.md"
        },
        {
          "title": "CommentCommandKind.Ref",
          "path": "cppsharp.ast.commentcommandkind.ref.md"
        },
        {
          "title": "CommentCommandKind.Refitem",
          "path": "cppsharp.ast.commentcommandkind.refitem.md"
        },
        {
          "title": "CommentCommandKind.Related",
          "path": "cppsharp.ast.commentcommandkind.related.md"
        },
        {
          "title": "CommentCommandKind.Relatedalso",
          "path": "cppsharp.ast.commentcommandkind.relatedalso.md"
        },
        {
          "title": "CommentCommandKind.Relates",
          "path": "cppsharp.ast.commentcommandkind.relates.md"
        },
        {
          "title": "CommentCommandKind.Relatesalso",
          "path": "cppsharp.ast.commentcommandkind.relatesalso.md"
        },
        {
          "title": "CommentCommandKind.Remark",
          "path": "cppsharp.ast.commentcommandkind.remark.md"
        },
        {
          "title": "CommentCommandKind.Remarks",
          "path": "cppsharp.ast.commentcommandkind.remarks.md"
        },
        {
          "title": "CommentCommandKind.Result",
          "path": "cppsharp.ast.commentcommandkind.result.md"
        },
        {
          "title": "CommentCommandKind.Return",
          "path": "cppsharp.ast.commentcommandkind.return.md"
        },
        {
          "title": "CommentCommandKind.Returns",
          "path": "cppsharp.ast.commentcommandkind.returns.md"
        },
        {
          "title": "CommentCommandKind.Retval",
          "path": "cppsharp.ast.commentcommandkind.retval.md"
        },
        {
          "title": "CommentCommandKind.Rtfinclude",
          "path": "cppsharp.ast.commentcommandkind.rtfinclude.md"
        },
        {
          "title": "CommentCommandKind.Rtfonly",
          "path": "cppsharp.ast.commentcommandkind.rtfonly.md"
        },
        {
          "title": "CommentCommandKind.Endrtfonly",
          "path": "cppsharp.ast.commentcommandkind.endrtfonly.md"
        },
        {
          "title": "CommentCommandKind.Sa",
          "path": "cppsharp.ast.commentcommandkind.sa.md"
        },
        {
          "title": "CommentCommandKind.Secreflist",
          "path": "cppsharp.ast.commentcommandkind.secreflist.md"
        },
        {
          "title": "CommentCommandKind.Endsecreflist",
          "path": "cppsharp.ast.commentcommandkind.endsecreflist.md"
        },
        {
          "title": "CommentCommandKind.Section",
          "path": "cppsharp.ast.commentcommandkind.section.md"
        },
        {
          "title": "CommentCommandKind.Security",
          "path": "cppsharp.ast.commentcommandkind.security.md"
        },
        {
          "title": "CommentCommandKind.See",
          "path": "cppsharp.ast.commentcommandkind.see.md"
        },
        {
          "title": "CommentCommandKind.Seealso",
          "path": "cppsharp.ast.commentcommandkind.seealso.md"
        },
        {
          "title": "CommentCommandKind.Short",
          "path": "cppsharp.ast.commentcommandkind.short.md"
        },
        {
          "title": "CommentCommandKind.Showinitializer",
          "path": "cppsharp.ast.commentcommandkind.showinitializer.md"
        },
        {
          "title": "CommentCommandKind.Showrefby",
          "path": "cppsharp.ast.commentcommandkind.showrefby.md"
        },
        {
          "title": "CommentCommandKind.Showrefs",
          "path": "cppsharp.ast.commentcommandkind.showrefs.md"
        },
        {
          "title": "CommentCommandKind.Since",
          "path": "cppsharp.ast.commentcommandkind.since.md"
        },
        {
          "title": "CommentCommandKind.Skip",
          "path": "cppsharp.ast.commentcommandkind.skip.md"
        },
        {
          "title": "CommentCommandKind.Skipline",
          "path": "cppsharp.ast.commentcommandkind.skipline.md"
        },
        {
          "title": "CommentCommandKind.Snippet",
          "path": "cppsharp.ast.commentcommandkind.snippet.md"
        },
        {
          "title": "CommentCommandKind.Static",
          "path": "cppsharp.ast.commentcommandkind.static.md"
        },
        {
          "title": "CommentCommandKind.Struct",
          "path": "cppsharp.ast.commentcommandkind.struct.md"
        },
        {
          "title": "CommentCommandKind.Subpage",
          "path": "cppsharp.ast.commentcommandkind.subpage.md"
        },
        {
          "title": "CommentCommandKind.Subsection",
          "path": "cppsharp.ast.commentcommandkind.subsection.md"
        },
        {
          "title": "CommentCommandKind.Subsubsection",
          "path": "cppsharp.ast.commentcommandkind.subsubsection.md"
        },
        {
          "title": "CommentCommandKind.Superclass",
          "path": "cppsharp.ast.commentcommandkind.superclass.md"
        },
        {
          "title": "CommentCommandKind.Tableofcontents",
          "path": "cppsharp.ast.commentcommandkind.tableofcontents.md"
        },
        {
          "title": "CommentCommandKind.Template",
          "path": "cppsharp.ast.commentcommandkind.template.md"
        },
        {
          "title": "CommentCommandKind.Templatefield",
          "path": "cppsharp.ast.commentcommandkind.templatefield.md"
        },
        {
          "title": "CommentCommandKind.Test",
          "path": "cppsharp.ast.commentcommandkind.test.md"
        },
        {
          "title": "CommentCommandKind.Textblock",
          "path": "cppsharp.ast.commentcommandkind.textblock.md"
        },
        {
          "title": "CommentCommandKind.Slashtextblock",
          "path": "cppsharp.ast.commentcommandkind.slashtextblock.md"
        },
        {
          "title": "CommentCommandKind.Throw",
          "path": "cppsharp.ast.commentcommandkind.throw.md"
        },
        {
          "title": "CommentCommandKind.Throws",
          "path": "cppsharp.ast.commentcommandkind.throws.md"
        },
        {
          "title": "CommentCommandKind.Todo",
          "path": "cppsharp.ast.commentcommandkind.todo.md"
        },
        {
          "title": "CommentCommandKind.Tparam",
          "path": "cppsharp.ast.commentcommandkind.tparam.md"
        },
        {
          "title": "CommentCommandKind.Typedef",
          "path": "cppsharp.ast.commentcommandkind.typedef.md"
        },
        {
          "title": "CommentCommandKind.Startuml",
          "path": "cppsharp.ast.commentcommandkind.startuml.md"
        },
        {
          "title": "CommentCommandKind.Enduml",
          "path": "cppsharp.ast.commentcommandkind.enduml.md"
        },
        {
          "title": "CommentCommandKind.Union",
          "path": "cppsharp.ast.commentcommandkind.union.md"
        },
        {
          "title": "CommentCommandKind.Until",
          "path": "cppsharp.ast.commentcommandkind.until.md"
        },
        {
          "title": "CommentCommandKind.Var",
          "path": "cppsharp.ast.commentcommandkind.var.md"
        },
        {
          "title": "CommentCommandKind.Verbinclude",
          "path": "cppsharp.ast.commentcommandkind.verbinclude.md"
        },
        {
          "title": "CommentCommandKind.Verbatim",
          "path": "cppsharp.ast.commentcommandkind.verbatim.md"
        },
        {
          "title": "CommentCommandKind.Endverbatim",
          "path": "cppsharp.ast.commentcommandkind.endverbatim.md"
        },
        {
          "title": "CommentCommandKind.Version",
          "path": "cppsharp.ast.commentcommandkind.version.md"
        },
        {
          "title": "CommentCommandKind.Warning",
          "path": "cppsharp.ast.commentcommandkind.warning.md"
        },
        {
          "title": "CommentCommandKind.Weakgroup",
          "path": "cppsharp.ast.commentcommandkind.weakgroup.md"
        },
        {
          "title": "CommentCommandKind.Xrefitem",
          "path": "cppsharp.ast.commentcommandkind.xrefitem.md"
        },
        {
          "title": "CommentCommandKind.Xmlinclude",
          "path": "cppsharp.ast.commentcommandkind.xmlinclude.md"
        },
        {
          "title": "CommentCommandKind.Xmlonly",
          "path": "cppsharp.ast.commentcommandkind.xmlonly.md"
        },
        {
          "title": "CommentCommandKind.Endxmlonly",
          "path": "cppsharp.ast.commentcommandkind.endxmlonly.md"
        },
        {
          "title": "CommentCommandKind",
          "path": "cppsharp.ast.commentcommandkind.md"
        },
        {
          "title": "MethodConversionKind.None",
          "path": "cppsharp.ast.methodconversionkind.none.md"
        },
        {
          "title": "MethodConversionKind.FunctionToInstanceMethod",
          "path": "cppsharp.ast.methodconversionkind.functiontoinstancemethod.md"
        },
        {
          "title": "MethodConversionKind.FunctionToStaticMethod",
          "path": "cppsharp.ast.methodconversionkind.functiontostaticmethod.md"
        },
        {
          "title": "MethodConversionKind",
          "path": "cppsharp.ast.methodconversionkind.md"
        },
        {
          "title": "IRedeclarableDecl.PreviousDecl",
          "path": "cppsharp.ast.iredeclarabledecl.previousdecl.md"
        },
        {
          "title": "IRedeclarableDecl",
          "path": "cppsharp.ast.iredeclarabledecl.md"
        },
        {
          "title": "ITypedDecl.Type",
          "path": "cppsharp.ast.itypeddecl.type.md"
        },
        {
          "title": "ITypedDecl.QualifiedType",
          "path": "cppsharp.ast.itypeddecl.qualifiedtype.md"
        },
        {
          "title": "ITypedDecl",
          "path": "cppsharp.ast.itypeddecl.md"
        },
        {
          "title": "INamedDecl.Name",
          "path": "cppsharp.ast.inameddecl.name.md"
        },
        {
          "title": "INamedDecl",
          "path": "cppsharp.ast.inameddecl.md"
        },
        {
          "title": "IMangledDecl.Mangled",
          "path": "cppsharp.ast.imangleddecl.mangled.md"
        },
        {
          "title": "IMangledDecl",
          "path": "cppsharp.ast.imangleddecl.md"
        },
        {
          "title": "GenerationKind.None",
          "path": "cppsharp.ast.generationkind.none.md"
        },
        {
          "title": "GenerationKind.Generate",
          "path": "cppsharp.ast.generationkind.generate.md"
        },
        {
          "title": "GenerationKind.Internal",
          "path": "cppsharp.ast.generationkind.internal.md"
        },
        {
          "title": "GenerationKind",
          "path": "cppsharp.ast.generationkind.md"
        },
        {
          "title": "DeclarationBase.IsInvalid",
          "path": "cppsharp.ast.declarationbase.isinvalid.md"
        },
        {
          "title": "DeclarationBase.GenerationKind",
          "path": "cppsharp.ast.declarationbase.generationkind.md"
        },
        {
          "title": "DeclarationBase.IsGenerated",
          "path": "cppsharp.ast.declarationbase.isgenerated.md"
        },
        {
          "title": "DeclarationBase.HasExplicitGenerationKind",
          "path": "cppsharp.ast.declarationbase.hasexplicitgenerationkind.md"
        },
        {
          "title": "DeclarationBase.IsExplicitlyGenerated",
          "path": "cppsharp.ast.declarationbase.isexplicitlygenerated.md"
        },
        {
          "title": "DeclarationBase.IsInternal",
          "path": "cppsharp.ast.declarationbase.isinternal.md"
        },
        {
          "title": "DeclarationBase.IsDeclared",
          "path": "cppsharp.ast.declarationbase.isdeclared.md"
        },
        {
          "title": "DeclarationBase.ExplicitlyIgnore()",
          "path": "cppsharp.ast.declarationbase.explicitlyignore.md"
        },
        {
          "title": "DeclarationBase.ExplicityIgnored",
          "path": "cppsharp.ast.declarationbase.explicityignored.md"
        },
        {
          "title": "DeclarationBase.Ignore",
          "path": "cppsharp.ast.declarationbase.ignore.md"
        },
        {
          "title": "DeclarationBase",
          "path": "cppsharp.ast.declarationbase.md"
        },
        {
          "title": "Declaration.Location",
          "path": "cppsharp.ast.declaration.location.md"
        },
        {
          "title": "Declaration.LineNumberStart",
          "path": "cppsharp.ast.declaration.linenumberstart.md"
        },
        {
          "title": "Declaration.LineNumberEnd",
          "path": "cppsharp.ast.declaration.linenumberend.md"
        },
        {
          "title": "Declaration.IsImplicit",
          "path": "cppsharp.ast.declaration.isimplicit.md"
        },
        {
          "title": "Declaration.AlignAs",
          "path": "cppsharp.ast.declaration.alignas.md"
        },
        {
          "title": "Declaration.MaxFieldAlignment",
          "path": "cppsharp.ast.declaration.maxfieldalignment.md"
        },
        {
          "title": "Declaration.OriginalNamespace",
          "path": "cppsharp.ast.declaration.originalnamespace.md"
        },
        {
          "title": "Declaration.Namespace",
          "path": "cppsharp.ast.declaration.namespace.md"
        },
        {
          "title": "Declaration.TranslationUnit",
          "path": "cppsharp.ast.declaration.translationunit.md"
        },
        {
          "title": "Declaration.GenerationKind",
          "path": "cppsharp.ast.declaration.generationkind.md"
        },
        {
          "title": "Declaration.OriginalName",
          "path": "cppsharp.ast.declaration.originalname.md"
        },
        {
          "title": "Declaration.Name",
          "path": "cppsharp.ast.declaration.name.md"
        },
        {
          "title": "Declaration.LogicalName",
          "path": "cppsharp.ast.declaration.logicalname.md"
        },
        {
          "title": "Declaration.LogicalOriginalName",
          "path": "cppsharp.ast.declaration.logicaloriginalname.md"
        },
        {
          "title": "Declaration.QualifiedNameSeparator",
          "path": "cppsharp.ast.declaration.qualifiednameseparator.md"
        },
        {
          "title": "Declaration.GetQualifiedName(Func\u003CDeclaration, string\u003E,Func\u003CDeclaration, DeclarationContext\u003E,bool)",
          "path": "cppsharp.ast.declaration.getqualifiedname.md"
        },
        {
          "title": "Declaration.GatherNamespaces(DeclarationContext,bool)",
          "path": "cppsharp.ast.declaration.gathernamespaces.md"
        },
        {
          "title": "Declaration.QualifiedName",
          "path": "cppsharp.ast.declaration.qualifiedname.md"
        },
        {
          "title": "Declaration.QualifiedOriginalName",
          "path": "cppsharp.ast.declaration.qualifiedoriginalname.md"
        },
        {
          "title": "Declaration.QualifiedLogicalName",
          "path": "cppsharp.ast.declaration.qualifiedlogicalname.md"
        },
        {
          "title": "Declaration.QualifiedLogicalOriginalName",
          "path": "cppsharp.ast.declaration.qualifiedlogicaloriginalname.md"
        },
        {
          "title": "Declaration.AssociatedDeclaration",
          "path": "cppsharp.ast.declaration.associateddeclaration.md"
        },
        {
          "title": "Declaration.Comment",
          "path": "cppsharp.ast.declaration.comment.md"
        },
        {
          "title": "Declaration.Access",
          "path": "cppsharp.ast.declaration.access.md"
        },
        {
          "title": "Declaration.DebugText",
          "path": "cppsharp.ast.declaration.debugtext.md"
        },
        {
          "title": "Declaration.IsIncomplete",
          "path": "cppsharp.ast.declaration.isincomplete.md"
        },
        {
          "title": "Declaration.IsDependent",
          "path": "cppsharp.ast.declaration.isdependent.md"
        },
        {
          "title": "Declaration.IsDeprecated",
          "path": "cppsharp.ast.declaration.isdeprecated.md"
        },
        {
          "title": "Declaration.CompleteDeclaration",
          "path": "cppsharp.ast.declaration.completedeclaration.md"
        },
        {
          "title": "Declaration.DefinitionOrder",
          "path": "cppsharp.ast.declaration.definitionorder.md"
        },
        {
          "title": "Declaration.ExcludeFromPasses",
          "path": "cppsharp.ast.declaration.excludefrompasses.md"
        },
        {
          "title": "Declaration.PreprocessedEntities",
          "path": "cppsharp.ast.declaration.preprocessedentities.md"
        },
        {
          "title": "Declaration.OriginalPtr",
          "path": "cppsharp.ast.declaration.originalptr.md"
        },
        {
          "title": "Declaration.USR",
          "path": "cppsharp.ast.declaration.usr.md"
        },
        {
          "title": "Declaration.Attributes",
          "path": "cppsharp.ast.declaration.attributes.md"
        },
        {
          "title": "Declaration.Redeclarations",
          "path": "cppsharp.ast.declaration.redeclarations.md"
        },
        {
          "title": "Declaration.DeclMap",
          "path": "cppsharp.ast.declaration.declmap.md"
        },
        {
          "title": "Declaration.ToString()",
          "path": "cppsharp.ast.declaration.tostring.md"
        },
        {
          "title": "Declaration.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.declaration.visit.md"
        },
        {
          "title": "Declaration",
          "path": "cppsharp.ast.declaration.md"
        },
        {
          "title": "IDeclVisitor.VisitDeclaration(Declaration)",
          "path": "cppsharp.ast.ideclvisitor.visitdeclaration.md"
        },
        {
          "title": "IDeclVisitor.VisitTranslationUnit(TranslationUnit)",
          "path": "cppsharp.ast.ideclvisitor.visittranslationunit.md"
        },
        {
          "title": "IDeclVisitor.VisitClassDecl(Class)",
          "path": "cppsharp.ast.ideclvisitor.visitclassdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitFieldDecl(Field)",
          "path": "cppsharp.ast.ideclvisitor.visitfielddecl.md"
        },
        {
          "title": "IDeclVisitor.VisitFunctionDecl(Function)",
          "path": "cppsharp.ast.ideclvisitor.visitfunctiondecl.md"
        },
        {
          "title": "IDeclVisitor.VisitMethodDecl(Method)",
          "path": "cppsharp.ast.ideclvisitor.visitmethoddecl.md"
        },
        {
          "title": "IDeclVisitor.VisitParameterDecl(Parameter)",
          "path": "cppsharp.ast.ideclvisitor.visitparameterdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitTypedefNameDecl(TypedefNameDecl)",
          "path": "cppsharp.ast.ideclvisitor.visittypedefnamedecl.md"
        },
        {
          "title": "IDeclVisitor.VisitTypedefDecl(TypedefDecl)",
          "path": "cppsharp.ast.ideclvisitor.visittypedefdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitTypeAliasDecl(TypeAlias)",
          "path": "cppsharp.ast.ideclvisitor.visittypealiasdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitEnumDecl(Enumeration)",
          "path": "cppsharp.ast.ideclvisitor.visitenumdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitEnumItemDecl(Enumeration.Item)",
          "path": "cppsharp.ast.ideclvisitor.visitenumitemdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitVariableDecl(Variable)",
          "path": "cppsharp.ast.ideclvisitor.visitvariabledecl.md"
        },
        {
          "title": "IDeclVisitor.VisitMacroDefinition(MacroDefinition)",
          "path": "cppsharp.ast.ideclvisitor.visitmacrodefinition.md"
        },
        {
          "title": "IDeclVisitor.VisitNamespace(Namespace)",
          "path": "cppsharp.ast.ideclvisitor.visitnamespace.md"
        },
        {
          "title": "IDeclVisitor.VisitEvent(Event)",
          "path": "cppsharp.ast.ideclvisitor.visitevent.md"
        },
        {
          "title": "IDeclVisitor.VisitProperty(Property)",
          "path": "cppsharp.ast.ideclvisitor.visitproperty.md"
        },
        {
          "title": "IDeclVisitor.VisitFriend(Friend)",
          "path": "cppsharp.ast.ideclvisitor.visitfriend.md"
        },
        {
          "title": "IDeclVisitor.VisitClassTemplateDecl(ClassTemplate)",
          "path": "cppsharp.ast.ideclvisitor.visitclasstemplatedecl.md"
        },
        {
          "title": "IDeclVisitor.VisitClassTemplateSpecializationDecl(ClassTemplateSpecialization)",
          "path": "cppsharp.ast.ideclvisitor.visitclasstemplatespecializationdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitFunctionTemplateDecl(FunctionTemplate)",
          "path": "cppsharp.ast.ideclvisitor.visitfunctiontemplatedecl.md"
        },
        {
          "title": "IDeclVisitor.VisitFunctionTemplateSpecializationDecl(FunctionTemplateSpecialization)",
          "path": "cppsharp.ast.ideclvisitor.visitfunctiontemplatespecializationdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitVarTemplateDecl(VarTemplate)",
          "path": "cppsharp.ast.ideclvisitor.visitvartemplatedecl.md"
        },
        {
          "title": "IDeclVisitor.VisitVarTemplateSpecializationDecl(VarTemplateSpecialization)",
          "path": "cppsharp.ast.ideclvisitor.visitvartemplatespecializationdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitTemplateTemplateParameterDecl(TemplateTemplateParameter)",
          "path": "cppsharp.ast.ideclvisitor.visittemplatetemplateparameterdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitTemplateParameterDecl(TypeTemplateParameter)",
          "path": "cppsharp.ast.ideclvisitor.visittemplateparameterdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitNonTypeTemplateParameterDecl(NonTypeTemplateParameter)",
          "path": "cppsharp.ast.ideclvisitor.visitnontypetemplateparameterdecl.md"
        },
        {
          "title": "IDeclVisitor.VisitTypeAliasTemplateDecl(TypeAliasTemplate)",
          "path": "cppsharp.ast.ideclvisitor.visittypealiastemplatedecl.md"
        },
        {
          "title": "IDeclVisitor.VisitUnresolvedUsingDecl(UnresolvedUsingTypename)",
          "path": "cppsharp.ast.ideclvisitor.visitunresolvedusingdecl.md"
        },
        {
          "title": "IDeclVisitor",
          "path": "cppsharp.ast.ideclvisitor.md"
        },
        {
          "title": "DeclarationsList.Namespaces",
          "path": "cppsharp.ast.declarationslist.namespaces.md"
        },
        {
          "title": "DeclarationsList.Enums",
          "path": "cppsharp.ast.declarationslist.enums.md"
        },
        {
          "title": "DeclarationsList.Functions",
          "path": "cppsharp.ast.declarationslist.functions.md"
        },
        {
          "title": "DeclarationsList.Classes",
          "path": "cppsharp.ast.declarationslist.classes.md"
        },
        {
          "title": "DeclarationsList.Templates",
          "path": "cppsharp.ast.declarationslist.templates.md"
        },
        {
          "title": "DeclarationsList.Typedefs",
          "path": "cppsharp.ast.declarationslist.typedefs.md"
        },
        {
          "title": "DeclarationsList.Variables",
          "path": "cppsharp.ast.declarationslist.variables.md"
        },
        {
          "title": "DeclarationsList.Events",
          "path": "cppsharp.ast.declarationslist.events.md"
        },
        {
          "title": "DeclarationsList.AddRange(IEnumerable\u003CDeclaration\u003E)",
          "path": "cppsharp.ast.declarationslist.addrange.md"
        },
        {
          "title": "DeclarationsList",
          "path": "cppsharp.ast.declarationslist.md"
        },
        {
          "title": "Delegate.Type",
          "path": "cppsharp.ast.delegate.type.md"
        },
        {
          "title": "Delegate.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.delegate.visit.md"
        },
        {
          "title": "Delegate",
          "path": "cppsharp.ast.delegate.md"
        },
        {
          "title": "EnumModifiers.Anonymous",
          "path": "cppsharp.ast.enumeration.enummodifiers.anonymous.md"
        },
        {
          "title": "EnumModifiers.Scoped",
          "path": "cppsharp.ast.enumeration.enummodifiers.scoped.md"
        },
        {
          "title": "EnumModifiers.Flags",
          "path": "cppsharp.ast.enumeration.enummodifiers.flags.md"
        },
        {
          "title": "EnumModifiers",
          "path": "cppsharp.ast.enumeration.enummodifiers.md"
        },
        {
          "title": "Item.Value",
          "path": "cppsharp.ast.enumeration.item.value.md"
        },
        {
          "title": "Item.Expression",
          "path": "cppsharp.ast.enumeration.item.expression.md"
        },
        {
          "title": "Item.ExplicitValue",
          "path": "cppsharp.ast.enumeration.item.explicitvalue.md"
        },
        {
          "title": "Item.IsHexadecimal",
          "path": "cppsharp.ast.enumeration.item.ishexadecimal.md"
        },
        {
          "title": "Item()",
          "path": "cppsharp.ast.enumeration.item..ctor-1.md"
        },
        {
          "title": "Item(Item)",
          "path": "cppsharp.ast.enumeration.item..ctor-2.md"
        },
        {
          "title": "Item.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.enumeration.item.visit.md"
        },
        {
          "title": "Item",
          "path": "cppsharp.ast.enumeration.item.md"
        },
        {
          "title": "Enumeration()",
          "path": "cppsharp.ast.enumeration..ctor.md"
        },
        {
          "title": "Enumeration.AddItem(Item)",
          "path": "cppsharp.ast.enumeration.additem.md"
        },
        {
          "title": "Enumeration.GetItemValueAsString(Item)",
          "path": "cppsharp.ast.enumeration.getitemvalueasstring.md"
        },
        {
          "title": "Enumeration.SetFlags()",
          "path": "cppsharp.ast.enumeration.setflags.md"
        },
        {
          "title": "Enumeration.SetScoped()",
          "path": "cppsharp.ast.enumeration.setscoped.md"
        },
        {
          "title": "Enumeration.IsFlags",
          "path": "cppsharp.ast.enumeration.isflags.md"
        },
        {
          "title": "Enumeration.IsScoped",
          "path": "cppsharp.ast.enumeration.isscoped.md"
        },
        {
          "title": "Enumeration.Type",
          "path": "cppsharp.ast.enumeration.type.md"
        },
        {
          "title": "Enumeration.BuiltinType",
          "path": "cppsharp.ast.enumeration.builtintype.md"
        },
        {
          "title": "Enumeration.Modifiers",
          "path": "cppsharp.ast.enumeration.modifiers.md"
        },
        {
          "title": "Enumeration.Items",
          "path": "cppsharp.ast.enumeration.items.md"
        },
        {
          "title": "Enumeration.ItemsByName",
          "path": "cppsharp.ast.enumeration.itemsbyname.md"
        },
        {
          "title": "Enumeration.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.enumeration.visit.md"
        },
        {
          "title": "Enumeration",
          "path": "cppsharp.ast.enumeration.md"
        },
        {
          "title": "Event.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.event.visit.md"
        },
        {
          "title": "Event.Type",
          "path": "cppsharp.ast.event.type.md"
        },
        {
          "title": "Event.QualifiedType",
          "path": "cppsharp.ast.event.qualifiedtype.md"
        },
        {
          "title": "Event.Parameters",
          "path": "cppsharp.ast.event.parameters.md"
        },
        {
          "title": "Event.OriginalDeclaration",
          "path": "cppsharp.ast.event.originaldeclaration.md"
        },
        {
          "title": "Event.GlobalId",
          "path": "cppsharp.ast.event.globalid.md"
        },
        {
          "title": "Event",
          "path": "cppsharp.ast.event.md"
        },
        {
          "title": "CastKind.Dependent",
          "path": "cppsharp.ast.castkind.dependent.md"
        },
        {
          "title": "CastKind.BitCast",
          "path": "cppsharp.ast.castkind.bitcast.md"
        },
        {
          "title": "CastKind.LValueBitCast",
          "path": "cppsharp.ast.castkind.lvaluebitcast.md"
        },
        {
          "title": "CastKind.LValueToRValue",
          "path": "cppsharp.ast.castkind.lvaluetorvalue.md"
        },
        {
          "title": "CastKind.NoOp",
          "path": "cppsharp.ast.castkind.noop.md"
        },
        {
          "title": "CastKind.BaseToDerived",
          "path": "cppsharp.ast.castkind.basetoderived.md"
        },
        {
          "title": "CastKind.DerivedToBase",
          "path": "cppsharp.ast.castkind.derivedtobase.md"
        },
        {
          "title": "CastKind.UncheckedDerivedToBase",
          "path": "cppsharp.ast.castkind.uncheckedderivedtobase.md"
        },
        {
          "title": "CastKind.Dynamic",
          "path": "cppsharp.ast.castkind.dynamic.md"
        },
        {
          "title": "CastKind.ToUnion",
          "path": "cppsharp.ast.castkind.tounion.md"
        },
        {
          "title": "CastKind.ArrayToPointerDecay",
          "path": "cppsharp.ast.castkind.arraytopointerdecay.md"
        },
        {
          "title": "CastKind.FunctionToPointerDecay",
          "path": "cppsharp.ast.castkind.functiontopointerdecay.md"
        },
        {
          "title": "CastKind.NullToPointer",
          "path": "cppsharp.ast.castkind.nulltopointer.md"
        },
        {
          "title": "CastKind.NullToMemberPointer",
          "path": "cppsharp.ast.castkind.nulltomemberpointer.md"
        },
        {
          "title": "CastKind.BaseToDerivedMemberPointer",
          "path": "cppsharp.ast.castkind.basetoderivedmemberpointer.md"
        },
        {
          "title": "CastKind.DerivedToBaseMemberPointer",
          "path": "cppsharp.ast.castkind.derivedtobasememberpointer.md"
        },
        {
          "title": "CastKind.MemberPointerToBoolean",
          "path": "cppsharp.ast.castkind.memberpointertoboolean.md"
        },
        {
          "title": "CastKind.ReinterpretMemberPointer",
          "path": "cppsharp.ast.castkind.reinterpretmemberpointer.md"
        },
        {
          "title": "CastKind.UserDefinedConversion",
          "path": "cppsharp.ast.castkind.userdefinedconversion.md"
        },
        {
          "title": "CastKind.ConstructorConversion",
          "path": "cppsharp.ast.castkind.constructorconversion.md"
        },
        {
          "title": "CastKind.IntegralToPointer",
          "path": "cppsharp.ast.castkind.integraltopointer.md"
        },
        {
          "title": "CastKind.PointerToIntegral",
          "path": "cppsharp.ast.castkind.pointertointegral.md"
        },
        {
          "title": "CastKind.PointerToBoolean",
          "path": "cppsharp.ast.castkind.pointertoboolean.md"
        },
        {
          "title": "CastKind.ToVoid",
          "path": "cppsharp.ast.castkind.tovoid.md"
        },
        {
          "title": "CastKind.VectorSplat",
          "path": "cppsharp.ast.castkind.vectorsplat.md"
        },
        {
          "title": "CastKind.IntegralCast",
          "path": "cppsharp.ast.castkind.integralcast.md"
        },
        {
          "title": "CastKind.IntegralToBoolean",
          "path": "cppsharp.ast.castkind.integraltoboolean.md"
        },
        {
          "title": "CastKind.IntegralToFloating",
          "path": "cppsharp.ast.castkind.integraltofloating.md"
        },
        {
          "title": "CastKind.FixedPointCast",
          "path": "cppsharp.ast.castkind.fixedpointcast.md"
        },
        {
          "title": "CastKind.FixedPointToBoolean",
          "path": "cppsharp.ast.castkind.fixedpointtoboolean.md"
        },
        {
          "title": "CastKind.FloatingToIntegral",
          "path": "cppsharp.ast.castkind.floatingtointegral.md"
        },
        {
          "title": "CastKind.FloatingToBoolean",
          "path": "cppsharp.ast.castkind.floatingtoboolean.md"
        },
        {
          "title": "CastKind.BooleanToSignedIntegral",
          "path": "cppsharp.ast.castkind.booleantosignedintegral.md"
        },
        {
          "title": "CastKind.FloatingCast",
          "path": "cppsharp.ast.castkind.floatingcast.md"
        },
        {
          "title": "CastKind.CPointerToObjCPointerCast",
          "path": "cppsharp.ast.castkind.cpointertoobjcpointercast.md"
        },
        {
          "title": "CastKind.BlockPointerToObjCPointerCast",
          "path": "cppsharp.ast.castkind.blockpointertoobjcpointercast.md"
        },
        {
          "title": "CastKind.AnyPointerToBlockPointerCast",
          "path": "cppsharp.ast.castkind.anypointertoblockpointercast.md"
        },
        {
          "title": "CastKind.ObjCObjectLValueCast",
          "path": "cppsharp.ast.castkind.objcobjectlvaluecast.md"
        },
        {
          "title": "CastKind.FloatingRealToComplex",
          "path": "cppsharp.ast.castkind.floatingrealtocomplex.md"
        },
        {
          "title": "CastKind.FloatingComplexToReal",
          "path": "cppsharp.ast.castkind.floatingcomplextoreal.md"
        },
        {
          "title": "CastKind.FloatingComplexToBoolean",
          "path": "cppsharp.ast.castkind.floatingcomplextoboolean.md"
        },
        {
          "title": "CastKind.FloatingComplexCast",
          "path": "cppsharp.ast.castkind.floatingcomplexcast.md"
        },
        {
          "title": "CastKind.FloatingComplexToIntegralComplex",
          "path": "cppsharp.ast.castkind.floatingcomplextointegralcomplex.md"
        },
        {
          "title": "CastKind.IntegralRealToComplex",
          "path": "cppsharp.ast.castkind.integralrealtocomplex.md"
        },
        {
          "title": "CastKind.IntegralComplexToReal",
          "path": "cppsharp.ast.castkind.integralcomplextoreal.md"
        },
        {
          "title": "CastKind.IntegralComplexToBoolean",
          "path": "cppsharp.ast.castkind.integralcomplextoboolean.md"
        },
        {
          "title": "CastKind.IntegralComplexCast",
          "path": "cppsharp.ast.castkind.integralcomplexcast.md"
        },
        {
          "title": "CastKind.IntegralComplexToFloatingComplex",
          "path": "cppsharp.ast.castkind.integralcomplextofloatingcomplex.md"
        },
        {
          "title": "CastKind.ARCProduceObject",
          "path": "cppsharp.ast.castkind.arcproduceobject.md"
        },
        {
          "title": "CastKind.ARCConsumeObject",
          "path": "cppsharp.ast.castkind.arcconsumeobject.md"
        },
        {
          "title": "CastKind.ARCReclaimReturnedObject",
          "path": "cppsharp.ast.castkind.arcreclaimreturnedobject.md"
        },
        {
          "title": "CastKind.ARCExtendBlockObject",
          "path": "cppsharp.ast.castkind.arcextendblockobject.md"
        },
        {
          "title": "CastKind.AtomicToNonAtomic",
          "path": "cppsharp.ast.castkind.atomictononatomic.md"
        },
        {
          "title": "CastKind.NonAtomicToAtomic",
          "path": "cppsharp.ast.castkind.nonatomictoatomic.md"
        },
        {
          "title": "CastKind.CopyAndAutoreleaseBlockObject",
          "path": "cppsharp.ast.castkind.copyandautoreleaseblockobject.md"
        },
        {
          "title": "CastKind.BuiltinFnToFnPtr",
          "path": "cppsharp.ast.castkind.builtinfntofnptr.md"
        },
        {
          "title": "CastKind.ZeroToOCLOpaqueType",
          "path": "cppsharp.ast.castkind.zerotooclopaquetype.md"
        },
        {
          "title": "CastKind.AddressSpaceConversion",
          "path": "cppsharp.ast.castkind.addressspaceconversion.md"
        },
        {
          "title": "CastKind.IntToOCLSampler",
          "path": "cppsharp.ast.castkind.inttooclsampler.md"
        },
        {
          "title": "CastKind",
          "path": "cppsharp.ast.castkind.md"
        },
        {
          "title": "BinaryOperatorKind.PtrMemD",
          "path": "cppsharp.ast.binaryoperatorkind.ptrmemd.md"
        },
        {
          "title": "BinaryOperatorKind.PtrMemI",
          "path": "cppsharp.ast.binaryoperatorkind.ptrmemi.md"
        },
        {
          "title": "BinaryOperatorKind.Mul",
          "path": "cppsharp.ast.binaryoperatorkind.mul.md"
        },
        {
          "title": "BinaryOperatorKind.Div",
          "path": "cppsharp.ast.binaryoperatorkind.div.md"
        },
        {
          "title": "BinaryOperatorKind.Rem",
          "path": "cppsharp.ast.binaryoperatorkind.rem.md"
        },
        {
          "title": "BinaryOperatorKind.Add",
          "path": "cppsharp.ast.binaryoperatorkind.add.md"
        },
        {
          "title": "BinaryOperatorKind.Sub",
          "path": "cppsharp.ast.binaryoperatorkind.sub.md"
        },
        {
          "title": "BinaryOperatorKind.Shl",
          "path": "cppsharp.ast.binaryoperatorkind.shl.md"
        },
        {
          "title": "BinaryOperatorKind.Shr",
          "path": "cppsharp.ast.binaryoperatorkind.shr.md"
        },
        {
          "title": "BinaryOperatorKind.Cmp",
          "path": "cppsharp.ast.binaryoperatorkind.cmp.md"
        },
        {
          "title": "BinaryOperatorKind.LT",
          "path": "cppsharp.ast.binaryoperatorkind.lt.md"
        },
        {
          "title": "BinaryOperatorKind.GT",
          "path": "cppsharp.ast.binaryoperatorkind.gt.md"
        },
        {
          "title": "BinaryOperatorKind.LE",
          "path": "cppsharp.ast.binaryoperatorkind.le.md"
        },
        {
          "title": "BinaryOperatorKind.GE",
          "path": "cppsharp.ast.binaryoperatorkind.ge.md"
        },
        {
          "title": "BinaryOperatorKind.EQ",
          "path": "cppsharp.ast.binaryoperatorkind.eq.md"
        },
        {
          "title": "BinaryOperatorKind.NE",
          "path": "cppsharp.ast.binaryoperatorkind.ne.md"
        },
        {
          "title": "BinaryOperatorKind.And",
          "path": "cppsharp.ast.binaryoperatorkind.and.md"
        },
        {
          "title": "BinaryOperatorKind.Xor",
          "path": "cppsharp.ast.binaryoperatorkind.xor.md"
        },
        {
          "title": "BinaryOperatorKind.Or",
          "path": "cppsharp.ast.binaryoperatorkind.or.md"
        },
        {
          "title": "BinaryOperatorKind.LAnd",
          "path": "cppsharp.ast.binaryoperatorkind.land.md"
        },
        {
          "title": "BinaryOperatorKind.LOr",
          "path": "cppsharp.ast.binaryoperatorkind.lor.md"
        },
        {
          "title": "BinaryOperatorKind.Assign",
          "path": "cppsharp.ast.binaryoperatorkind.assign.md"
        },
        {
          "title": "BinaryOperatorKind.MulAssign",
          "path": "cppsharp.ast.binaryoperatorkind.mulassign.md"
        },
        {
          "title": "BinaryOperatorKind.DivAssign",
          "path": "cppsharp.ast.binaryoperatorkind.divassign.md"
        },
        {
          "title": "BinaryOperatorKind.RemAssign",
          "path": "cppsharp.ast.binaryoperatorkind.remassign.md"
        },
        {
          "title": "BinaryOperatorKind.AddAssign",
          "path": "cppsharp.ast.binaryoperatorkind.addassign.md"
        },
        {
          "title": "BinaryOperatorKind.SubAssign",
          "path": "cppsharp.ast.binaryoperatorkind.subassign.md"
        },
        {
          "title": "BinaryOperatorKind.ShlAssign",
          "path": "cppsharp.ast.binaryoperatorkind.shlassign.md"
        },
        {
          "title": "BinaryOperatorKind.ShrAssign",
          "path": "cppsharp.ast.binaryoperatorkind.shrassign.md"
        },
        {
          "title": "BinaryOperatorKind.AndAssign",
          "path": "cppsharp.ast.binaryoperatorkind.andassign.md"
        },
        {
          "title": "BinaryOperatorKind.XorAssign",
          "path": "cppsharp.ast.binaryoperatorkind.xorassign.md"
        },
        {
          "title": "BinaryOperatorKind.OrAssign",
          "path": "cppsharp.ast.binaryoperatorkind.orassign.md"
        },
        {
          "title": "BinaryOperatorKind.Comma",
          "path": "cppsharp.ast.binaryoperatorkind.comma.md"
        },
        {
          "title": "BinaryOperatorKind",
          "path": "cppsharp.ast.binaryoperatorkind.md"
        },
        {
          "title": "UnaryOperatorKind.PostInc",
          "path": "cppsharp.ast.unaryoperatorkind.postinc.md"
        },
        {
          "title": "UnaryOperatorKind.PostDec",
          "path": "cppsharp.ast.unaryoperatorkind.postdec.md"
        },
        {
          "title": "UnaryOperatorKind.PreInc",
          "path": "cppsharp.ast.unaryoperatorkind.preinc.md"
        },
        {
          "title": "UnaryOperatorKind.PreDec",
          "path": "cppsharp.ast.unaryoperatorkind.predec.md"
        },
        {
          "title": "UnaryOperatorKind.AddrOf",
          "path": "cppsharp.ast.unaryoperatorkind.addrof.md"
        },
        {
          "title": "UnaryOperatorKind.Deref",
          "path": "cppsharp.ast.unaryoperatorkind.deref.md"
        },
        {
          "title": "UnaryOperatorKind.Plus",
          "path": "cppsharp.ast.unaryoperatorkind.plus.md"
        },
        {
          "title": "UnaryOperatorKind.Minus",
          "path": "cppsharp.ast.unaryoperatorkind.minus.md"
        },
        {
          "title": "UnaryOperatorKind.Not",
          "path": "cppsharp.ast.unaryoperatorkind.not.md"
        },
        {
          "title": "UnaryOperatorKind.LNot",
          "path": "cppsharp.ast.unaryoperatorkind.lnot.md"
        },
        {
          "title": "UnaryOperatorKind.Real",
          "path": "cppsharp.ast.unaryoperatorkind.real.md"
        },
        {
          "title": "UnaryOperatorKind.Imag",
          "path": "cppsharp.ast.unaryoperatorkind.imag.md"
        },
        {
          "title": "UnaryOperatorKind.Extension",
          "path": "cppsharp.ast.unaryoperatorkind.extension.md"
        },
        {
          "title": "UnaryOperatorKind.Coawait",
          "path": "cppsharp.ast.unaryoperatorkind.coawait.md"
        },
        {
          "title": "UnaryOperatorKind",
          "path": "cppsharp.ast.unaryoperatorkind.md"
        },
        {
          "title": "ObjCBridgeCastKind.Bridge",
          "path": "cppsharp.ast.objcbridgecastkind.bridge.md"
        },
        {
          "title": "ObjCBridgeCastKind.BridgeTransfer",
          "path": "cppsharp.ast.objcbridgecastkind.bridgetransfer.md"
        },
        {
          "title": "ObjCBridgeCastKind.BridgeRetained",
          "path": "cppsharp.ast.objcbridgecastkind.bridgeretained.md"
        },
        {
          "title": "ObjCBridgeCastKind",
          "path": "cppsharp.ast.objcbridgecastkind.md"
        },
        {
          "title": "OverloadedOperatorKind.None",
          "path": "cppsharp.ast.overloadedoperatorkind.none.md"
        },
        {
          "title": "OverloadedOperatorKind.New",
          "path": "cppsharp.ast.overloadedoperatorkind.new.md"
        },
        {
          "title": "OverloadedOperatorKind.Delete",
          "path": "cppsharp.ast.overloadedoperatorkind.delete.md"
        },
        {
          "title": "OverloadedOperatorKind.ArrayNew",
          "path": "cppsharp.ast.overloadedoperatorkind.arraynew.md"
        },
        {
          "title": "OverloadedOperatorKind.ArrayDelete",
          "path": "cppsharp.ast.overloadedoperatorkind.arraydelete.md"
        },
        {
          "title": "OverloadedOperatorKind.Plus",
          "path": "cppsharp.ast.overloadedoperatorkind.plus.md"
        },
        {
          "title": "OverloadedOperatorKind.Minus",
          "path": "cppsharp.ast.overloadedoperatorkind.minus.md"
        },
        {
          "title": "OverloadedOperatorKind.Star",
          "path": "cppsharp.ast.overloadedoperatorkind.star.md"
        },
        {
          "title": "OverloadedOperatorKind.Slash",
          "path": "cppsharp.ast.overloadedoperatorkind.slash.md"
        },
        {
          "title": "OverloadedOperatorKind.Percent",
          "path": "cppsharp.ast.overloadedoperatorkind.percent.md"
        },
        {
          "title": "OverloadedOperatorKind.Caret",
          "path": "cppsharp.ast.overloadedoperatorkind.caret.md"
        },
        {
          "title": "OverloadedOperatorKind.Amp",
          "path": "cppsharp.ast.overloadedoperatorkind.amp.md"
        },
        {
          "title": "OverloadedOperatorKind.Pipe",
          "path": "cppsharp.ast.overloadedoperatorkind.pipe.md"
        },
        {
          "title": "OverloadedOperatorKind.Tilde",
          "path": "cppsharp.ast.overloadedoperatorkind.tilde.md"
        },
        {
          "title": "OverloadedOperatorKind.Exclaim",
          "path": "cppsharp.ast.overloadedoperatorkind.exclaim.md"
        },
        {
          "title": "OverloadedOperatorKind.Equal",
          "path": "cppsharp.ast.overloadedoperatorkind.equal.md"
        },
        {
          "title": "OverloadedOperatorKind.Less",
          "path": "cppsharp.ast.overloadedoperatorkind.less.md"
        },
        {
          "title": "OverloadedOperatorKind.Greater",
          "path": "cppsharp.ast.overloadedoperatorkind.greater.md"
        },
        {
          "title": "OverloadedOperatorKind.PlusEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.plusequal.md"
        },
        {
          "title": "OverloadedOperatorKind.MinusEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.minusequal.md"
        },
        {
          "title": "OverloadedOperatorKind.StarEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.starequal.md"
        },
        {
          "title": "OverloadedOperatorKind.SlashEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.slashequal.md"
        },
        {
          "title": "OverloadedOperatorKind.PercentEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.percentequal.md"
        },
        {
          "title": "OverloadedOperatorKind.CaretEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.caretequal.md"
        },
        {
          "title": "OverloadedOperatorKind.AmpEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.ampequal.md"
        },
        {
          "title": "OverloadedOperatorKind.PipeEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.pipeequal.md"
        },
        {
          "title": "OverloadedOperatorKind.LessLess",
          "path": "cppsharp.ast.overloadedoperatorkind.lessless.md"
        },
        {
          "title": "OverloadedOperatorKind.GreaterGreater",
          "path": "cppsharp.ast.overloadedoperatorkind.greatergreater.md"
        },
        {
          "title": "OverloadedOperatorKind.LessLessEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.lesslessequal.md"
        },
        {
          "title": "OverloadedOperatorKind.GreaterGreaterEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.greatergreaterequal.md"
        },
        {
          "title": "OverloadedOperatorKind.EqualEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.equalequal.md"
        },
        {
          "title": "OverloadedOperatorKind.ExclaimEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.exclaimequal.md"
        },
        {
          "title": "OverloadedOperatorKind.LessEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.lessequal.md"
        },
        {
          "title": "OverloadedOperatorKind.GreaterEqual",
          "path": "cppsharp.ast.overloadedoperatorkind.greaterequal.md"
        },
        {
          "title": "OverloadedOperatorKind.Spaceship",
          "path": "cppsharp.ast.overloadedoperatorkind.spaceship.md"
        },
        {
          "title": "OverloadedOperatorKind.AmpAmp",
          "path": "cppsharp.ast.overloadedoperatorkind.ampamp.md"
        },
        {
          "title": "OverloadedOperatorKind.PipePipe",
          "path": "cppsharp.ast.overloadedoperatorkind.pipepipe.md"
        },
        {
          "title": "OverloadedOperatorKind.PlusPlus",
          "path": "cppsharp.ast.overloadedoperatorkind.plusplus.md"
        },
        {
          "title": "OverloadedOperatorKind.MinusMinus",
          "path": "cppsharp.ast.overloadedoperatorkind.minusminus.md"
        },
        {
          "title": "OverloadedOperatorKind.Comma",
          "path": "cppsharp.ast.overloadedoperatorkind.comma.md"
        },
        {
          "title": "OverloadedOperatorKind.ArrowStar",
          "path": "cppsharp.ast.overloadedoperatorkind.arrowstar.md"
        },
        {
          "title": "OverloadedOperatorKind.Arrow",
          "path": "cppsharp.ast.overloadedoperatorkind.arrow.md"
        },
        {
          "title": "OverloadedOperatorKind.Call",
          "path": "cppsharp.ast.overloadedoperatorkind.call.md"
        },
        {
          "title": "OverloadedOperatorKind.Subscript",
          "path": "cppsharp.ast.overloadedoperatorkind.subscript.md"
        },
        {
          "title": "OverloadedOperatorKind.Conditional",
          "path": "cppsharp.ast.overloadedoperatorkind.conditional.md"
        },
        {
          "title": "OverloadedOperatorKind.Coawait",
          "path": "cppsharp.ast.overloadedoperatorkind.coawait.md"
        },
        {
          "title": "OverloadedOperatorKind",
          "path": "cppsharp.ast.overloadedoperatorkind.md"
        },
        {
          "title": "UnaryExprOrTypeTrait.SizeOf",
          "path": "cppsharp.ast.unaryexprortypetrait.sizeof.md"
        },
        {
          "title": "UnaryExprOrTypeTrait.AlignOf",
          "path": "cppsharp.ast.unaryexprortypetrait.alignof.md"
        },
        {
          "title": "UnaryExprOrTypeTrait.VecStep",
          "path": "cppsharp.ast.unaryexprortypetrait.vecstep.md"
        },
        {
          "title": "UnaryExprOrTypeTrait.OpenMPRequiredSimdAlign",
          "path": "cppsharp.ast.unaryexprortypetrait.openmprequiredsimdalign.md"
        },
        {
          "title": "UnaryExprOrTypeTrait.PreferredAlignOf",
          "path": "cppsharp.ast.unaryexprortypetrait.preferredalignof.md"
        },
        {
          "title": "UnaryExprOrTypeTrait",
          "path": "cppsharp.ast.unaryexprortypetrait.md"
        },
        {
          "title": "LValueClassification.Valid",
          "path": "cppsharp.ast.expr.lvalueclassification.valid.md"
        },
        {
          "title": "LValueClassification.NotObjectType",
          "path": "cppsharp.ast.expr.lvalueclassification.notobjecttype.md"
        },
        {
          "title": "LValueClassification.IncompleteVoidType",
          "path": "cppsharp.ast.expr.lvalueclassification.incompletevoidtype.md"
        },
        {
          "title": "LValueClassification.DuplicateVectorComponents",
          "path": "cppsharp.ast.expr.lvalueclassification.duplicatevectorcomponents.md"
        },
        {
          "title": "LValueClassification.InvalidExpression",
          "path": "cppsharp.ast.expr.lvalueclassification.invalidexpression.md"
        },
        {
          "title": "LValueClassification.InvalidMessageExpression",
          "path": "cppsharp.ast.expr.lvalueclassification.invalidmessageexpression.md"
        },
        {
          "title": "LValueClassification.MemberFunction",
          "path": "cppsharp.ast.expr.lvalueclassification.memberfunction.md"
        },
        {
          "title": "LValueClassification.SubObjCPropertySetting",
          "path": "cppsharp.ast.expr.lvalueclassification.subobjcpropertysetting.md"
        },
        {
          "title": "LValueClassification.ClassTemporary",
          "path": "cppsharp.ast.expr.lvalueclassification.classtemporary.md"
        },
        {
          "title": "LValueClassification.ArrayTemporary",
          "path": "cppsharp.ast.expr.lvalueclassification.arraytemporary.md"
        },
        {
          "title": "LValueClassification",
          "path": "cppsharp.ast.expr.lvalueclassification.md"
        },
        {
          "title": "isModifiableLvalueResult.Valid",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.valid.md"
        },
        {
          "title": "isModifiableLvalueResult.NotObjectType",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.notobjecttype.md"
        },
        {
          "title": "isModifiableLvalueResult.IncompleteVoidType",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.incompletevoidtype.md"
        },
        {
          "title": "isModifiableLvalueResult.DuplicateVectorComponents",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.duplicatevectorcomponents.md"
        },
        {
          "title": "isModifiableLvalueResult.InvalidExpression",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.invalidexpression.md"
        },
        {
          "title": "isModifiableLvalueResult.LValueCast",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.lvaluecast.md"
        },
        {
          "title": "isModifiableLvalueResult.IncompleteType",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.incompletetype.md"
        },
        {
          "title": "isModifiableLvalueResult.ConstQualified",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.constqualified.md"
        },
        {
          "title": "isModifiableLvalueResult.ConstQualifiedField",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.constqualifiedfield.md"
        },
        {
          "title": "isModifiableLvalueResult.ConstAddrSpace",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.constaddrspace.md"
        },
        {
          "title": "isModifiableLvalueResult.ArrayType",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.arraytype.md"
        },
        {
          "title": "isModifiableLvalueResult.NoSetterProperty",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.nosetterproperty.md"
        },
        {
          "title": "isModifiableLvalueResult.MemberFunction",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.memberfunction.md"
        },
        {
          "title": "isModifiableLvalueResult.SubObjCPropertySetting",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.subobjcpropertysetting.md"
        },
        {
          "title": "isModifiableLvalueResult.InvalidMessageExpression",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.invalidmessageexpression.md"
        },
        {
          "title": "isModifiableLvalueResult.ClassTemporary",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.classtemporary.md"
        },
        {
          "title": "isModifiableLvalueResult.ArrayTemporary",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.arraytemporary.md"
        },
        {
          "title": "isModifiableLvalueResult",
          "path": "cppsharp.ast.expr.ismodifiablelvalueresult.md"
        },
        {
          "title": "SideEffectsKind.NoSideEffects",
          "path": "cppsharp.ast.expr.sideeffectskind.nosideeffects.md"
        },
        {
          "title": "SideEffectsKind.AllowUndefinedBehavior",
          "path": "cppsharp.ast.expr.sideeffectskind.allowundefinedbehavior.md"
        },
        {
          "title": "SideEffectsKind.AllowSideEffects",
          "path": "cppsharp.ast.expr.sideeffectskind.allowsideeffects.md"
        },
        {
          "title": "SideEffectsKind",
          "path": "cppsharp.ast.expr.sideeffectskind.md"
        },
        {
          "title": "ConstExprUsage.EvaluateForCodeGen",
          "path": "cppsharp.ast.expr.constexprusage.evaluateforcodegen.md"
        },
        {
          "title": "ConstExprUsage.EvaluateForMangling",
          "path": "cppsharp.ast.expr.constexprusage.evaluateformangling.md"
        },
        {
          "title": "ConstExprUsage",
          "path": "cppsharp.ast.expr.constexprusage.md"
        },
        {
          "title": "NullPointerConstantKind.NotNull",
          "path": "cppsharp.ast.expr.nullpointerconstantkind.notnull.md"
        },
        {
          "title": "NullPointerConstantKind.ZeroExpression",
          "path": "cppsharp.ast.expr.nullpointerconstantkind.zeroexpression.md"
        },
        {
          "title": "NullPointerConstantKind.ZeroLiteral",
          "path": "cppsharp.ast.expr.nullpointerconstantkind.zeroliteral.md"
        },
        {
          "title": "NullPointerConstantKind.CXX11_nullptr",
          "path": "cppsharp.ast.expr.nullpointerconstantkind.cxx11_nullptr.md"
        },
        {
          "title": "NullPointerConstantKind.GNUNull",
          "path": "cppsharp.ast.expr.nullpointerconstantkind.gnunull.md"
        },
        {
          "title": "NullPointerConstantKind",
          "path": "cppsharp.ast.expr.nullpointerconstantkind.md"
        },
        {
          "title": "NullPointerConstantValueDependence.NeverValueDependent",
          "path": "cppsharp.ast.expr.nullpointerconstantvaluedependence.nevervaluedependent.md"
        },
        {
          "title": "NullPointerConstantValueDependence.ValueDependentIsNull",
          "path": "cppsharp.ast.expr.nullpointerconstantvaluedependence.valuedependentisnull.md"
        },
        {
          "title": "NullPointerConstantValueDependence.ValueDependentIsNotNull",
          "path": "cppsharp.ast.expr.nullpointerconstantvaluedependence.valuedependentisnotnull.md"
        },
        {
          "title": "NullPointerConstantValueDependence",
          "path": "cppsharp.ast.expr.nullpointerconstantvaluedependence.md"
        },
        {
          "title": "Kinds.LValue",
          "path": "cppsharp.ast.expr.classification.kinds.lvalue.md"
        },
        {
          "title": "Kinds.XValue",
          "path": "cppsharp.ast.expr.classification.kinds.xvalue.md"
        },
        {
          "title": "Kinds.Function",
          "path": "cppsharp.ast.expr.classification.kinds.function.md"
        },
        {
          "title": "Kinds.Void",
          "path": "cppsharp.ast.expr.classification.kinds.void.md"
        },
        {
          "title": "Kinds.AddressableVoid",
          "path": "cppsharp.ast.expr.classification.kinds.addressablevoid.md"
        },
        {
          "title": "Kinds.DuplicateVectorComponents",
          "path": "cppsharp.ast.expr.classification.kinds.duplicatevectorcomponents.md"
        },
        {
          "title": "Kinds.MemberFunction",
          "path": "cppsharp.ast.expr.classification.kinds.memberfunction.md"
        },
        {
          "title": "Kinds.SubObjCPropertySetting",
          "path": "cppsharp.ast.expr.classification.kinds.subobjcpropertysetting.md"
        },
        {
          "title": "Kinds.ClassTemporary",
          "path": "cppsharp.ast.expr.classification.kinds.classtemporary.md"
        },
        {
          "title": "Kinds.ArrayTemporary",
          "path": "cppsharp.ast.expr.classification.kinds.arraytemporary.md"
        },
        {
          "title": "Kinds.ObjCMessageRValue",
          "path": "cppsharp.ast.expr.classification.kinds.objcmessagervalue.md"
        },
        {
          "title": "Kinds.PRValue",
          "path": "cppsharp.ast.expr.classification.kinds.prvalue.md"
        },
        {
          "title": "Kinds",
          "path": "cppsharp.ast.expr.classification.kinds.md"
        },
        {
          "title": "ModifiableType.Untested",
          "path": "cppsharp.ast.expr.classification.modifiabletype.untested.md"
        },
        {
          "title": "ModifiableType.Modifiable",
          "path": "cppsharp.ast.expr.classification.modifiabletype.modifiable.md"
        },
        {
          "title": "ModifiableType.RValue",
          "path": "cppsharp.ast.expr.classification.modifiabletype.rvalue.md"
        },
        {
          "title": "ModifiableType.Function",
          "path": "cppsharp.ast.expr.classification.modifiabletype.function.md"
        },
        {
          "title": "ModifiableType.LValueCast",
          "path": "cppsharp.ast.expr.classification.modifiabletype.lvaluecast.md"
        },
        {
          "title": "ModifiableType.NoSetterProperty",
          "path": "cppsharp.ast.expr.classification.modifiabletype.nosetterproperty.md"
        },
        {
          "title": "ModifiableType.ConstQualified",
          "path": "cppsharp.ast.expr.classification.modifiabletype.constqualified.md"
        },
        {
          "title": "ModifiableType.ConstQualifiedField",
          "path": "cppsharp.ast.expr.classification.modifiabletype.constqualifiedfield.md"
        },
        {
          "title": "ModifiableType.ConstAddrSpace",
          "path": "cppsharp.ast.expr.classification.modifiabletype.constaddrspace.md"
        },
        {
          "title": "ModifiableType.ArrayType",
          "path": "cppsharp.ast.expr.classification.modifiabletype.arraytype.md"
        },
        {
          "title": "ModifiableType.IncompleteType",
          "path": "cppsharp.ast.expr.classification.modifiabletype.incompletetype.md"
        },
        {
          "title": "ModifiableType",
          "path": "cppsharp.ast.expr.classification.modifiabletype.md"
        },
        {
          "title": "Classification()",
          "path": "cppsharp.ast.expr.classification..ctor.md"
        },
        {
          "title": "Classification.Kind",
          "path": "cppsharp.ast.expr.classification.kind.md"
        },
        {
          "title": "Classification.Modifiable",
          "path": "cppsharp.ast.expr.classification.modifiable.md"
        },
        {
          "title": "Classification.IsLValue",
          "path": "cppsharp.ast.expr.classification.islvalue.md"
        },
        {
          "title": "Classification.IsXValue",
          "path": "cppsharp.ast.expr.classification.isxvalue.md"
        },
        {
          "title": "Classification.IsGLValue",
          "path": "cppsharp.ast.expr.classification.isglvalue.md"
        },
        {
          "title": "Classification.IsPRValue",
          "path": "cppsharp.ast.expr.classification.isprvalue.md"
        },
        {
          "title": "Classification.IsRValue",
          "path": "cppsharp.ast.expr.classification.isrvalue.md"
        },
        {
          "title": "Classification.IsModifiable",
          "path": "cppsharp.ast.expr.classification.ismodifiable.md"
        },
        {
          "title": "Classification",
          "path": "cppsharp.ast.expr.classification.md"
        },
        {
          "title": "Expr()",
          "path": "cppsharp.ast.expr..ctor.md"
        },
        {
          "title": "Expr.Type",
          "path": "cppsharp.ast.expr.type.md"
        },
        {
          "title": "Expr.ValueDependent",
          "path": "cppsharp.ast.expr.valuedependent.md"
        },
        {
          "title": "Expr.TypeDependent",
          "path": "cppsharp.ast.expr.typedependent.md"
        },
        {
          "title": "Expr.InstantiationDependent",
          "path": "cppsharp.ast.expr.instantiationdependent.md"
        },
        {
          "title": "Expr.ContainsUnexpandedParameterPack",
          "path": "cppsharp.ast.expr.containsunexpandedparameterpack.md"
        },
        {
          "title": "Expr.ExprLoc",
          "path": "cppsharp.ast.expr.exprloc.md"
        },
        {
          "title": "Expr.IsLValue",
          "path": "cppsharp.ast.expr.islvalue.md"
        },
        {
          "title": "Expr.IsRValue",
          "path": "cppsharp.ast.expr.isrvalue.md"
        },
        {
          "title": "Expr.IsXValue",
          "path": "cppsharp.ast.expr.isxvalue.md"
        },
        {
          "title": "Expr.IsGLValue",
          "path": "cppsharp.ast.expr.isglvalue.md"
        },
        {
          "title": "Expr.IsOrdinaryOrBitFieldObject",
          "path": "cppsharp.ast.expr.isordinaryorbitfieldobject.md"
        },
        {
          "title": "Expr.SourceBitField",
          "path": "cppsharp.ast.expr.sourcebitfield.md"
        },
        {
          "title": "Expr.ReferencedDeclOfCallee",
          "path": "cppsharp.ast.expr.referenceddeclofcallee.md"
        },
        {
          "title": "Expr.HasPlaceholderType",
          "path": "cppsharp.ast.expr.hasplaceholdertype.md"
        },
        {
          "title": "Expr",
          "path": "cppsharp.ast.expr.md"
        },
        {
          "title": "FullExpr()",
          "path": "cppsharp.ast.fullexpr..ctor.md"
        },
        {
          "title": "FullExpr.SubExpr",
          "path": "cppsharp.ast.fullexpr.subexpr.md"
        },
        {
          "title": "FullExpr",
          "path": "cppsharp.ast.fullexpr.md"
        },
        {
          "title": "ConstantExpr()",
          "path": "cppsharp.ast.constantexpr..ctor.md"
        },
        {
          "title": "ConstantExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.constantexpr.visit.md"
        },
        {
          "title": "ConstantExpr",
          "path": "cppsharp.ast.constantexpr.md"
        },
        {
          "title": "OpaqueValueExpr()",
          "path": "cppsharp.ast.opaquevalueexpr..ctor.md"
        },
        {
          "title": "OpaqueValueExpr.IsUnique",
          "path": "cppsharp.ast.opaquevalueexpr.isunique.md"
        },
        {
          "title": "OpaqueValueExpr.Location",
          "path": "cppsharp.ast.opaquevalueexpr.location.md"
        },
        {
          "title": "OpaqueValueExpr.SourceExpr",
          "path": "cppsharp.ast.opaquevalueexpr.sourceexpr.md"
        },
        {
          "title": "OpaqueValueExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.opaquevalueexpr.visit.md"
        },
        {
          "title": "OpaqueValueExpr",
          "path": "cppsharp.ast.opaquevalueexpr.md"
        },
        {
          "title": "DeclRefExpr()",
          "path": "cppsharp.ast.declrefexpr..ctor.md"
        },
        {
          "title": "DeclRefExpr.Location",
          "path": "cppsharp.ast.declrefexpr.location.md"
        },
        {
          "title": "DeclRefExpr.HadMultipleCandidates",
          "path": "cppsharp.ast.declrefexpr.hadmultiplecandidates.md"
        },
        {
          "title": "DeclRefExpr.HasQualifier",
          "path": "cppsharp.ast.declrefexpr.hasqualifier.md"
        },
        {
          "title": "DeclRefExpr.FoundDecl",
          "path": "cppsharp.ast.declrefexpr.founddecl.md"
        },
        {
          "title": "DeclRefExpr.HasTemplateKWAndArgsInfo",
          "path": "cppsharp.ast.declrefexpr.hastemplatekwandargsinfo.md"
        },
        {
          "title": "DeclRefExpr.TemplateKeywordLoc",
          "path": "cppsharp.ast.declrefexpr.templatekeywordloc.md"
        },
        {
          "title": "DeclRefExpr.LAngleLoc",
          "path": "cppsharp.ast.declrefexpr.langleloc.md"
        },
        {
          "title": "DeclRefExpr.RAngleLoc",
          "path": "cppsharp.ast.declrefexpr.rangleloc.md"
        },
        {
          "title": "DeclRefExpr.HasTemplateKeyword",
          "path": "cppsharp.ast.declrefexpr.hastemplatekeyword.md"
        },
        {
          "title": "DeclRefExpr.HasExplicitTemplateArgs",
          "path": "cppsharp.ast.declrefexpr.hasexplicittemplateargs.md"
        },
        {
          "title": "DeclRefExpr.NumTemplateArgs",
          "path": "cppsharp.ast.declrefexpr.numtemplateargs.md"
        },
        {
          "title": "DeclRefExpr.RefersToEnclosingVariableOrCapture",
          "path": "cppsharp.ast.declrefexpr.referstoenclosingvariableorcapture.md"
        },
        {
          "title": "DeclRefExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.declrefexpr.visit.md"
        },
        {
          "title": "DeclRefExpr",
          "path": "cppsharp.ast.declrefexpr.md"
        },
        {
          "title": "IntegerLiteral()",
          "path": "cppsharp.ast.integerliteral..ctor.md"
        },
        {
          "title": "IntegerLiteral.Location",
          "path": "cppsharp.ast.integerliteral.location.md"
        },
        {
          "title": "IntegerLiteral.Value",
          "path": "cppsharp.ast.integerliteral.value.md"
        },
        {
          "title": "IntegerLiteral.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.integerliteral.visit.md"
        },
        {
          "title": "IntegerLiteral",
          "path": "cppsharp.ast.integerliteral.md"
        },
        {
          "title": "FixedPointLiteral()",
          "path": "cppsharp.ast.fixedpointliteral..ctor.md"
        },
        {
          "title": "FixedPointLiteral.Location",
          "path": "cppsharp.ast.fixedpointliteral.location.md"
        },
        {
          "title": "FixedPointLiteral.Value",
          "path": "cppsharp.ast.fixedpointliteral.value.md"
        },
        {
          "title": "FixedPointLiteral.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.fixedpointliteral.visit.md"
        },
        {
          "title": "FixedPointLiteral",
          "path": "cppsharp.ast.fixedpointliteral.md"
        },
        {
          "title": "CharacterKind.Ascii",
          "path": "cppsharp.ast.characterliteral.characterkind.ascii.md"
        },
        {
          "title": "CharacterKind.Wide",
          "path": "cppsharp.ast.characterliteral.characterkind.wide.md"
        },
        {
          "title": "CharacterKind.UTF8",
          "path": "cppsharp.ast.characterliteral.characterkind.utf8.md"
        },
        {
          "title": "CharacterKind.UTF16",
          "path": "cppsharp.ast.characterliteral.characterkind.utf16.md"
        },
        {
          "title": "CharacterKind.UTF32",
          "path": "cppsharp.ast.characterliteral.characterkind.utf32.md"
        },
        {
          "title": "CharacterKind",
          "path": "cppsharp.ast.characterliteral.characterkind.md"
        },
        {
          "title": "CharacterLiteral()",
          "path": "cppsharp.ast.characterliteral..ctor.md"
        },
        {
          "title": "CharacterLiteral.Location",
          "path": "cppsharp.ast.characterliteral.location.md"
        },
        {
          "title": "CharacterLiteral.Kind",
          "path": "cppsharp.ast.characterliteral.kind.md"
        },
        {
          "title": "CharacterLiteral.Value",
          "path": "cppsharp.ast.characterliteral.value.md"
        },
        {
          "title": "CharacterLiteral.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.characterliteral.visit.md"
        },
        {
          "title": "CharacterLiteral",
          "path": "cppsharp.ast.characterliteral.md"
        },
        {
          "title": "FloatingLiteral()",
          "path": "cppsharp.ast.floatingliteral..ctor.md"
        },
        {
          "title": "FloatingLiteral.Exact",
          "path": "cppsharp.ast.floatingliteral.exact.md"
        },
        {
          "title": "FloatingLiteral.Location",
          "path": "cppsharp.ast.floatingliteral.location.md"
        },
        {
          "title": "FloatingLiteral.ValueAsApproximateDouble",
          "path": "cppsharp.ast.floatingliteral.valueasapproximatedouble.md"
        },
        {
          "title": "FloatingLiteral.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.floatingliteral.visit.md"
        },
        {
          "title": "FloatingLiteral",
          "path": "cppsharp.ast.floatingliteral.md"
        },
        {
          "title": "ImaginaryLiteral()",
          "path": "cppsharp.ast.imaginaryliteral..ctor.md"
        },
        {
          "title": "ImaginaryLiteral.SubExpr",
          "path": "cppsharp.ast.imaginaryliteral.subexpr.md"
        },
        {
          "title": "ImaginaryLiteral.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.imaginaryliteral.visit.md"
        },
        {
          "title": "ImaginaryLiteral",
          "path": "cppsharp.ast.imaginaryliteral.md"
        },
        {
          "title": "StringKind.Ascii",
          "path": "cppsharp.ast.stringliteral.stringkind.ascii.md"
        },
        {
          "title": "StringKind.Wide",
          "path": "cppsharp.ast.stringliteral.stringkind.wide.md"
        },
        {
          "title": "StringKind.UTF8",
          "path": "cppsharp.ast.stringliteral.stringkind.utf8.md"
        },
        {
          "title": "StringKind.UTF16",
          "path": "cppsharp.ast.stringliteral.stringkind.utf16.md"
        },
        {
          "title": "StringKind.UTF32",
          "path": "cppsharp.ast.stringliteral.stringkind.utf32.md"
        },
        {
          "title": "StringKind",
          "path": "cppsharp.ast.stringliteral.stringkind.md"
        },
        {
          "title": "StringLiteral()",
          "path": "cppsharp.ast.stringliteral..ctor.md"
        },
        {
          "title": "StringLiteral.String",
          "path": "cppsharp.ast.stringliteral.string.md"
        },
        {
          "title": "StringLiteral.Bytes",
          "path": "cppsharp.ast.stringliteral.bytes.md"
        },
        {
          "title": "StringLiteral.ByteLength",
          "path": "cppsharp.ast.stringliteral.bytelength.md"
        },
        {
          "title": "StringLiteral.Length",
          "path": "cppsharp.ast.stringliteral.length.md"
        },
        {
          "title": "StringLiteral.CharByteWidth",
          "path": "cppsharp.ast.stringliteral.charbytewidth.md"
        },
        {
          "title": "StringLiteral.Kind",
          "path": "cppsharp.ast.stringliteral.kind.md"
        },
        {
          "title": "StringLiteral.IsAscii",
          "path": "cppsharp.ast.stringliteral.isascii.md"
        },
        {
          "title": "StringLiteral.IsWide",
          "path": "cppsharp.ast.stringliteral.iswide.md"
        },
        {
          "title": "StringLiteral.IsUTF8",
          "path": "cppsharp.ast.stringliteral.isutf8.md"
        },
        {
          "title": "StringLiteral.IsUTF16",
          "path": "cppsharp.ast.stringliteral.isutf16.md"
        },
        {
          "title": "StringLiteral.IsUTF32",
          "path": "cppsharp.ast.stringliteral.isutf32.md"
        },
        {
          "title": "StringLiteral.IsPascal",
          "path": "cppsharp.ast.stringliteral.ispascal.md"
        },
        {
          "title": "StringLiteral.ContainsNonAscii",
          "path": "cppsharp.ast.stringliteral.containsnonascii.md"
        },
        {
          "title": "StringLiteral.ContainsNonAsciiOrNull",
          "path": "cppsharp.ast.stringliteral.containsnonasciiornull.md"
        },
        {
          "title": "StringLiteral.NumConcatenated",
          "path": "cppsharp.ast.stringliteral.numconcatenated.md"
        },
        {
          "title": "StringLiteral.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.stringliteral.visit.md"
        },
        {
          "title": "StringLiteral",
          "path": "cppsharp.ast.stringliteral.md"
        },
        {
          "title": "IdentKind.Func",
          "path": "cppsharp.ast.predefinedexpr.identkind.func.md"
        },
        {
          "title": "IdentKind.Function",
          "path": "cppsharp.ast.predefinedexpr.identkind.function.md"
        },
        {
          "title": "IdentKind.LFunction",
          "path": "cppsharp.ast.predefinedexpr.identkind.lfunction.md"
        },
        {
          "title": "IdentKind.FuncDName",
          "path": "cppsharp.ast.predefinedexpr.identkind.funcdname.md"
        },
        {
          "title": "IdentKind.FuncSig",
          "path": "cppsharp.ast.predefinedexpr.identkind.funcsig.md"
        },
        {
          "title": "IdentKind.LFuncSig",
          "path": "cppsharp.ast.predefinedexpr.identkind.lfuncsig.md"
        },
        {
          "title": "IdentKind.PrettyFunction",
          "path": "cppsharp.ast.predefinedexpr.identkind.prettyfunction.md"
        },
        {
          "title": "IdentKind.PrettyFunctionNoVirtual",
          "path": "cppsharp.ast.predefinedexpr.identkind.prettyfunctionnovirtual.md"
        },
        {
          "title": "IdentKind",
          "path": "cppsharp.ast.predefinedexpr.identkind-1.md"
        },
        {
          "title": "PredefinedExpr()",
          "path": "cppsharp.ast.predefinedexpr..ctor.md"
        },
        {
          "title": "PredefinedExpr.Location",
          "path": "cppsharp.ast.predefinedexpr.location.md"
        },
        {
          "title": "PredefinedExpr.identKind",
          "path": "cppsharp.ast.predefinedexpr.identkind-2.md"
        },
        {
          "title": "PredefinedExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.predefinedexpr.visit.md"
        },
        {
          "title": "PredefinedExpr",
          "path": "cppsharp.ast.predefinedexpr.md"
        },
        {
          "title": "ParenExpr()",
          "path": "cppsharp.ast.parenexpr..ctor.md"
        },
        {
          "title": "ParenExpr.SubExpr",
          "path": "cppsharp.ast.parenexpr.subexpr.md"
        },
        {
          "title": "ParenExpr.LParen",
          "path": "cppsharp.ast.parenexpr.lparen.md"
        },
        {
          "title": "ParenExpr.RParen",
          "path": "cppsharp.ast.parenexpr.rparen.md"
        },
        {
          "title": "ParenExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.parenexpr.visit.md"
        },
        {
          "title": "ParenExpr",
          "path": "cppsharp.ast.parenexpr.md"
        },
        {
          "title": "UnaryOperator()",
          "path": "cppsharp.ast.unaryoperator..ctor.md"
        },
        {
          "title": "UnaryOperator.Opcode",
          "path": "cppsharp.ast.unaryoperator.opcode.md"
        },
        {
          "title": "UnaryOperator.SubExpr",
          "path": "cppsharp.ast.unaryoperator.subexpr.md"
        },
        {
          "title": "UnaryOperator.OperatorLoc",
          "path": "cppsharp.ast.unaryoperator.operatorloc.md"
        },
        {
          "title": "UnaryOperator.CanOverflow",
          "path": "cppsharp.ast.unaryoperator.canoverflow.md"
        },
        {
          "title": "UnaryOperator.IsPrefix",
          "path": "cppsharp.ast.unaryoperator.isprefix.md"
        },
        {
          "title": "UnaryOperator.IsPostfix",
          "path": "cppsharp.ast.unaryoperator.ispostfix.md"
        },
        {
          "title": "UnaryOperator.IsIncrementOp",
          "path": "cppsharp.ast.unaryoperator.isincrementop.md"
        },
        {
          "title": "UnaryOperator.IsDecrementOp",
          "path": "cppsharp.ast.unaryoperator.isdecrementop.md"
        },
        {
          "title": "UnaryOperator.IsIncrementDecrementOp",
          "path": "cppsharp.ast.unaryoperator.isincrementdecrementop.md"
        },
        {
          "title": "UnaryOperator.IsArithmeticOp",
          "path": "cppsharp.ast.unaryoperator.isarithmeticop.md"
        },
        {
          "title": "UnaryOperator.IsFPContractableWithinStatement",
          "path": "cppsharp.ast.unaryoperator.isfpcontractablewithinstatement.md"
        },
        {
          "title": "UnaryOperator.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.unaryoperator.visit.md"
        },
        {
          "title": "UnaryOperator",
          "path": "cppsharp.ast.unaryoperator.md"
        },
        {
          "title": "OffsetOfExpr()",
          "path": "cppsharp.ast.offsetofexpr..ctor.md"
        },
        {
          "title": "OffsetOfExpr.OperatorLoc",
          "path": "cppsharp.ast.offsetofexpr.operatorloc.md"
        },
        {
          "title": "OffsetOfExpr.RParenLoc",
          "path": "cppsharp.ast.offsetofexpr.rparenloc.md"
        },
        {
          "title": "OffsetOfExpr.NumComponents",
          "path": "cppsharp.ast.offsetofexpr.numcomponents.md"
        },
        {
          "title": "OffsetOfExpr.NumExpressions",
          "path": "cppsharp.ast.offsetofexpr.numexpressions.md"
        },
        {
          "title": "OffsetOfExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.offsetofexpr.visit.md"
        },
        {
          "title": "OffsetOfExpr",
          "path": "cppsharp.ast.offsetofexpr.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr()",
          "path": "cppsharp.ast.unaryexprortypetraitexpr..ctor.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr.Kind",
          "path": "cppsharp.ast.unaryexprortypetraitexpr.kind.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr.OperatorLoc",
          "path": "cppsharp.ast.unaryexprortypetraitexpr.operatorloc.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr.RParenLoc",
          "path": "cppsharp.ast.unaryexprortypetraitexpr.rparenloc.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr.IsArgumentType",
          "path": "cppsharp.ast.unaryexprortypetraitexpr.isargumenttype.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr.ArgumentType",
          "path": "cppsharp.ast.unaryexprortypetraitexpr.argumenttype.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr.ArgumentExpr",
          "path": "cppsharp.ast.unaryexprortypetraitexpr.argumentexpr.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr.TypeOfArgument",
          "path": "cppsharp.ast.unaryexprortypetraitexpr.typeofargument.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.unaryexprortypetraitexpr.visit.md"
        },
        {
          "title": "UnaryExprOrTypeTraitExpr",
          "path": "cppsharp.ast.unaryexprortypetraitexpr.md"
        },
        {
          "title": "ArraySubscriptExpr()",
          "path": "cppsharp.ast.arraysubscriptexpr..ctor.md"
        },
        {
          "title": "ArraySubscriptExpr.LHS",
          "path": "cppsharp.ast.arraysubscriptexpr.lhs.md"
        },
        {
          "title": "ArraySubscriptExpr.RHS",
          "path": "cppsharp.ast.arraysubscriptexpr.rhs.md"
        },
        {
          "title": "ArraySubscriptExpr.RBracketLoc",
          "path": "cppsharp.ast.arraysubscriptexpr.rbracketloc.md"
        },
        {
          "title": "ArraySubscriptExpr.Base",
          "path": "cppsharp.ast.arraysubscriptexpr.base.md"
        },
        {
          "title": "ArraySubscriptExpr.Idx",
          "path": "cppsharp.ast.arraysubscriptexpr.idx.md"
        },
        {
          "title": "ArraySubscriptExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.arraysubscriptexpr.visit.md"
        },
        {
          "title": "ArraySubscriptExpr",
          "path": "cppsharp.ast.arraysubscriptexpr.md"
        },
        {
          "title": "CallExpr()",
          "path": "cppsharp.ast.callexpr..ctor.md"
        },
        {
          "title": "CallExpr.Arguments",
          "path": "cppsharp.ast.callexpr.arguments.md"
        },
        {
          "title": "CallExpr.Callee",
          "path": "cppsharp.ast.callexpr.callee.md"
        },
        {
          "title": "CallExpr.RParenLoc",
          "path": "cppsharp.ast.callexpr.rparenloc.md"
        },
        {
          "title": "CallExpr.CalleeDecl",
          "path": "cppsharp.ast.callexpr.calleedecl.md"
        },
        {
          "title": "CallExpr.DirectCallee",
          "path": "cppsharp.ast.callexpr.directcallee.md"
        },
        {
          "title": "CallExpr.NumArgs",
          "path": "cppsharp.ast.callexpr.numargs.md"
        },
        {
          "title": "CallExpr.NumCommas",
          "path": "cppsharp.ast.callexpr.numcommas.md"
        },
        {
          "title": "CallExpr.BuiltinCallee",
          "path": "cppsharp.ast.callexpr.builtincallee.md"
        },
        {
          "title": "CallExpr.IsCallToStdMove",
          "path": "cppsharp.ast.callexpr.iscalltostdmove.md"
        },
        {
          "title": "CallExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.callexpr.visit.md"
        },
        {
          "title": "CallExpr",
          "path": "cppsharp.ast.callexpr.md"
        },
        {
          "title": "MemberExpr()",
          "path": "cppsharp.ast.memberexpr..ctor.md"
        },
        {
          "title": "MemberExpr.Base",
          "path": "cppsharp.ast.memberexpr.base.md"
        },
        {
          "title": "MemberExpr.Arrow",
          "path": "cppsharp.ast.memberexpr.arrow.md"
        },
        {
          "title": "MemberExpr.MemberLoc",
          "path": "cppsharp.ast.memberexpr.memberloc.md"
        },
        {
          "title": "MemberExpr.HadMultipleCandidates",
          "path": "cppsharp.ast.memberexpr.hadmultiplecandidates.md"
        },
        {
          "title": "MemberExpr.HasQualifier",
          "path": "cppsharp.ast.memberexpr.hasqualifier.md"
        },
        {
          "title": "MemberExpr.TemplateKeywordLoc",
          "path": "cppsharp.ast.memberexpr.templatekeywordloc.md"
        },
        {
          "title": "MemberExpr.LAngleLoc",
          "path": "cppsharp.ast.memberexpr.langleloc.md"
        },
        {
          "title": "MemberExpr.RAngleLoc",
          "path": "cppsharp.ast.memberexpr.rangleloc.md"
        },
        {
          "title": "MemberExpr.HasTemplateKeyword",
          "path": "cppsharp.ast.memberexpr.hastemplatekeyword.md"
        },
        {
          "title": "MemberExpr.HasExplicitTemplateArgs",
          "path": "cppsharp.ast.memberexpr.hasexplicittemplateargs.md"
        },
        {
          "title": "MemberExpr.NumTemplateArgs",
          "path": "cppsharp.ast.memberexpr.numtemplateargs.md"
        },
        {
          "title": "MemberExpr.OperatorLoc",
          "path": "cppsharp.ast.memberexpr.operatorloc.md"
        },
        {
          "title": "MemberExpr.IsImplicitAccess",
          "path": "cppsharp.ast.memberexpr.isimplicitaccess.md"
        },
        {
          "title": "MemberExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.memberexpr.visit.md"
        },
        {
          "title": "MemberExpr",
          "path": "cppsharp.ast.memberexpr.md"
        },
        {
          "title": "CompoundLiteralExpr()",
          "path": "cppsharp.ast.compoundliteralexpr..ctor.md"
        },
        {
          "title": "CompoundLiteralExpr.Initializer",
          "path": "cppsharp.ast.compoundliteralexpr.initializer.md"
        },
        {
          "title": "CompoundLiteralExpr.FileScope",
          "path": "cppsharp.ast.compoundliteralexpr.filescope.md"
        },
        {
          "title": "CompoundLiteralExpr.LParenLoc",
          "path": "cppsharp.ast.compoundliteralexpr.lparenloc.md"
        },
        {
          "title": "CompoundLiteralExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.compoundliteralexpr.visit.md"
        },
        {
          "title": "CompoundLiteralExpr",
          "path": "cppsharp.ast.compoundliteralexpr.md"
        },
        {
          "title": "CastExpr()",
          "path": "cppsharp.ast.castexpr..ctor.md"
        },
        {
          "title": "CastExpr.CastKind",
          "path": "cppsharp.ast.castexpr.castkind.md"
        },
        {
          "title": "CastExpr.SubExpr",
          "path": "cppsharp.ast.castexpr.subexpr.md"
        },
        {
          "title": "CastExpr.CastKindName",
          "path": "cppsharp.ast.castexpr.castkindname.md"
        },
        {
          "title": "CastExpr.SubExprAsWritten",
          "path": "cppsharp.ast.castexpr.subexpraswritten.md"
        },
        {
          "title": "CastExpr.ConversionFunction",
          "path": "cppsharp.ast.castexpr.conversionfunction.md"
        },
        {
          "title": "CastExpr.PathEmpty",
          "path": "cppsharp.ast.castexpr.pathempty.md"
        },
        {
          "title": "CastExpr.PathSize",
          "path": "cppsharp.ast.castexpr.pathsize.md"
        },
        {
          "title": "CastExpr",
          "path": "cppsharp.ast.castexpr.md"
        },
        {
          "title": "OnStack_t.OnStack",
          "path": "cppsharp.ast.implicitcastexpr.onstack_t.onstack.md"
        },
        {
          "title": "OnStack_t",
          "path": "cppsharp.ast.implicitcastexpr.onstack_t.md"
        },
        {
          "title": "ImplicitCastExpr()",
          "path": "cppsharp.ast.implicitcastexpr..ctor.md"
        },
        {
          "title": "ImplicitCastExpr.IsPartOfExplicitCast",
          "path": "cppsharp.ast.implicitcastexpr.ispartofexplicitcast.md"
        },
        {
          "title": "ImplicitCastExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.implicitcastexpr.visit.md"
        },
        {
          "title": "ImplicitCastExpr",
          "path": "cppsharp.ast.implicitcastexpr.md"
        },
        {
          "title": "ExplicitCastExpr()",
          "path": "cppsharp.ast.explicitcastexpr..ctor.md"
        },
        {
          "title": "ExplicitCastExpr.TypeAsWritten",
          "path": "cppsharp.ast.explicitcastexpr.typeaswritten.md"
        },
        {
          "title": "ExplicitCastExpr",
          "path": "cppsharp.ast.explicitcastexpr.md"
        },
        {
          "title": "CStyleCastExpr()",
          "path": "cppsharp.ast.cstylecastexpr..ctor.md"
        },
        {
          "title": "CStyleCastExpr.LParenLoc",
          "path": "cppsharp.ast.cstylecastexpr.lparenloc.md"
        },
        {
          "title": "CStyleCastExpr.RParenLoc",
          "path": "cppsharp.ast.cstylecastexpr.rparenloc.md"
        },
        {
          "title": "CStyleCastExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cstylecastexpr.visit.md"
        },
        {
          "title": "CStyleCastExpr",
          "path": "cppsharp.ast.cstylecastexpr.md"
        },
        {
          "title": "BinaryOperator()",
          "path": "cppsharp.ast.binaryoperator..ctor.md"
        },
        {
          "title": "BinaryOperator.OperatorLoc",
          "path": "cppsharp.ast.binaryoperator.operatorloc.md"
        },
        {
          "title": "BinaryOperator.Opcode",
          "path": "cppsharp.ast.binaryoperator.opcode.md"
        },
        {
          "title": "BinaryOperator.LHS",
          "path": "cppsharp.ast.binaryoperator.lhs.md"
        },
        {
          "title": "BinaryOperator.RHS",
          "path": "cppsharp.ast.binaryoperator.rhs.md"
        },
        {
          "title": "BinaryOperator.OpcodeStr",
          "path": "cppsharp.ast.binaryoperator.opcodestr.md"
        },
        {
          "title": "BinaryOperator.IsPtrMemOp",
          "path": "cppsharp.ast.binaryoperator.isptrmemop.md"
        },
        {
          "title": "BinaryOperator.IsMultiplicativeOp",
          "path": "cppsharp.ast.binaryoperator.ismultiplicativeop.md"
        },
        {
          "title": "BinaryOperator.IsAdditiveOp",
          "path": "cppsharp.ast.binaryoperator.isadditiveop.md"
        },
        {
          "title": "BinaryOperator.IsShiftOp",
          "path": "cppsharp.ast.binaryoperator.isshiftop.md"
        },
        {
          "title": "BinaryOperator.IsBitwiseOp",
          "path": "cppsharp.ast.binaryoperator.isbitwiseop.md"
        },
        {
          "title": "BinaryOperator.IsRelationalOp",
          "path": "cppsharp.ast.binaryoperator.isrelationalop.md"
        },
        {
          "title": "BinaryOperator.IsEqualityOp",
          "path": "cppsharp.ast.binaryoperator.isequalityop.md"
        },
        {
          "title": "BinaryOperator.IsComparisonOp",
          "path": "cppsharp.ast.binaryoperator.iscomparisonop.md"
        },
        {
          "title": "BinaryOperator.IsLogicalOp",
          "path": "cppsharp.ast.binaryoperator.islogicalop.md"
        },
        {
          "title": "BinaryOperator.IsAssignmentOp",
          "path": "cppsharp.ast.binaryoperator.isassignmentop.md"
        },
        {
          "title": "BinaryOperator.IsCompoundAssignmentOp",
          "path": "cppsharp.ast.binaryoperator.iscompoundassignmentop.md"
        },
        {
          "title": "BinaryOperator.IsShiftAssignOp",
          "path": "cppsharp.ast.binaryoperator.isshiftassignop.md"
        },
        {
          "title": "BinaryOperator.IsFPContractableWithinStatement",
          "path": "cppsharp.ast.binaryoperator.isfpcontractablewithinstatement.md"
        },
        {
          "title": "BinaryOperator.IsFEnvAccessOn",
          "path": "cppsharp.ast.binaryoperator.isfenvaccesson.md"
        },
        {
          "title": "BinaryOperator.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.binaryoperator.visit.md"
        },
        {
          "title": "BinaryOperator",
          "path": "cppsharp.ast.binaryoperator.md"
        },
        {
          "title": "CompoundAssignOperator()",
          "path": "cppsharp.ast.compoundassignoperator..ctor.md"
        },
        {
          "title": "CompoundAssignOperator.ComputationLHSType",
          "path": "cppsharp.ast.compoundassignoperator.computationlhstype.md"
        },
        {
          "title": "CompoundAssignOperator.ComputationResultType",
          "path": "cppsharp.ast.compoundassignoperator.computationresulttype.md"
        },
        {
          "title": "CompoundAssignOperator.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.compoundassignoperator.visit.md"
        },
        {
          "title": "CompoundAssignOperator",
          "path": "cppsharp.ast.compoundassignoperator.md"
        },
        {
          "title": "AbstractConditionalOperator()",
          "path": "cppsharp.ast.abstractconditionaloperator..ctor.md"
        },
        {
          "title": "AbstractConditionalOperator.Cond",
          "path": "cppsharp.ast.abstractconditionaloperator.cond.md"
        },
        {
          "title": "AbstractConditionalOperator.TrueExpr",
          "path": "cppsharp.ast.abstractconditionaloperator.trueexpr.md"
        },
        {
          "title": "AbstractConditionalOperator.FalseExpr",
          "path": "cppsharp.ast.abstractconditionaloperator.falseexpr.md"
        },
        {
          "title": "AbstractConditionalOperator.QuestionLoc",
          "path": "cppsharp.ast.abstractconditionaloperator.questionloc.md"
        },
        {
          "title": "AbstractConditionalOperator.ColonLoc",
          "path": "cppsharp.ast.abstractconditionaloperator.colonloc.md"
        },
        {
          "title": "AbstractConditionalOperator",
          "path": "cppsharp.ast.abstractconditionaloperator.md"
        },
        {
          "title": "ConditionalOperator()",
          "path": "cppsharp.ast.conditionaloperator..ctor.md"
        },
        {
          "title": "ConditionalOperator.LHS",
          "path": "cppsharp.ast.conditionaloperator.lhs.md"
        },
        {
          "title": "ConditionalOperator.RHS",
          "path": "cppsharp.ast.conditionaloperator.rhs.md"
        },
        {
          "title": "ConditionalOperator.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.conditionaloperator.visit.md"
        },
        {
          "title": "ConditionalOperator",
          "path": "cppsharp.ast.conditionaloperator.md"
        },
        {
          "title": "BinaryConditionalOperator()",
          "path": "cppsharp.ast.binaryconditionaloperator..ctor.md"
        },
        {
          "title": "BinaryConditionalOperator.Common",
          "path": "cppsharp.ast.binaryconditionaloperator.common.md"
        },
        {
          "title": "BinaryConditionalOperator.OpaqueValue",
          "path": "cppsharp.ast.binaryconditionaloperator.opaquevalue.md"
        },
        {
          "title": "BinaryConditionalOperator.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.binaryconditionaloperator.visit.md"
        },
        {
          "title": "BinaryConditionalOperator",
          "path": "cppsharp.ast.binaryconditionaloperator.md"
        },
        {
          "title": "AddrLabelExpr()",
          "path": "cppsharp.ast.addrlabelexpr..ctor.md"
        },
        {
          "title": "AddrLabelExpr.AmpAmpLoc",
          "path": "cppsharp.ast.addrlabelexpr.ampamploc.md"
        },
        {
          "title": "AddrLabelExpr.LabelLoc",
          "path": "cppsharp.ast.addrlabelexpr.labelloc.md"
        },
        {
          "title": "AddrLabelExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.addrlabelexpr.visit.md"
        },
        {
          "title": "AddrLabelExpr",
          "path": "cppsharp.ast.addrlabelexpr.md"
        },
        {
          "title": "StmtExpr()",
          "path": "cppsharp.ast.stmtexpr..ctor.md"
        },
        {
          "title": "StmtExpr.SubStmt",
          "path": "cppsharp.ast.stmtexpr.substmt.md"
        },
        {
          "title": "StmtExpr.LParenLoc",
          "path": "cppsharp.ast.stmtexpr.lparenloc.md"
        },
        {
          "title": "StmtExpr.RParenLoc",
          "path": "cppsharp.ast.stmtexpr.rparenloc.md"
        },
        {
          "title": "StmtExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.stmtexpr.visit.md"
        },
        {
          "title": "StmtExpr",
          "path": "cppsharp.ast.stmtexpr.md"
        },
        {
          "title": "ShuffleVectorExpr()",
          "path": "cppsharp.ast.shufflevectorexpr..ctor.md"
        },
        {
          "title": "ShuffleVectorExpr.BuiltinLoc",
          "path": "cppsharp.ast.shufflevectorexpr.builtinloc.md"
        },
        {
          "title": "ShuffleVectorExpr.RParenLoc",
          "path": "cppsharp.ast.shufflevectorexpr.rparenloc.md"
        },
        {
          "title": "ShuffleVectorExpr.NumSubExprs",
          "path": "cppsharp.ast.shufflevectorexpr.numsubexprs.md"
        },
        {
          "title": "ShuffleVectorExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.shufflevectorexpr.visit.md"
        },
        {
          "title": "ShuffleVectorExpr",
          "path": "cppsharp.ast.shufflevectorexpr.md"
        },
        {
          "title": "ConvertVectorExpr()",
          "path": "cppsharp.ast.convertvectorexpr..ctor.md"
        },
        {
          "title": "ConvertVectorExpr.SrcExpr",
          "path": "cppsharp.ast.convertvectorexpr.srcexpr.md"
        },
        {
          "title": "ConvertVectorExpr.BuiltinLoc",
          "path": "cppsharp.ast.convertvectorexpr.builtinloc.md"
        },
        {
          "title": "ConvertVectorExpr.RParenLoc",
          "path": "cppsharp.ast.convertvectorexpr.rparenloc.md"
        },
        {
          "title": "ConvertVectorExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.convertvectorexpr.visit.md"
        },
        {
          "title": "ConvertVectorExpr",
          "path": "cppsharp.ast.convertvectorexpr.md"
        },
        {
          "title": "ChooseExpr()",
          "path": "cppsharp.ast.chooseexpr..ctor.md"
        },
        {
          "title": "ChooseExpr.IsConditionTrue",
          "path": "cppsharp.ast.chooseexpr.isconditiontrue.md"
        },
        {
          "title": "ChooseExpr.Cond",
          "path": "cppsharp.ast.chooseexpr.cond.md"
        },
        {
          "title": "ChooseExpr.LHS",
          "path": "cppsharp.ast.chooseexpr.lhs.md"
        },
        {
          "title": "ChooseExpr.RHS",
          "path": "cppsharp.ast.chooseexpr.rhs.md"
        },
        {
          "title": "ChooseExpr.BuiltinLoc",
          "path": "cppsharp.ast.chooseexpr.builtinloc.md"
        },
        {
          "title": "ChooseExpr.RParenLoc",
          "path": "cppsharp.ast.chooseexpr.rparenloc.md"
        },
        {
          "title": "ChooseExpr.IsConditionDependent",
          "path": "cppsharp.ast.chooseexpr.isconditiondependent.md"
        },
        {
          "title": "ChooseExpr.ChosenSubExpr",
          "path": "cppsharp.ast.chooseexpr.chosensubexpr.md"
        },
        {
          "title": "ChooseExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.chooseexpr.visit.md"
        },
        {
          "title": "ChooseExpr",
          "path": "cppsharp.ast.chooseexpr.md"
        },
        {
          "title": "GNUNullExpr()",
          "path": "cppsharp.ast.gnunullexpr..ctor.md"
        },
        {
          "title": "GNUNullExpr.TokenLocation",
          "path": "cppsharp.ast.gnunullexpr.tokenlocation.md"
        },
        {
          "title": "GNUNullExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.gnunullexpr.visit.md"
        },
        {
          "title": "GNUNullExpr",
          "path": "cppsharp.ast.gnunullexpr.md"
        },
        {
          "title": "VAArgExpr()",
          "path": "cppsharp.ast.vaargexpr..ctor.md"
        },
        {
          "title": "VAArgExpr.SubExpr",
          "path": "cppsharp.ast.vaargexpr.subexpr.md"
        },
        {
          "title": "VAArgExpr.IsMicrosoftABI",
          "path": "cppsharp.ast.vaargexpr.ismicrosoftabi.md"
        },
        {
          "title": "VAArgExpr.BuiltinLoc",
          "path": "cppsharp.ast.vaargexpr.builtinloc.md"
        },
        {
          "title": "VAArgExpr.RParenLoc",
          "path": "cppsharp.ast.vaargexpr.rparenloc.md"
        },
        {
          "title": "VAArgExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.vaargexpr.visit.md"
        },
        {
          "title": "VAArgExpr",
          "path": "cppsharp.ast.vaargexpr.md"
        },
        {
          "title": "InitListExpr()",
          "path": "cppsharp.ast.initlistexpr..ctor.md"
        },
        {
          "title": "InitListExpr.ArrayFiller",
          "path": "cppsharp.ast.initlistexpr.arrayfiller.md"
        },
        {
          "title": "InitListExpr.LBraceLoc",
          "path": "cppsharp.ast.initlistexpr.lbraceloc.md"
        },
        {
          "title": "InitListExpr.RBraceLoc",
          "path": "cppsharp.ast.initlistexpr.rbraceloc.md"
        },
        {
          "title": "InitListExpr.SyntacticForm",
          "path": "cppsharp.ast.initlistexpr.syntacticform.md"
        },
        {
          "title": "InitListExpr.NumInits",
          "path": "cppsharp.ast.initlistexpr.numinits.md"
        },
        {
          "title": "InitListExpr.HasArrayFiller",
          "path": "cppsharp.ast.initlistexpr.hasarrayfiller.md"
        },
        {
          "title": "InitListExpr.IsExplicit",
          "path": "cppsharp.ast.initlistexpr.isexplicit.md"
        },
        {
          "title": "InitListExpr.IsStringLiteralInit",
          "path": "cppsharp.ast.initlistexpr.isstringliteralinit.md"
        },
        {
          "title": "InitListExpr.IsTransparent",
          "path": "cppsharp.ast.initlistexpr.istransparent.md"
        },
        {
          "title": "InitListExpr.IsSemanticForm",
          "path": "cppsharp.ast.initlistexpr.issemanticform.md"
        },
        {
          "title": "InitListExpr.SemanticForm",
          "path": "cppsharp.ast.initlistexpr.semanticform.md"
        },
        {
          "title": "InitListExpr.IsSyntacticForm",
          "path": "cppsharp.ast.initlistexpr.issyntacticform.md"
        },
        {
          "title": "InitListExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.initlistexpr.visit.md"
        },
        {
          "title": "InitListExpr",
          "path": "cppsharp.ast.initlistexpr.md"
        },
        {
          "title": "Designator()",
          "path": "cppsharp.ast.designatedinitexpr.designator..ctor.md"
        },
        {
          "title": "Designator.Field",
          "path": "cppsharp.ast.designatedinitexpr.designator.field.md"
        },
        {
          "title": "Designator.IsFieldDesignator",
          "path": "cppsharp.ast.designatedinitexpr.designator.isfielddesignator.md"
        },
        {
          "title": "Designator.IsArrayDesignator",
          "path": "cppsharp.ast.designatedinitexpr.designator.isarraydesignator.md"
        },
        {
          "title": "Designator.IsArrayRangeDesignator",
          "path": "cppsharp.ast.designatedinitexpr.designator.isarrayrangedesignator.md"
        },
        {
          "title": "Designator.DotLoc",
          "path": "cppsharp.ast.designatedinitexpr.designator.dotloc.md"
        },
        {
          "title": "Designator.FieldLoc",
          "path": "cppsharp.ast.designatedinitexpr.designator.fieldloc.md"
        },
        {
          "title": "Designator.LBracketLoc",
          "path": "cppsharp.ast.designatedinitexpr.designator.lbracketloc.md"
        },
        {
          "title": "Designator.RBracketLoc",
          "path": "cppsharp.ast.designatedinitexpr.designator.rbracketloc.md"
        },
        {
          "title": "Designator.EllipsisLoc",
          "path": "cppsharp.ast.designatedinitexpr.designator.ellipsisloc.md"
        },
        {
          "title": "Designator.FirstExprIndex",
          "path": "cppsharp.ast.designatedinitexpr.designator.firstexprindex.md"
        },
        {
          "title": "Designator.SourceRange",
          "path": "cppsharp.ast.designatedinitexpr.designator.sourcerange.md"
        },
        {
          "title": "Designator",
          "path": "cppsharp.ast.designatedinitexpr.designator.md"
        },
        {
          "title": "FieldDesignator()",
          "path": "cppsharp.ast.designatedinitexpr.fielddesignator..ctor.md"
        },
        {
          "title": "FieldDesignator",
          "path": "cppsharp.ast.designatedinitexpr.fielddesignator.md"
        },
        {
          "title": "ArrayOrRangeDesignator()",
          "path": "cppsharp.ast.designatedinitexpr.arrayorrangedesignator..ctor.md"
        },
        {
          "title": "ArrayOrRangeDesignator",
          "path": "cppsharp.ast.designatedinitexpr.arrayorrangedesignator.md"
        },
        {
          "title": "DesignatedInitExpr()",
          "path": "cppsharp.ast.designatedinitexpr..ctor.md"
        },
        {
          "title": "DesignatedInitExpr.EqualOrColonLoc",
          "path": "cppsharp.ast.designatedinitexpr.equalorcolonloc.md"
        },
        {
          "title": "DesignatedInitExpr.Init",
          "path": "cppsharp.ast.designatedinitexpr.init.md"
        },
        {
          "title": "DesignatedInitExpr.Size",
          "path": "cppsharp.ast.designatedinitexpr.size.md"
        },
        {
          "title": "DesignatedInitExpr.UsesGNUSyntax",
          "path": "cppsharp.ast.designatedinitexpr.usesgnusyntax.md"
        },
        {
          "title": "DesignatedInitExpr.NumSubExprs",
          "path": "cppsharp.ast.designatedinitexpr.numsubexprs.md"
        },
        {
          "title": "DesignatedInitExpr.DesignatorsSourceRange",
          "path": "cppsharp.ast.designatedinitexpr.designatorssourcerange.md"
        },
        {
          "title": "DesignatedInitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.designatedinitexpr.visit.md"
        },
        {
          "title": "DesignatedInitExpr",
          "path": "cppsharp.ast.designatedinitexpr.md"
        },
        {
          "title": "NoInitExpr()",
          "path": "cppsharp.ast.noinitexpr..ctor.md"
        },
        {
          "title": "NoInitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.noinitexpr.visit.md"
        },
        {
          "title": "NoInitExpr",
          "path": "cppsharp.ast.noinitexpr.md"
        },
        {
          "title": "DesignatedInitUpdateExpr()",
          "path": "cppsharp.ast.designatedinitupdateexpr..ctor.md"
        },
        {
          "title": "DesignatedInitUpdateExpr.Base",
          "path": "cppsharp.ast.designatedinitupdateexpr.base.md"
        },
        {
          "title": "DesignatedInitUpdateExpr.Updater",
          "path": "cppsharp.ast.designatedinitupdateexpr.updater.md"
        },
        {
          "title": "DesignatedInitUpdateExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.designatedinitupdateexpr.visit.md"
        },
        {
          "title": "DesignatedInitUpdateExpr",
          "path": "cppsharp.ast.designatedinitupdateexpr.md"
        },
        {
          "title": "ArrayInitLoopExpr()",
          "path": "cppsharp.ast.arrayinitloopexpr..ctor.md"
        },
        {
          "title": "ArrayInitLoopExpr.CommonExpr",
          "path": "cppsharp.ast.arrayinitloopexpr.commonexpr.md"
        },
        {
          "title": "ArrayInitLoopExpr.SubExpr",
          "path": "cppsharp.ast.arrayinitloopexpr.subexpr.md"
        },
        {
          "title": "ArrayInitLoopExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.arrayinitloopexpr.visit.md"
        },
        {
          "title": "ArrayInitLoopExpr",
          "path": "cppsharp.ast.arrayinitloopexpr.md"
        },
        {
          "title": "ArrayInitIndexExpr()",
          "path": "cppsharp.ast.arrayinitindexexpr..ctor.md"
        },
        {
          "title": "ArrayInitIndexExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.arrayinitindexexpr.visit.md"
        },
        {
          "title": "ArrayInitIndexExpr",
          "path": "cppsharp.ast.arrayinitindexexpr.md"
        },
        {
          "title": "ImplicitValueInitExpr()",
          "path": "cppsharp.ast.implicitvalueinitexpr..ctor.md"
        },
        {
          "title": "ImplicitValueInitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.implicitvalueinitexpr.visit.md"
        },
        {
          "title": "ImplicitValueInitExpr",
          "path": "cppsharp.ast.implicitvalueinitexpr.md"
        },
        {
          "title": "ParenListExpr()",
          "path": "cppsharp.ast.parenlistexpr..ctor.md"
        },
        {
          "title": "ParenListExpr.NumExprs",
          "path": "cppsharp.ast.parenlistexpr.numexprs.md"
        },
        {
          "title": "ParenListExpr.LParenLoc",
          "path": "cppsharp.ast.parenlistexpr.lparenloc.md"
        },
        {
          "title": "ParenListExpr.RParenLoc",
          "path": "cppsharp.ast.parenlistexpr.rparenloc.md"
        },
        {
          "title": "ParenListExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.parenlistexpr.visit.md"
        },
        {
          "title": "ParenListExpr",
          "path": "cppsharp.ast.parenlistexpr.md"
        },
        {
          "title": "GenericSelectionExpr()",
          "path": "cppsharp.ast.genericselectionexpr..ctor.md"
        },
        {
          "title": "GenericSelectionExpr.NumAssocs",
          "path": "cppsharp.ast.genericselectionexpr.numassocs.md"
        },
        {
          "title": "GenericSelectionExpr.GenericLoc",
          "path": "cppsharp.ast.genericselectionexpr.genericloc.md"
        },
        {
          "title": "GenericSelectionExpr.DefaultLoc",
          "path": "cppsharp.ast.genericselectionexpr.defaultloc.md"
        },
        {
          "title": "GenericSelectionExpr.RParenLoc",
          "path": "cppsharp.ast.genericselectionexpr.rparenloc.md"
        },
        {
          "title": "GenericSelectionExpr.ControllingExpr",
          "path": "cppsharp.ast.genericselectionexpr.controllingexpr.md"
        },
        {
          "title": "GenericSelectionExpr.IsResultDependent",
          "path": "cppsharp.ast.genericselectionexpr.isresultdependent.md"
        },
        {
          "title": "GenericSelectionExpr.ResultIndex",
          "path": "cppsharp.ast.genericselectionexpr.resultindex.md"
        },
        {
          "title": "GenericSelectionExpr.ResultExpr",
          "path": "cppsharp.ast.genericselectionexpr.resultexpr.md"
        },
        {
          "title": "GenericSelectionExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.genericselectionexpr.visit.md"
        },
        {
          "title": "GenericSelectionExpr",
          "path": "cppsharp.ast.genericselectionexpr.md"
        },
        {
          "title": "ExtVectorElementExpr()",
          "path": "cppsharp.ast.extvectorelementexpr..ctor.md"
        },
        {
          "title": "ExtVectorElementExpr.Base",
          "path": "cppsharp.ast.extvectorelementexpr.base.md"
        },
        {
          "title": "ExtVectorElementExpr.AccessorLoc",
          "path": "cppsharp.ast.extvectorelementexpr.accessorloc.md"
        },
        {
          "title": "ExtVectorElementExpr.NumElements",
          "path": "cppsharp.ast.extvectorelementexpr.numelements.md"
        },
        {
          "title": "ExtVectorElementExpr.ContainsDuplicateElements",
          "path": "cppsharp.ast.extvectorelementexpr.containsduplicateelements.md"
        },
        {
          "title": "ExtVectorElementExpr.IsArrow",
          "path": "cppsharp.ast.extvectorelementexpr.isarrow.md"
        },
        {
          "title": "ExtVectorElementExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.extvectorelementexpr.visit.md"
        },
        {
          "title": "ExtVectorElementExpr",
          "path": "cppsharp.ast.extvectorelementexpr.md"
        },
        {
          "title": "BlockExpr()",
          "path": "cppsharp.ast.blockexpr..ctor.md"
        },
        {
          "title": "BlockExpr.CaretLocation",
          "path": "cppsharp.ast.blockexpr.caretlocation.md"
        },
        {
          "title": "BlockExpr.Body",
          "path": "cppsharp.ast.blockexpr.body.md"
        },
        {
          "title": "BlockExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.blockexpr.visit.md"
        },
        {
          "title": "BlockExpr",
          "path": "cppsharp.ast.blockexpr.md"
        },
        {
          "title": "AsTypeExpr()",
          "path": "cppsharp.ast.astypeexpr..ctor.md"
        },
        {
          "title": "AsTypeExpr.SrcExpr",
          "path": "cppsharp.ast.astypeexpr.srcexpr.md"
        },
        {
          "title": "AsTypeExpr.BuiltinLoc",
          "path": "cppsharp.ast.astypeexpr.builtinloc.md"
        },
        {
          "title": "AsTypeExpr.RParenLoc",
          "path": "cppsharp.ast.astypeexpr.rparenloc.md"
        },
        {
          "title": "AsTypeExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.astypeexpr.visit.md"
        },
        {
          "title": "AsTypeExpr",
          "path": "cppsharp.ast.astypeexpr.md"
        },
        {
          "title": "PseudoObjectExpr()",
          "path": "cppsharp.ast.pseudoobjectexpr..ctor.md"
        },
        {
          "title": "PseudoObjectExpr.SyntacticForm",
          "path": "cppsharp.ast.pseudoobjectexpr.syntacticform.md"
        },
        {
          "title": "PseudoObjectExpr.ResultExprIndex",
          "path": "cppsharp.ast.pseudoobjectexpr.resultexprindex.md"
        },
        {
          "title": "PseudoObjectExpr.ResultExpr",
          "path": "cppsharp.ast.pseudoobjectexpr.resultexpr.md"
        },
        {
          "title": "PseudoObjectExpr.NumSemanticExprs",
          "path": "cppsharp.ast.pseudoobjectexpr.numsemanticexprs.md"
        },
        {
          "title": "PseudoObjectExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.pseudoobjectexpr.visit.md"
        },
        {
          "title": "PseudoObjectExpr",
          "path": "cppsharp.ast.pseudoobjectexpr.md"
        },
        {
          "title": "AtomicOp.C11AtomicInit",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomicinit.md"
        },
        {
          "title": "AtomicOp.C11AtomicLoad",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomicload.md"
        },
        {
          "title": "AtomicOp.C11AtomicStore",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomicstore.md"
        },
        {
          "title": "AtomicOp.C11AtomicExchange",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomicexchange.md"
        },
        {
          "title": "AtomicOp.C11AtomicCompareExchangeStrong",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomiccompareexchangestrong.md"
        },
        {
          "title": "AtomicOp.C11AtomicCompareExchangeWeak",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomiccompareexchangeweak.md"
        },
        {
          "title": "AtomicOp.C11AtomicFetchAdd",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomicfetchadd.md"
        },
        {
          "title": "AtomicOp.C11AtomicFetchSub",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomicfetchsub.md"
        },
        {
          "title": "AtomicOp.C11AtomicFetchAnd",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomicfetchand.md"
        },
        {
          "title": "AtomicOp.C11AtomicFetchOr",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomicfetchor.md"
        },
        {
          "title": "AtomicOp.C11AtomicFetchXor",
          "path": "cppsharp.ast.atomicexpr.atomicop.c11atomicfetchxor.md"
        },
        {
          "title": "AtomicOp.AtomicLoad",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicload.md"
        },
        {
          "title": "AtomicOp.AtomicLoadN",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicloadn.md"
        },
        {
          "title": "AtomicOp.AtomicStore",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicstore.md"
        },
        {
          "title": "AtomicOp.AtomicStoreN",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicstoren.md"
        },
        {
          "title": "AtomicOp.AtomicExchange",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicexchange.md"
        },
        {
          "title": "AtomicOp.AtomicExchangeN",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicexchangen.md"
        },
        {
          "title": "AtomicOp.AtomicCompareExchange",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomiccompareexchange.md"
        },
        {
          "title": "AtomicOp.AtomicCompareExchangeN",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomiccompareexchangen.md"
        },
        {
          "title": "AtomicOp.AtomicFetchAdd",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicfetchadd.md"
        },
        {
          "title": "AtomicOp.AtomicFetchSub",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicfetchsub.md"
        },
        {
          "title": "AtomicOp.AtomicFetchAnd",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicfetchand.md"
        },
        {
          "title": "AtomicOp.AtomicFetchOr",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicfetchor.md"
        },
        {
          "title": "AtomicOp.AtomicFetchXor",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicfetchxor.md"
        },
        {
          "title": "AtomicOp.AtomicFetchNand",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicfetchnand.md"
        },
        {
          "title": "AtomicOp.AtomicAddFetch",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicaddfetch.md"
        },
        {
          "title": "AtomicOp.AtomicSubFetch",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicsubfetch.md"
        },
        {
          "title": "AtomicOp.AtomicAndFetch",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicandfetch.md"
        },
        {
          "title": "AtomicOp.AtomicOrFetch",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicorfetch.md"
        },
        {
          "title": "AtomicOp.AtomicXorFetch",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicxorfetch.md"
        },
        {
          "title": "AtomicOp.AtomicNandFetch",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicnandfetch.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicInit",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicinit.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicLoad",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicload.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicStore",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicstore.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicExchange",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicexchange.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicCompareExchangeStrong",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomiccompareexchangestrong.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicCompareExchangeWeak",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomiccompareexchangeweak.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicFetchAdd",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicfetchadd.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicFetchSub",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicfetchsub.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicFetchAnd",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicfetchand.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicFetchOr",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicfetchor.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicFetchXor",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicfetchxor.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicFetchMin",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicfetchmin.md"
        },
        {
          "title": "AtomicOp.OpenclAtomicFetchMax",
          "path": "cppsharp.ast.atomicexpr.atomicop.openclatomicfetchmax.md"
        },
        {
          "title": "AtomicOp.AtomicFetchMin",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicfetchmin.md"
        },
        {
          "title": "AtomicOp.AtomicFetchMax",
          "path": "cppsharp.ast.atomicexpr.atomicop.atomicfetchmax.md"
        },
        {
          "title": "AtomicOp",
          "path": "cppsharp.ast.atomicexpr.atomicop.md"
        },
        {
          "title": "AtomicExpr()",
          "path": "cppsharp.ast.atomicexpr..ctor.md"
        },
        {
          "title": "AtomicExpr.Ptr",
          "path": "cppsharp.ast.atomicexpr.ptr.md"
        },
        {
          "title": "AtomicExpr.Order",
          "path": "cppsharp.ast.atomicexpr.order.md"
        },
        {
          "title": "AtomicExpr.Scope",
          "path": "cppsharp.ast.atomicexpr.scope.md"
        },
        {
          "title": "AtomicExpr.Val1",
          "path": "cppsharp.ast.atomicexpr.val1.md"
        },
        {
          "title": "AtomicExpr.OrderFail",
          "path": "cppsharp.ast.atomicexpr.orderfail.md"
        },
        {
          "title": "AtomicExpr.Val2",
          "path": "cppsharp.ast.atomicexpr.val2.md"
        },
        {
          "title": "AtomicExpr.Weak",
          "path": "cppsharp.ast.atomicexpr.weak.md"
        },
        {
          "title": "AtomicExpr.ValueType",
          "path": "cppsharp.ast.atomicexpr.valuetype.md"
        },
        {
          "title": "AtomicExpr.Op",
          "path": "cppsharp.ast.atomicexpr.op.md"
        },
        {
          "title": "AtomicExpr.NumSubExprs",
          "path": "cppsharp.ast.atomicexpr.numsubexprs.md"
        },
        {
          "title": "AtomicExpr.IsVolatile",
          "path": "cppsharp.ast.atomicexpr.isvolatile.md"
        },
        {
          "title": "AtomicExpr.IsCmpXChg",
          "path": "cppsharp.ast.atomicexpr.iscmpxchg.md"
        },
        {
          "title": "AtomicExpr.IsOpenCL",
          "path": "cppsharp.ast.atomicexpr.isopencl.md"
        },
        {
          "title": "AtomicExpr.BuiltinLoc",
          "path": "cppsharp.ast.atomicexpr.builtinloc.md"
        },
        {
          "title": "AtomicExpr.RParenLoc",
          "path": "cppsharp.ast.atomicexpr.rparenloc.md"
        },
        {
          "title": "AtomicExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.atomicexpr.visit.md"
        },
        {
          "title": "AtomicExpr",
          "path": "cppsharp.ast.atomicexpr.md"
        },
        {
          "title": "TypoExpr()",
          "path": "cppsharp.ast.typoexpr..ctor.md"
        },
        {
          "title": "TypoExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.typoexpr.visit.md"
        },
        {
          "title": "TypoExpr",
          "path": "cppsharp.ast.typoexpr.md"
        },
        {
          "title": "CXXOperatorCallExpr()",
          "path": "cppsharp.ast.cxxoperatorcallexpr..ctor.md"
        },
        {
          "title": "CXXOperatorCallExpr.Operator",
          "path": "cppsharp.ast.cxxoperatorcallexpr.operator.md"
        },
        {
          "title": "CXXOperatorCallExpr.IsAssignmentOp",
          "path": "cppsharp.ast.cxxoperatorcallexpr.isassignmentop.md"
        },
        {
          "title": "CXXOperatorCallExpr.IsInfixBinaryOp",
          "path": "cppsharp.ast.cxxoperatorcallexpr.isinfixbinaryop.md"
        },
        {
          "title": "CXXOperatorCallExpr.OperatorLoc",
          "path": "cppsharp.ast.cxxoperatorcallexpr.operatorloc.md"
        },
        {
          "title": "CXXOperatorCallExpr.IsFPContractableWithinStatement",
          "path": "cppsharp.ast.cxxoperatorcallexpr.isfpcontractablewithinstatement.md"
        },
        {
          "title": "CXXOperatorCallExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxoperatorcallexpr.visit.md"
        },
        {
          "title": "CXXOperatorCallExpr",
          "path": "cppsharp.ast.cxxoperatorcallexpr.md"
        },
        {
          "title": "CXXMemberCallExpr()",
          "path": "cppsharp.ast.cxxmembercallexpr..ctor.md"
        },
        {
          "title": "CXXMemberCallExpr.ImplicitObjectArgument",
          "path": "cppsharp.ast.cxxmembercallexpr.implicitobjectargument.md"
        },
        {
          "title": "CXXMemberCallExpr.MethodDecl",
          "path": "cppsharp.ast.cxxmembercallexpr.methoddecl.md"
        },
        {
          "title": "CXXMemberCallExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxmembercallexpr.visit.md"
        },
        {
          "title": "CXXMemberCallExpr",
          "path": "cppsharp.ast.cxxmembercallexpr.md"
        },
        {
          "title": "CUDAKernelCallExpr()",
          "path": "cppsharp.ast.cudakernelcallexpr..ctor.md"
        },
        {
          "title": "CUDAKernelCallExpr.Config",
          "path": "cppsharp.ast.cudakernelcallexpr.config.md"
        },
        {
          "title": "CUDAKernelCallExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cudakernelcallexpr.visit.md"
        },
        {
          "title": "CUDAKernelCallExpr",
          "path": "cppsharp.ast.cudakernelcallexpr.md"
        },
        {
          "title": "CXXNamedCastExpr()",
          "path": "cppsharp.ast.cxxnamedcastexpr..ctor.md"
        },
        {
          "title": "CXXNamedCastExpr.CastName",
          "path": "cppsharp.ast.cxxnamedcastexpr.castname.md"
        },
        {
          "title": "CXXNamedCastExpr.OperatorLoc",
          "path": "cppsharp.ast.cxxnamedcastexpr.operatorloc.md"
        },
        {
          "title": "CXXNamedCastExpr.RParenLoc",
          "path": "cppsharp.ast.cxxnamedcastexpr.rparenloc.md"
        },
        {
          "title": "CXXNamedCastExpr.AngleBrackets",
          "path": "cppsharp.ast.cxxnamedcastexpr.anglebrackets.md"
        },
        {
          "title": "CXXNamedCastExpr",
          "path": "cppsharp.ast.cxxnamedcastexpr.md"
        },
        {
          "title": "CXXStaticCastExpr()",
          "path": "cppsharp.ast.cxxstaticcastexpr..ctor.md"
        },
        {
          "title": "CXXStaticCastExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxstaticcastexpr.visit.md"
        },
        {
          "title": "CXXStaticCastExpr",
          "path": "cppsharp.ast.cxxstaticcastexpr.md"
        },
        {
          "title": "CXXDynamicCastExpr()",
          "path": "cppsharp.ast.cxxdynamiccastexpr..ctor.md"
        },
        {
          "title": "CXXDynamicCastExpr.IsAlwaysNull",
          "path": "cppsharp.ast.cxxdynamiccastexpr.isalwaysnull.md"
        },
        {
          "title": "CXXDynamicCastExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxdynamiccastexpr.visit.md"
        },
        {
          "title": "CXXDynamicCastExpr",
          "path": "cppsharp.ast.cxxdynamiccastexpr.md"
        },
        {
          "title": "CXXReinterpretCastExpr()",
          "path": "cppsharp.ast.cxxreinterpretcastexpr..ctor.md"
        },
        {
          "title": "CXXReinterpretCastExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxreinterpretcastexpr.visit.md"
        },
        {
          "title": "CXXReinterpretCastExpr",
          "path": "cppsharp.ast.cxxreinterpretcastexpr.md"
        },
        {
          "title": "CXXConstCastExpr()",
          "path": "cppsharp.ast.cxxconstcastexpr..ctor.md"
        },
        {
          "title": "CXXConstCastExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxconstcastexpr.visit.md"
        },
        {
          "title": "CXXConstCastExpr",
          "path": "cppsharp.ast.cxxconstcastexpr.md"
        },
        {
          "title": "LiteralOperatorKind.Raw",
          "path": "cppsharp.ast.userdefinedliteral.literaloperatorkind.raw.md"
        },
        {
          "title": "LiteralOperatorKind.Template",
          "path": "cppsharp.ast.userdefinedliteral.literaloperatorkind.template.md"
        },
        {
          "title": "LiteralOperatorKind.Integer",
          "path": "cppsharp.ast.userdefinedliteral.literaloperatorkind.integer.md"
        },
        {
          "title": "LiteralOperatorKind.Floating",
          "path": "cppsharp.ast.userdefinedliteral.literaloperatorkind.floating.md"
        },
        {
          "title": "LiteralOperatorKind.String",
          "path": "cppsharp.ast.userdefinedliteral.literaloperatorkind.string.md"
        },
        {
          "title": "LiteralOperatorKind.Character",
          "path": "cppsharp.ast.userdefinedliteral.literaloperatorkind.character.md"
        },
        {
          "title": "LiteralOperatorKind",
          "path": "cppsharp.ast.userdefinedliteral.literaloperatorkind-1.md"
        },
        {
          "title": "UserDefinedLiteral()",
          "path": "cppsharp.ast.userdefinedliteral..ctor.md"
        },
        {
          "title": "UserDefinedLiteral.literalOperatorKind",
          "path": "cppsharp.ast.userdefinedliteral.literaloperatorkind-2.md"
        },
        {
          "title": "UserDefinedLiteral.CookedLiteral",
          "path": "cppsharp.ast.userdefinedliteral.cookedliteral.md"
        },
        {
          "title": "UserDefinedLiteral.UDSuffixLoc",
          "path": "cppsharp.ast.userdefinedliteral.udsuffixloc.md"
        },
        {
          "title": "UserDefinedLiteral.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.userdefinedliteral.visit.md"
        },
        {
          "title": "UserDefinedLiteral",
          "path": "cppsharp.ast.userdefinedliteral.md"
        },
        {
          "title": "CXXBoolLiteralExpr()",
          "path": "cppsharp.ast.cxxboolliteralexpr..ctor.md"
        },
        {
          "title": "CXXBoolLiteralExpr.Value",
          "path": "cppsharp.ast.cxxboolliteralexpr.value.md"
        },
        {
          "title": "CXXBoolLiteralExpr.Location",
          "path": "cppsharp.ast.cxxboolliteralexpr.location.md"
        },
        {
          "title": "CXXBoolLiteralExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxboolliteralexpr.visit.md"
        },
        {
          "title": "CXXBoolLiteralExpr",
          "path": "cppsharp.ast.cxxboolliteralexpr.md"
        },
        {
          "title": "CXXNullPtrLiteralExpr()",
          "path": "cppsharp.ast.cxxnullptrliteralexpr..ctor.md"
        },
        {
          "title": "CXXNullPtrLiteralExpr.Location",
          "path": "cppsharp.ast.cxxnullptrliteralexpr.location.md"
        },
        {
          "title": "CXXNullPtrLiteralExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxnullptrliteralexpr.visit.md"
        },
        {
          "title": "CXXNullPtrLiteralExpr",
          "path": "cppsharp.ast.cxxnullptrliteralexpr.md"
        },
        {
          "title": "CXXStdInitializerListExpr()",
          "path": "cppsharp.ast.cxxstdinitializerlistexpr..ctor.md"
        },
        {
          "title": "CXXStdInitializerListExpr.SubExpr",
          "path": "cppsharp.ast.cxxstdinitializerlistexpr.subexpr.md"
        },
        {
          "title": "CXXStdInitializerListExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxstdinitializerlistexpr.visit.md"
        },
        {
          "title": "CXXStdInitializerListExpr",
          "path": "cppsharp.ast.cxxstdinitializerlistexpr.md"
        },
        {
          "title": "CXXTypeidExpr()",
          "path": "cppsharp.ast.cxxtypeidexpr..ctor.md"
        },
        {
          "title": "CXXTypeidExpr.ExprOperand",
          "path": "cppsharp.ast.cxxtypeidexpr.exproperand.md"
        },
        {
          "title": "CXXTypeidExpr.IsPotentiallyEvaluated",
          "path": "cppsharp.ast.cxxtypeidexpr.ispotentiallyevaluated.md"
        },
        {
          "title": "CXXTypeidExpr.IsTypeOperand",
          "path": "cppsharp.ast.cxxtypeidexpr.istypeoperand.md"
        },
        {
          "title": "CXXTypeidExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxtypeidexpr.visit.md"
        },
        {
          "title": "CXXTypeidExpr",
          "path": "cppsharp.ast.cxxtypeidexpr.md"
        },
        {
          "title": "MSPropertyRefExpr()",
          "path": "cppsharp.ast.mspropertyrefexpr..ctor.md"
        },
        {
          "title": "MSPropertyRefExpr.IsImplicitAccess",
          "path": "cppsharp.ast.mspropertyrefexpr.isimplicitaccess.md"
        },
        {
          "title": "MSPropertyRefExpr.BaseExpr",
          "path": "cppsharp.ast.mspropertyrefexpr.baseexpr.md"
        },
        {
          "title": "MSPropertyRefExpr.IsArrow",
          "path": "cppsharp.ast.mspropertyrefexpr.isarrow.md"
        },
        {
          "title": "MSPropertyRefExpr.MemberLoc",
          "path": "cppsharp.ast.mspropertyrefexpr.memberloc.md"
        },
        {
          "title": "MSPropertyRefExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.mspropertyrefexpr.visit.md"
        },
        {
          "title": "MSPropertyRefExpr",
          "path": "cppsharp.ast.mspropertyrefexpr.md"
        },
        {
          "title": "MSPropertySubscriptExpr()",
          "path": "cppsharp.ast.mspropertysubscriptexpr..ctor.md"
        },
        {
          "title": "MSPropertySubscriptExpr.RBracketLoc",
          "path": "cppsharp.ast.mspropertysubscriptexpr.rbracketloc.md"
        },
        {
          "title": "MSPropertySubscriptExpr.Base",
          "path": "cppsharp.ast.mspropertysubscriptexpr.base.md"
        },
        {
          "title": "MSPropertySubscriptExpr.Idx",
          "path": "cppsharp.ast.mspropertysubscriptexpr.idx.md"
        },
        {
          "title": "MSPropertySubscriptExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.mspropertysubscriptexpr.visit.md"
        },
        {
          "title": "MSPropertySubscriptExpr",
          "path": "cppsharp.ast.mspropertysubscriptexpr.md"
        },
        {
          "title": "CXXUuidofExpr()",
          "path": "cppsharp.ast.cxxuuidofexpr..ctor.md"
        },
        {
          "title": "CXXUuidofExpr.ExprOperand",
          "path": "cppsharp.ast.cxxuuidofexpr.exproperand.md"
        },
        {
          "title": "CXXUuidofExpr.UuidStr",
          "path": "cppsharp.ast.cxxuuidofexpr.uuidstr.md"
        },
        {
          "title": "CXXUuidofExpr.IsTypeOperand",
          "path": "cppsharp.ast.cxxuuidofexpr.istypeoperand.md"
        },
        {
          "title": "CXXUuidofExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxuuidofexpr.visit.md"
        },
        {
          "title": "CXXUuidofExpr",
          "path": "cppsharp.ast.cxxuuidofexpr.md"
        },
        {
          "title": "CXXThisExpr()",
          "path": "cppsharp.ast.cxxthisexpr..ctor.md"
        },
        {
          "title": "CXXThisExpr.Location",
          "path": "cppsharp.ast.cxxthisexpr.location.md"
        },
        {
          "title": "CXXThisExpr.Implicit",
          "path": "cppsharp.ast.cxxthisexpr.implicit.md"
        },
        {
          "title": "CXXThisExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxthisexpr.visit.md"
        },
        {
          "title": "CXXThisExpr",
          "path": "cppsharp.ast.cxxthisexpr.md"
        },
        {
          "title": "CXXThrowExpr()",
          "path": "cppsharp.ast.cxxthrowexpr..ctor.md"
        },
        {
          "title": "CXXThrowExpr.SubExpr",
          "path": "cppsharp.ast.cxxthrowexpr.subexpr.md"
        },
        {
          "title": "CXXThrowExpr.ThrowLoc",
          "path": "cppsharp.ast.cxxthrowexpr.throwloc.md"
        },
        {
          "title": "CXXThrowExpr.IsThrownVariableInScope",
          "path": "cppsharp.ast.cxxthrowexpr.isthrownvariableinscope.md"
        },
        {
          "title": "CXXThrowExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxthrowexpr.visit.md"
        },
        {
          "title": "CXXThrowExpr",
          "path": "cppsharp.ast.cxxthrowexpr.md"
        },
        {
          "title": "CXXDefaultArgExpr()",
          "path": "cppsharp.ast.cxxdefaultargexpr..ctor.md"
        },
        {
          "title": "CXXDefaultArgExpr.Expr",
          "path": "cppsharp.ast.cxxdefaultargexpr.expr.md"
        },
        {
          "title": "CXXDefaultArgExpr.UsedLocation",
          "path": "cppsharp.ast.cxxdefaultargexpr.usedlocation.md"
        },
        {
          "title": "CXXDefaultArgExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxdefaultargexpr.visit.md"
        },
        {
          "title": "CXXDefaultArgExpr",
          "path": "cppsharp.ast.cxxdefaultargexpr.md"
        },
        {
          "title": "CXXDefaultInitExpr()",
          "path": "cppsharp.ast.cxxdefaultinitexpr..ctor.md"
        },
        {
          "title": "CXXDefaultInitExpr.Field",
          "path": "cppsharp.ast.cxxdefaultinitexpr.field.md"
        },
        {
          "title": "CXXDefaultInitExpr.Expr",
          "path": "cppsharp.ast.cxxdefaultinitexpr.expr.md"
        },
        {
          "title": "CXXDefaultInitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxdefaultinitexpr.visit.md"
        },
        {
          "title": "CXXDefaultInitExpr",
          "path": "cppsharp.ast.cxxdefaultinitexpr.md"
        },
        {
          "title": "CXXBindTemporaryExpr()",
          "path": "cppsharp.ast.cxxbindtemporaryexpr..ctor.md"
        },
        {
          "title": "CXXBindTemporaryExpr.SubExpr",
          "path": "cppsharp.ast.cxxbindtemporaryexpr.subexpr.md"
        },
        {
          "title": "CXXBindTemporaryExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxbindtemporaryexpr.visit.md"
        },
        {
          "title": "CXXBindTemporaryExpr",
          "path": "cppsharp.ast.cxxbindtemporaryexpr.md"
        },
        {
          "title": "ConstructionKind.Complete",
          "path": "cppsharp.ast.cxxconstructexpr.constructionkind.complete.md"
        },
        {
          "title": "ConstructionKind.NonVirtualBase",
          "path": "cppsharp.ast.cxxconstructexpr.constructionkind.nonvirtualbase.md"
        },
        {
          "title": "ConstructionKind.VirtualBase",
          "path": "cppsharp.ast.cxxconstructexpr.constructionkind.virtualbase.md"
        },
        {
          "title": "ConstructionKind.Delegating",
          "path": "cppsharp.ast.cxxconstructexpr.constructionkind.delegating.md"
        },
        {
          "title": "ConstructionKind",
          "path": "cppsharp.ast.cxxconstructexpr.constructionkind.md"
        },
        {
          "title": "CXXConstructExpr()",
          "path": "cppsharp.ast.cxxconstructexpr..ctor.md"
        },
        {
          "title": "CXXConstructExpr.Arguments",
          "path": "cppsharp.ast.cxxconstructexpr.arguments.md"
        },
        {
          "title": "CXXConstructExpr.Location",
          "path": "cppsharp.ast.cxxconstructexpr.location.md"
        },
        {
          "title": "CXXConstructExpr.Elidable",
          "path": "cppsharp.ast.cxxconstructexpr.elidable.md"
        },
        {
          "title": "CXXConstructExpr.HadMultipleCandidates",
          "path": "cppsharp.ast.cxxconstructexpr.hadmultiplecandidates.md"
        },
        {
          "title": "CXXConstructExpr.ListInitialization",
          "path": "cppsharp.ast.cxxconstructexpr.listinitialization.md"
        },
        {
          "title": "CXXConstructExpr.StdInitListInitialization",
          "path": "cppsharp.ast.cxxconstructexpr.stdinitlistinitialization.md"
        },
        {
          "title": "CXXConstructExpr.RequiresZeroInitialization",
          "path": "cppsharp.ast.cxxconstructexpr.requireszeroinitialization.md"
        },
        {
          "title": "CXXConstructExpr.ParenOrBraceRange",
          "path": "cppsharp.ast.cxxconstructexpr.parenorbracerange.md"
        },
        {
          "title": "CXXConstructExpr.NumArgs",
          "path": "cppsharp.ast.cxxconstructexpr.numargs.md"
        },
        {
          "title": "CXXConstructExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxconstructexpr.visit.md"
        },
        {
          "title": "CXXConstructExpr",
          "path": "cppsharp.ast.cxxconstructexpr.md"
        },
        {
          "title": "CXXInheritedCtorInitExpr()",
          "path": "cppsharp.ast.cxxinheritedctorinitexpr..ctor.md"
        },
        {
          "title": "CXXInheritedCtorInitExpr.ConstructsVBase",
          "path": "cppsharp.ast.cxxinheritedctorinitexpr.constructsvbase.md"
        },
        {
          "title": "CXXInheritedCtorInitExpr.InheritedFromVBase",
          "path": "cppsharp.ast.cxxinheritedctorinitexpr.inheritedfromvbase.md"
        },
        {
          "title": "CXXInheritedCtorInitExpr.Location",
          "path": "cppsharp.ast.cxxinheritedctorinitexpr.location.md"
        },
        {
          "title": "CXXInheritedCtorInitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxinheritedctorinitexpr.visit.md"
        },
        {
          "title": "CXXInheritedCtorInitExpr",
          "path": "cppsharp.ast.cxxinheritedctorinitexpr.md"
        },
        {
          "title": "CXXFunctionalCastExpr()",
          "path": "cppsharp.ast.cxxfunctionalcastexpr..ctor.md"
        },
        {
          "title": "CXXFunctionalCastExpr.LParenLoc",
          "path": "cppsharp.ast.cxxfunctionalcastexpr.lparenloc.md"
        },
        {
          "title": "CXXFunctionalCastExpr.RParenLoc",
          "path": "cppsharp.ast.cxxfunctionalcastexpr.rparenloc.md"
        },
        {
          "title": "CXXFunctionalCastExpr.IsListInitialization",
          "path": "cppsharp.ast.cxxfunctionalcastexpr.islistinitialization.md"
        },
        {
          "title": "CXXFunctionalCastExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxfunctionalcastexpr.visit.md"
        },
        {
          "title": "CXXFunctionalCastExpr",
          "path": "cppsharp.ast.cxxfunctionalcastexpr.md"
        },
        {
          "title": "CXXTemporaryObjectExpr()",
          "path": "cppsharp.ast.cxxtemporaryobjectexpr..ctor.md"
        },
        {
          "title": "CXXTemporaryObjectExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxtemporaryobjectexpr.visit.md"
        },
        {
          "title": "CXXTemporaryObjectExpr",
          "path": "cppsharp.ast.cxxtemporaryobjectexpr.md"
        },
        {
          "title": "LambdaExpr()",
          "path": "cppsharp.ast.lambdaexpr..ctor.md"
        },
        {
          "title": "LambdaExpr.CaptureInits",
          "path": "cppsharp.ast.lambdaexpr.captureinits.md"
        },
        {
          "title": "LambdaExpr.CaptureDefaultLoc",
          "path": "cppsharp.ast.lambdaexpr.capturedefaultloc.md"
        },
        {
          "title": "LambdaExpr.CaptureSize",
          "path": "cppsharp.ast.lambdaexpr.capturesize.md"
        },
        {
          "title": "LambdaExpr.IntroducerRange",
          "path": "cppsharp.ast.lambdaexpr.introducerrange.md"
        },
        {
          "title": "LambdaExpr.CallOperator",
          "path": "cppsharp.ast.lambdaexpr.calloperator.md"
        },
        {
          "title": "LambdaExpr.IsGenericLambda",
          "path": "cppsharp.ast.lambdaexpr.isgenericlambda.md"
        },
        {
          "title": "LambdaExpr.Body",
          "path": "cppsharp.ast.lambdaexpr.body.md"
        },
        {
          "title": "LambdaExpr.IsMutable",
          "path": "cppsharp.ast.lambdaexpr.ismutable.md"
        },
        {
          "title": "LambdaExpr.HasExplicitParameters",
          "path": "cppsharp.ast.lambdaexpr.hasexplicitparameters.md"
        },
        {
          "title": "LambdaExpr.HasExplicitResultType",
          "path": "cppsharp.ast.lambdaexpr.hasexplicitresulttype.md"
        },
        {
          "title": "LambdaExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.lambdaexpr.visit.md"
        },
        {
          "title": "LambdaExpr",
          "path": "cppsharp.ast.lambdaexpr.md"
        },
        {
          "title": "CXXScalarValueInitExpr()",
          "path": "cppsharp.ast.cxxscalarvalueinitexpr..ctor.md"
        },
        {
          "title": "CXXScalarValueInitExpr.RParenLoc",
          "path": "cppsharp.ast.cxxscalarvalueinitexpr.rparenloc.md"
        },
        {
          "title": "CXXScalarValueInitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxscalarvalueinitexpr.visit.md"
        },
        {
          "title": "CXXScalarValueInitExpr",
          "path": "cppsharp.ast.cxxscalarvalueinitexpr.md"
        },
        {
          "title": "InitializationStyle.NoInit",
          "path": "cppsharp.ast.cxxnewexpr.initializationstyle.noinit.md"
        },
        {
          "title": "InitializationStyle.CallInit",
          "path": "cppsharp.ast.cxxnewexpr.initializationstyle.callinit.md"
        },
        {
          "title": "InitializationStyle.ListInit",
          "path": "cppsharp.ast.cxxnewexpr.initializationstyle.listinit.md"
        },
        {
          "title": "InitializationStyle",
          "path": "cppsharp.ast.cxxnewexpr.initializationstyle-1.md"
        },
        {
          "title": "CXXNewExpr()",
          "path": "cppsharp.ast.cxxnewexpr..ctor.md"
        },
        {
          "title": "CXXNewExpr.PlacementArguments",
          "path": "cppsharp.ast.cxxnewexpr.placementarguments.md"
        },
        {
          "title": "CXXNewExpr.OperatorNew",
          "path": "cppsharp.ast.cxxnewexpr.operatornew.md"
        },
        {
          "title": "CXXNewExpr.OperatorDelete",
          "path": "cppsharp.ast.cxxnewexpr.operatordelete.md"
        },
        {
          "title": "CXXNewExpr.AllocatedType",
          "path": "cppsharp.ast.cxxnewexpr.allocatedtype.md"
        },
        {
          "title": "CXXNewExpr.IsArray",
          "path": "cppsharp.ast.cxxnewexpr.isarray.md"
        },
        {
          "title": "CXXNewExpr.ArraySize",
          "path": "cppsharp.ast.cxxnewexpr.arraysize.md"
        },
        {
          "title": "CXXNewExpr.NumPlacementArgs",
          "path": "cppsharp.ast.cxxnewexpr.numplacementargs.md"
        },
        {
          "title": "CXXNewExpr.IsParenTypeId",
          "path": "cppsharp.ast.cxxnewexpr.isparentypeid.md"
        },
        {
          "title": "CXXNewExpr.TypeIdParens",
          "path": "cppsharp.ast.cxxnewexpr.typeidparens.md"
        },
        {
          "title": "CXXNewExpr.IsGlobalNew",
          "path": "cppsharp.ast.cxxnewexpr.isglobalnew.md"
        },
        {
          "title": "CXXNewExpr.HasInitializer",
          "path": "cppsharp.ast.cxxnewexpr.hasinitializer.md"
        },
        {
          "title": "CXXNewExpr.initializationStyle",
          "path": "cppsharp.ast.cxxnewexpr.initializationstyle-2.md"
        },
        {
          "title": "CXXNewExpr.Initializer",
          "path": "cppsharp.ast.cxxnewexpr.initializer.md"
        },
        {
          "title": "CXXNewExpr.ConstructExpr",
          "path": "cppsharp.ast.cxxnewexpr.constructexpr.md"
        },
        {
          "title": "CXXNewExpr.DirectInitRange",
          "path": "cppsharp.ast.cxxnewexpr.directinitrange.md"
        },
        {
          "title": "CXXNewExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxnewexpr.visit.md"
        },
        {
          "title": "CXXNewExpr",
          "path": "cppsharp.ast.cxxnewexpr.md"
        },
        {
          "title": "CXXDeleteExpr()",
          "path": "cppsharp.ast.cxxdeleteexpr..ctor.md"
        },
        {
          "title": "CXXDeleteExpr.IsGlobalDelete",
          "path": "cppsharp.ast.cxxdeleteexpr.isglobaldelete.md"
        },
        {
          "title": "CXXDeleteExpr.IsArrayForm",
          "path": "cppsharp.ast.cxxdeleteexpr.isarrayform.md"
        },
        {
          "title": "CXXDeleteExpr.IsArrayFormAsWritten",
          "path": "cppsharp.ast.cxxdeleteexpr.isarrayformaswritten.md"
        },
        {
          "title": "CXXDeleteExpr.OperatorDelete",
          "path": "cppsharp.ast.cxxdeleteexpr.operatordelete.md"
        },
        {
          "title": "CXXDeleteExpr.Argument",
          "path": "cppsharp.ast.cxxdeleteexpr.argument.md"
        },
        {
          "title": "CXXDeleteExpr.DestroyedType",
          "path": "cppsharp.ast.cxxdeleteexpr.destroyedtype.md"
        },
        {
          "title": "CXXDeleteExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxdeleteexpr.visit.md"
        },
        {
          "title": "CXXDeleteExpr",
          "path": "cppsharp.ast.cxxdeleteexpr.md"
        },
        {
          "title": "CXXPseudoDestructorExpr()",
          "path": "cppsharp.ast.cxxpseudodestructorexpr..ctor.md"
        },
        {
          "title": "CXXPseudoDestructorExpr.Base",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.base.md"
        },
        {
          "title": "CXXPseudoDestructorExpr.HasQualifier",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.hasqualifier.md"
        },
        {
          "title": "CXXPseudoDestructorExpr.IsArrow",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.isarrow.md"
        },
        {
          "title": "CXXPseudoDestructorExpr.OperatorLoc",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.operatorloc.md"
        },
        {
          "title": "CXXPseudoDestructorExpr.ColonColonLoc",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.coloncolonloc.md"
        },
        {
          "title": "CXXPseudoDestructorExpr.TildeLoc",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.tildeloc.md"
        },
        {
          "title": "CXXPseudoDestructorExpr.DestroyedType",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.destroyedtype.md"
        },
        {
          "title": "CXXPseudoDestructorExpr.DestroyedTypeLoc",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.destroyedtypeloc.md"
        },
        {
          "title": "CXXPseudoDestructorExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.visit.md"
        },
        {
          "title": "CXXPseudoDestructorExpr",
          "path": "cppsharp.ast.cxxpseudodestructorexpr.md"
        },
        {
          "title": "TypeTraitExpr()",
          "path": "cppsharp.ast.typetraitexpr..ctor.md"
        },
        {
          "title": "TypeTraitExpr.Value",
          "path": "cppsharp.ast.typetraitexpr.value.md"
        },
        {
          "title": "TypeTraitExpr.NumArgs",
          "path": "cppsharp.ast.typetraitexpr.numargs.md"
        },
        {
          "title": "TypeTraitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.typetraitexpr.visit.md"
        },
        {
          "title": "TypeTraitExpr",
          "path": "cppsharp.ast.typetraitexpr.md"
        },
        {
          "title": "ArrayTypeTraitExpr()",
          "path": "cppsharp.ast.arraytypetraitexpr..ctor.md"
        },
        {
          "title": "ArrayTypeTraitExpr.QueriedType",
          "path": "cppsharp.ast.arraytypetraitexpr.queriedtype.md"
        },
        {
          "title": "ArrayTypeTraitExpr.Value",
          "path": "cppsharp.ast.arraytypetraitexpr.value.md"
        },
        {
          "title": "ArrayTypeTraitExpr.DimensionExpression",
          "path": "cppsharp.ast.arraytypetraitexpr.dimensionexpression.md"
        },
        {
          "title": "ArrayTypeTraitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.arraytypetraitexpr.visit.md"
        },
        {
          "title": "ArrayTypeTraitExpr",
          "path": "cppsharp.ast.arraytypetraitexpr.md"
        },
        {
          "title": "ExpressionTraitExpr()",
          "path": "cppsharp.ast.expressiontraitexpr..ctor.md"
        },
        {
          "title": "ExpressionTraitExpr.QueriedExpression",
          "path": "cppsharp.ast.expressiontraitexpr.queriedexpression.md"
        },
        {
          "title": "ExpressionTraitExpr.Value",
          "path": "cppsharp.ast.expressiontraitexpr.value.md"
        },
        {
          "title": "ExpressionTraitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.expressiontraitexpr.visit.md"
        },
        {
          "title": "ExpressionTraitExpr",
          "path": "cppsharp.ast.expressiontraitexpr.md"
        },
        {
          "title": "FindResult()",
          "path": "cppsharp.ast.overloadexpr.findresult..ctor.md"
        },
        {
          "title": "FindResult",
          "path": "cppsharp.ast.overloadexpr.findresult.md"
        },
        {
          "title": "OverloadExpr()",
          "path": "cppsharp.ast.overloadexpr..ctor.md"
        },
        {
          "title": "OverloadExpr.NumDecls",
          "path": "cppsharp.ast.overloadexpr.numdecls.md"
        },
        {
          "title": "OverloadExpr.NameLoc",
          "path": "cppsharp.ast.overloadexpr.nameloc.md"
        },
        {
          "title": "OverloadExpr.TemplateKeywordLoc",
          "path": "cppsharp.ast.overloadexpr.templatekeywordloc.md"
        },
        {
          "title": "OverloadExpr.LAngleLoc",
          "path": "cppsharp.ast.overloadexpr.langleloc.md"
        },
        {
          "title": "OverloadExpr.RAngleLoc",
          "path": "cppsharp.ast.overloadexpr.rangleloc.md"
        },
        {
          "title": "OverloadExpr.HasTemplateKeyword",
          "path": "cppsharp.ast.overloadexpr.hastemplatekeyword.md"
        },
        {
          "title": "OverloadExpr.HasExplicitTemplateArgs",
          "path": "cppsharp.ast.overloadexpr.hasexplicittemplateargs.md"
        },
        {
          "title": "OverloadExpr.NumTemplateArgs",
          "path": "cppsharp.ast.overloadexpr.numtemplateargs.md"
        },
        {
          "title": "OverloadExpr",
          "path": "cppsharp.ast.overloadexpr.md"
        },
        {
          "title": "UnresolvedLookupExpr()",
          "path": "cppsharp.ast.unresolvedlookupexpr..ctor.md"
        },
        {
          "title": "UnresolvedLookupExpr.RequiresADL",
          "path": "cppsharp.ast.unresolvedlookupexpr.requiresadl.md"
        },
        {
          "title": "UnresolvedLookupExpr.IsOverloaded",
          "path": "cppsharp.ast.unresolvedlookupexpr.isoverloaded.md"
        },
        {
          "title": "UnresolvedLookupExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.unresolvedlookupexpr.visit.md"
        },
        {
          "title": "UnresolvedLookupExpr",
          "path": "cppsharp.ast.unresolvedlookupexpr.md"
        },
        {
          "title": "DependentScopeDeclRefExpr()",
          "path": "cppsharp.ast.dependentscopedeclrefexpr..ctor.md"
        },
        {
          "title": "DependentScopeDeclRefExpr.Location",
          "path": "cppsharp.ast.dependentscopedeclrefexpr.location.md"
        },
        {
          "title": "DependentScopeDeclRefExpr.TemplateKeywordLoc",
          "path": "cppsharp.ast.dependentscopedeclrefexpr.templatekeywordloc.md"
        },
        {
          "title": "DependentScopeDeclRefExpr.LAngleLoc",
          "path": "cppsharp.ast.dependentscopedeclrefexpr.langleloc.md"
        },
        {
          "title": "DependentScopeDeclRefExpr.RAngleLoc",
          "path": "cppsharp.ast.dependentscopedeclrefexpr.rangleloc.md"
        },
        {
          "title": "DependentScopeDeclRefExpr.HasTemplateKeyword",
          "path": "cppsharp.ast.dependentscopedeclrefexpr.hastemplatekeyword.md"
        },
        {
          "title": "DependentScopeDeclRefExpr.HasExplicitTemplateArgs",
          "path": "cppsharp.ast.dependentscopedeclrefexpr.hasexplicittemplateargs.md"
        },
        {
          "title": "DependentScopeDeclRefExpr.NumTemplateArgs",
          "path": "cppsharp.ast.dependentscopedeclrefexpr.numtemplateargs.md"
        },
        {
          "title": "DependentScopeDeclRefExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.dependentscopedeclrefexpr.visit.md"
        },
        {
          "title": "DependentScopeDeclRefExpr",
          "path": "cppsharp.ast.dependentscopedeclrefexpr.md"
        },
        {
          "title": "ExprWithCleanups()",
          "path": "cppsharp.ast.exprwithcleanups..ctor.md"
        },
        {
          "title": "ExprWithCleanups.NumObjects",
          "path": "cppsharp.ast.exprwithcleanups.numobjects.md"
        },
        {
          "title": "ExprWithCleanups.CleanupsHaveSideEffects",
          "path": "cppsharp.ast.exprwithcleanups.cleanupshavesideeffects.md"
        },
        {
          "title": "ExprWithCleanups.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.exprwithcleanups.visit.md"
        },
        {
          "title": "ExprWithCleanups",
          "path": "cppsharp.ast.exprwithcleanups.md"
        },
        {
          "title": "CXXUnresolvedConstructExpr()",
          "path": "cppsharp.ast.cxxunresolvedconstructexpr..ctor.md"
        },
        {
          "title": "CXXUnresolvedConstructExpr.Arguments",
          "path": "cppsharp.ast.cxxunresolvedconstructexpr.arguments.md"
        },
        {
          "title": "CXXUnresolvedConstructExpr.LParenLoc",
          "path": "cppsharp.ast.cxxunresolvedconstructexpr.lparenloc.md"
        },
        {
          "title": "CXXUnresolvedConstructExpr.RParenLoc",
          "path": "cppsharp.ast.cxxunresolvedconstructexpr.rparenloc.md"
        },
        {
          "title": "CXXUnresolvedConstructExpr.TypeAsWritten",
          "path": "cppsharp.ast.cxxunresolvedconstructexpr.typeaswritten.md"
        },
        {
          "title": "CXXUnresolvedConstructExpr.IsListInitialization",
          "path": "cppsharp.ast.cxxunresolvedconstructexpr.islistinitialization.md"
        },
        {
          "title": "CXXUnresolvedConstructExpr.ArgSize",
          "path": "cppsharp.ast.cxxunresolvedconstructexpr.argsize.md"
        },
        {
          "title": "CXXUnresolvedConstructExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxunresolvedconstructexpr.visit.md"
        },
        {
          "title": "CXXUnresolvedConstructExpr",
          "path": "cppsharp.ast.cxxunresolvedconstructexpr.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr()",
          "path": "cppsharp.ast.cxxdependentscopememberexpr..ctor.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.IsImplicitAccess",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.isimplicitaccess.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.Base",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.base.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.BaseType",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.basetype.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.IsArrow",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.isarrow.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.OperatorLoc",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.operatorloc.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.FirstQualifierFoundInScope",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.firstqualifierfoundinscope.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.MemberLoc",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.memberloc.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.TemplateKeywordLoc",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.templatekeywordloc.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.LAngleLoc",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.langleloc.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.RAngleLoc",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.rangleloc.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.HasTemplateKeyword",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.hastemplatekeyword.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.HasExplicitTemplateArgs",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.hasexplicittemplateargs.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.NumTemplateArgs",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.numtemplateargs.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.visit.md"
        },
        {
          "title": "CXXDependentScopeMemberExpr",
          "path": "cppsharp.ast.cxxdependentscopememberexpr.md"
        },
        {
          "title": "UnresolvedMemberExpr()",
          "path": "cppsharp.ast.unresolvedmemberexpr..ctor.md"
        },
        {
          "title": "UnresolvedMemberExpr.IsImplicitAccess",
          "path": "cppsharp.ast.unresolvedmemberexpr.isimplicitaccess.md"
        },
        {
          "title": "UnresolvedMemberExpr.Base",
          "path": "cppsharp.ast.unresolvedmemberexpr.base.md"
        },
        {
          "title": "UnresolvedMemberExpr.BaseType",
          "path": "cppsharp.ast.unresolvedmemberexpr.basetype.md"
        },
        {
          "title": "UnresolvedMemberExpr.HasUnresolvedUsing",
          "path": "cppsharp.ast.unresolvedmemberexpr.hasunresolvedusing.md"
        },
        {
          "title": "UnresolvedMemberExpr.IsArrow",
          "path": "cppsharp.ast.unresolvedmemberexpr.isarrow.md"
        },
        {
          "title": "UnresolvedMemberExpr.OperatorLoc",
          "path": "cppsharp.ast.unresolvedmemberexpr.operatorloc.md"
        },
        {
          "title": "UnresolvedMemberExpr.MemberLoc",
          "path": "cppsharp.ast.unresolvedmemberexpr.memberloc.md"
        },
        {
          "title": "UnresolvedMemberExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.unresolvedmemberexpr.visit.md"
        },
        {
          "title": "UnresolvedMemberExpr",
          "path": "cppsharp.ast.unresolvedmemberexpr.md"
        },
        {
          "title": "CXXNoexceptExpr()",
          "path": "cppsharp.ast.cxxnoexceptexpr..ctor.md"
        },
        {
          "title": "CXXNoexceptExpr.Operand",
          "path": "cppsharp.ast.cxxnoexceptexpr.operand.md"
        },
        {
          "title": "CXXNoexceptExpr.Value",
          "path": "cppsharp.ast.cxxnoexceptexpr.value.md"
        },
        {
          "title": "CXXNoexceptExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxnoexceptexpr.visit.md"
        },
        {
          "title": "CXXNoexceptExpr",
          "path": "cppsharp.ast.cxxnoexceptexpr.md"
        },
        {
          "title": "PackExpansionExpr()",
          "path": "cppsharp.ast.packexpansionexpr..ctor.md"
        },
        {
          "title": "PackExpansionExpr.Pattern",
          "path": "cppsharp.ast.packexpansionexpr.pattern.md"
        },
        {
          "title": "PackExpansionExpr.EllipsisLoc",
          "path": "cppsharp.ast.packexpansionexpr.ellipsisloc.md"
        },
        {
          "title": "PackExpansionExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.packexpansionexpr.visit.md"
        },
        {
          "title": "PackExpansionExpr",
          "path": "cppsharp.ast.packexpansionexpr.md"
        },
        {
          "title": "SizeOfPackExpr()",
          "path": "cppsharp.ast.sizeofpackexpr..ctor.md"
        },
        {
          "title": "SizeOfPackExpr.OperatorLoc",
          "path": "cppsharp.ast.sizeofpackexpr.operatorloc.md"
        },
        {
          "title": "SizeOfPackExpr.PackLoc",
          "path": "cppsharp.ast.sizeofpackexpr.packloc.md"
        },
        {
          "title": "SizeOfPackExpr.RParenLoc",
          "path": "cppsharp.ast.sizeofpackexpr.rparenloc.md"
        },
        {
          "title": "SizeOfPackExpr.Pack",
          "path": "cppsharp.ast.sizeofpackexpr.pack.md"
        },
        {
          "title": "SizeOfPackExpr.PackLength",
          "path": "cppsharp.ast.sizeofpackexpr.packlength.md"
        },
        {
          "title": "SizeOfPackExpr.IsPartiallySubstituted",
          "path": "cppsharp.ast.sizeofpackexpr.ispartiallysubstituted.md"
        },
        {
          "title": "SizeOfPackExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.sizeofpackexpr.visit.md"
        },
        {
          "title": "SizeOfPackExpr",
          "path": "cppsharp.ast.sizeofpackexpr.md"
        },
        {
          "title": "SubstNonTypeTemplateParmExpr()",
          "path": "cppsharp.ast.substnontypetemplateparmexpr..ctor.md"
        },
        {
          "title": "SubstNonTypeTemplateParmExpr.NameLoc",
          "path": "cppsharp.ast.substnontypetemplateparmexpr.nameloc.md"
        },
        {
          "title": "SubstNonTypeTemplateParmExpr.Replacement",
          "path": "cppsharp.ast.substnontypetemplateparmexpr.replacement.md"
        },
        {
          "title": "SubstNonTypeTemplateParmExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.substnontypetemplateparmexpr.visit.md"
        },
        {
          "title": "SubstNonTypeTemplateParmExpr",
          "path": "cppsharp.ast.substnontypetemplateparmexpr.md"
        },
        {
          "title": "SubstNonTypeTemplateParmPackExpr()",
          "path": "cppsharp.ast.substnontypetemplateparmpackexpr..ctor.md"
        },
        {
          "title": "SubstNonTypeTemplateParmPackExpr.ParameterPackLocation",
          "path": "cppsharp.ast.substnontypetemplateparmpackexpr.parameterpacklocation.md"
        },
        {
          "title": "SubstNonTypeTemplateParmPackExpr.ArgumentPack",
          "path": "cppsharp.ast.substnontypetemplateparmpackexpr.argumentpack.md"
        },
        {
          "title": "SubstNonTypeTemplateParmPackExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.substnontypetemplateparmpackexpr.visit.md"
        },
        {
          "title": "SubstNonTypeTemplateParmPackExpr",
          "path": "cppsharp.ast.substnontypetemplateparmpackexpr.md"
        },
        {
          "title": "FunctionParmPackExpr()",
          "path": "cppsharp.ast.functionparmpackexpr..ctor.md"
        },
        {
          "title": "FunctionParmPackExpr.ParameterPackLocation",
          "path": "cppsharp.ast.functionparmpackexpr.parameterpacklocation.md"
        },
        {
          "title": "FunctionParmPackExpr.NumExpansions",
          "path": "cppsharp.ast.functionparmpackexpr.numexpansions.md"
        },
        {
          "title": "FunctionParmPackExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.functionparmpackexpr.visit.md"
        },
        {
          "title": "FunctionParmPackExpr",
          "path": "cppsharp.ast.functionparmpackexpr.md"
        },
        {
          "title": "ExtraState()",
          "path": "cppsharp.ast.materializetemporaryexpr.extrastate..ctor.md"
        },
        {
          "title": "ExtraState",
          "path": "cppsharp.ast.materializetemporaryexpr.extrastate.md"
        },
        {
          "title": "MaterializeTemporaryExpr()",
          "path": "cppsharp.ast.materializetemporaryexpr..ctor.md"
        },
        {
          "title": "MaterializeTemporaryExpr.Temporary",
          "path": "cppsharp.ast.materializetemporaryexpr.temporary.md"
        },
        {
          "title": "MaterializeTemporaryExpr.TemporaryExpr",
          "path": "cppsharp.ast.materializetemporaryexpr.temporaryexpr.md"
        },
        {
          "title": "MaterializeTemporaryExpr.ManglingNumber",
          "path": "cppsharp.ast.materializetemporaryexpr.manglingnumber.md"
        },
        {
          "title": "MaterializeTemporaryExpr.IsBoundToLvalueReference",
          "path": "cppsharp.ast.materializetemporaryexpr.isboundtolvaluereference.md"
        },
        {
          "title": "MaterializeTemporaryExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.materializetemporaryexpr.visit.md"
        },
        {
          "title": "MaterializeTemporaryExpr",
          "path": "cppsharp.ast.materializetemporaryexpr.md"
        },
        {
          "title": "CXXFoldExpr()",
          "path": "cppsharp.ast.cxxfoldexpr..ctor.md"
        },
        {
          "title": "CXXFoldExpr.LHS",
          "path": "cppsharp.ast.cxxfoldexpr.lhs.md"
        },
        {
          "title": "CXXFoldExpr.RHS",
          "path": "cppsharp.ast.cxxfoldexpr.rhs.md"
        },
        {
          "title": "CXXFoldExpr.IsRightFold",
          "path": "cppsharp.ast.cxxfoldexpr.isrightfold.md"
        },
        {
          "title": "CXXFoldExpr.IsLeftFold",
          "path": "cppsharp.ast.cxxfoldexpr.isleftfold.md"
        },
        {
          "title": "CXXFoldExpr.Pattern",
          "path": "cppsharp.ast.cxxfoldexpr.pattern.md"
        },
        {
          "title": "CXXFoldExpr.Init",
          "path": "cppsharp.ast.cxxfoldexpr.init.md"
        },
        {
          "title": "CXXFoldExpr.EllipsisLoc",
          "path": "cppsharp.ast.cxxfoldexpr.ellipsisloc.md"
        },
        {
          "title": "CXXFoldExpr.Operator",
          "path": "cppsharp.ast.cxxfoldexpr.operator.md"
        },
        {
          "title": "CXXFoldExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxfoldexpr.visit.md"
        },
        {
          "title": "CXXFoldExpr",
          "path": "cppsharp.ast.cxxfoldexpr.md"
        },
        {
          "title": "CoroutineSuspendExpr()",
          "path": "cppsharp.ast.coroutinesuspendexpr..ctor.md"
        },
        {
          "title": "CoroutineSuspendExpr.KeywordLoc",
          "path": "cppsharp.ast.coroutinesuspendexpr.keywordloc.md"
        },
        {
          "title": "CoroutineSuspendExpr.CommonExpr",
          "path": "cppsharp.ast.coroutinesuspendexpr.commonexpr.md"
        },
        {
          "title": "CoroutineSuspendExpr.OpaqueValue",
          "path": "cppsharp.ast.coroutinesuspendexpr.opaquevalue.md"
        },
        {
          "title": "CoroutineSuspendExpr.ReadyExpr",
          "path": "cppsharp.ast.coroutinesuspendexpr.readyexpr.md"
        },
        {
          "title": "CoroutineSuspendExpr.SuspendExpr",
          "path": "cppsharp.ast.coroutinesuspendexpr.suspendexpr.md"
        },
        {
          "title": "CoroutineSuspendExpr.ResumeExpr",
          "path": "cppsharp.ast.coroutinesuspendexpr.resumeexpr.md"
        },
        {
          "title": "CoroutineSuspendExpr",
          "path": "cppsharp.ast.coroutinesuspendexpr.md"
        },
        {
          "title": "CoawaitExpr()",
          "path": "cppsharp.ast.coawaitexpr..ctor.md"
        },
        {
          "title": "CoawaitExpr.IsImplicit",
          "path": "cppsharp.ast.coawaitexpr.isimplicit.md"
        },
        {
          "title": "CoawaitExpr.Operand",
          "path": "cppsharp.ast.coawaitexpr.operand.md"
        },
        {
          "title": "CoawaitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.coawaitexpr.visit.md"
        },
        {
          "title": "CoawaitExpr",
          "path": "cppsharp.ast.coawaitexpr.md"
        },
        {
          "title": "DependentCoawaitExpr()",
          "path": "cppsharp.ast.dependentcoawaitexpr..ctor.md"
        },
        {
          "title": "DependentCoawaitExpr.Operand",
          "path": "cppsharp.ast.dependentcoawaitexpr.operand.md"
        },
        {
          "title": "DependentCoawaitExpr.OperatorCoawaitLookup",
          "path": "cppsharp.ast.dependentcoawaitexpr.operatorcoawaitlookup.md"
        },
        {
          "title": "DependentCoawaitExpr.KeywordLoc",
          "path": "cppsharp.ast.dependentcoawaitexpr.keywordloc.md"
        },
        {
          "title": "DependentCoawaitExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.dependentcoawaitexpr.visit.md"
        },
        {
          "title": "DependentCoawaitExpr",
          "path": "cppsharp.ast.dependentcoawaitexpr.md"
        },
        {
          "title": "CoyieldExpr()",
          "path": "cppsharp.ast.coyieldexpr..ctor.md"
        },
        {
          "title": "CoyieldExpr.Operand",
          "path": "cppsharp.ast.coyieldexpr.operand.md"
        },
        {
          "title": "CoyieldExpr.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.coyieldexpr.visit.md"
        },
        {
          "title": "CoyieldExpr",
          "path": "cppsharp.ast.coyieldexpr.md"
        },
        {
          "title": "ExpressionObsolete.DebugText",
          "path": "cppsharp.ast.expressionobsolete.debugtext.md"
        },
        {
          "title": "ExpressionObsolete.Visit(IExpressionVisitorObsolete\u003CTV\u003E)",
          "path": "cppsharp.ast.expressionobsolete.visit.md"
        },
        {
          "title": "ExpressionObsolete.Clone()",
          "path": "cppsharp.ast.expressionobsolete.clone.md"
        },
        {
          "title": "ExpressionObsolete",
          "path": "cppsharp.ast.expressionobsolete.md"
        },
        {
          "title": "BuiltinTypeExpressionObsolete.Value",
          "path": "cppsharp.ast.builtintypeexpressionobsolete.value.md"
        },
        {
          "title": "BuiltinTypeExpressionObsolete.Type",
          "path": "cppsharp.ast.builtintypeexpressionobsolete.type.md"
        },
        {
          "title": "BuiltinTypeExpressionObsolete.IsHexadecimal",
          "path": "cppsharp.ast.builtintypeexpressionobsolete.ishexadecimal.md"
        },
        {
          "title": "BuiltinTypeExpressionObsolete.ToString()",
          "path": "cppsharp.ast.builtintypeexpressionobsolete.tostring.md"
        },
        {
          "title": "BuiltinTypeExpressionObsolete.Visit(IExpressionVisitorObsolete\u003CT\u003E)",
          "path": "cppsharp.ast.builtintypeexpressionobsolete.visit.md"
        },
        {
          "title": "BuiltinTypeExpressionObsolete.Clone()",
          "path": "cppsharp.ast.builtintypeexpressionobsolete.clone.md"
        },
        {
          "title": "BuiltinTypeExpressionObsolete",
          "path": "cppsharp.ast.builtintypeexpressionobsolete.md"
        },
        {
          "title": "BinaryOperatorObsolete(ExpressionObsolete,ExpressionObsolete,string)",
          "path": "cppsharp.ast.binaryoperatorobsolete..ctor.md"
        },
        {
          "title": "BinaryOperatorObsolete.LHS",
          "path": "cppsharp.ast.binaryoperatorobsolete.lhs.md"
        },
        {
          "title": "BinaryOperatorObsolete.RHS",
          "path": "cppsharp.ast.binaryoperatorobsolete.rhs.md"
        },
        {
          "title": "BinaryOperatorObsolete.OpcodeStr",
          "path": "cppsharp.ast.binaryoperatorobsolete.opcodestr.md"
        },
        {
          "title": "BinaryOperatorObsolete.Visit(IExpressionVisitorObsolete\u003CT\u003E)",
          "path": "cppsharp.ast.binaryoperatorobsolete.visit.md"
        },
        {
          "title": "BinaryOperatorObsolete.Clone()",
          "path": "cppsharp.ast.binaryoperatorobsolete.clone.md"
        },
        {
          "title": "BinaryOperatorObsolete",
          "path": "cppsharp.ast.binaryoperatorobsolete.md"
        },
        {
          "title": "CallExprObsolete()",
          "path": "cppsharp.ast.callexprobsolete..ctor.md"
        },
        {
          "title": "CallExprObsolete.Arguments",
          "path": "cppsharp.ast.callexprobsolete.arguments.md"
        },
        {
          "title": "CallExprObsolete.Visit(IExpressionVisitorObsolete\u003CT\u003E)",
          "path": "cppsharp.ast.callexprobsolete.visit.md"
        },
        {
          "title": "CallExprObsolete.Clone()",
          "path": "cppsharp.ast.callexprobsolete.clone.md"
        },
        {
          "title": "CallExprObsolete",
          "path": "cppsharp.ast.callexprobsolete.md"
        },
        {
          "title": "CXXConstructExprObsolete()",
          "path": "cppsharp.ast.cxxconstructexprobsolete..ctor.md"
        },
        {
          "title": "CXXConstructExprObsolete.Arguments",
          "path": "cppsharp.ast.cxxconstructexprobsolete.arguments.md"
        },
        {
          "title": "CXXConstructExprObsolete.Visit(IExpressionVisitorObsolete\u003CT\u003E)",
          "path": "cppsharp.ast.cxxconstructexprobsolete.visit.md"
        },
        {
          "title": "CXXConstructExprObsolete.Clone()",
          "path": "cppsharp.ast.cxxconstructexprobsolete.clone.md"
        },
        {
          "title": "CXXConstructExprObsolete",
          "path": "cppsharp.ast.cxxconstructexprobsolete.md"
        },
        {
          "title": "IExpressionVisitorObsolete.VisitExpression(ExpressionObsolete)",
          "path": "cppsharp.ast.iexpressionvisitorobsolete.visitexpression.md"
        },
        {
          "title": "IExpressionVisitorObsolete",
          "path": "cppsharp.ast.iexpressionvisitorobsolete.md"
        },
        {
          "title": "Field.Type",
          "path": "cppsharp.ast.field.type.md"
        },
        {
          "title": "Field.QualifiedType",
          "path": "cppsharp.ast.field.qualifiedtype.md"
        },
        {
          "title": "Field.Class",
          "path": "cppsharp.ast.field.class.md"
        },
        {
          "title": "Field.IsStatic",
          "path": "cppsharp.ast.field.isstatic.md"
        },
        {
          "title": "Field.IsBitField",
          "path": "cppsharp.ast.field.isbitfield.md"
        },
        {
          "title": "Field.BitWidth",
          "path": "cppsharp.ast.field.bitwidth.md"
        },
        {
          "title": "Field()",
          "path": "cppsharp.ast.field..ctor-1.md"
        },
        {
          "title": "Field(string,QualifiedType,AccessSpecifier)",
          "path": "cppsharp.ast.field..ctor-2.md"
        },
        {
          "title": "Field(Field)",
          "path": "cppsharp.ast.field..ctor-3.md"
        },
        {
          "title": "Field.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.field.visit.md"
        },
        {
          "title": "Field",
          "path": "cppsharp.ast.field.md"
        },
        {
          "title": "Friend.Declaration",
          "path": "cppsharp.ast.friend.declaration.md"
        },
        {
          "title": "Friend()",
          "path": "cppsharp.ast.friend..ctor-1.md"
        },
        {
          "title": "Friend(Declaration)",
          "path": "cppsharp.ast.friend..ctor-2.md"
        },
        {
          "title": "Friend.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.friend.visit.md"
        },
        {
          "title": "Friend",
          "path": "cppsharp.ast.friend.md"
        },
        {
          "title": "CallingConvention.Default",
          "path": "cppsharp.ast.callingconvention.default.md"
        },
        {
          "title": "CallingConvention.C",
          "path": "cppsharp.ast.callingconvention.c.md"
        },
        {
          "title": "CallingConvention.StdCall",
          "path": "cppsharp.ast.callingconvention.stdcall.md"
        },
        {
          "title": "CallingConvention.ThisCall",
          "path": "cppsharp.ast.callingconvention.thiscall.md"
        },
        {
          "title": "CallingConvention.FastCall",
          "path": "cppsharp.ast.callingconvention.fastcall.md"
        },
        {
          "title": "CallingConvention.Unknown",
          "path": "cppsharp.ast.callingconvention.unknown.md"
        },
        {
          "title": "CallingConvention",
          "path": "cppsharp.ast.callingconvention.md"
        },
        {
          "title": "ParameterUsage.In",
          "path": "cppsharp.ast.parameterusage.in.md"
        },
        {
          "title": "ParameterUsage.Out",
          "path": "cppsharp.ast.parameterusage.out.md"
        },
        {
          "title": "ParameterUsage.InOut",
          "path": "cppsharp.ast.parameterusage.inout.md"
        },
        {
          "title": "ParameterUsage.Unknown",
          "path": "cppsharp.ast.parameterusage.unknown.md"
        },
        {
          "title": "ParameterUsage",
          "path": "cppsharp.ast.parameterusage.md"
        },
        {
          "title": "ParameterKind.Regular",
          "path": "cppsharp.ast.parameterkind.regular.md"
        },
        {
          "title": "ParameterKind.IndirectReturnType",
          "path": "cppsharp.ast.parameterkind.indirectreturntype.md"
        },
        {
          "title": "ParameterKind.OperatorParameter",
          "path": "cppsharp.ast.parameterkind.operatorparameter.md"
        },
        {
          "title": "ParameterKind.ImplicitDestructorParameter",
          "path": "cppsharp.ast.parameterkind.implicitdestructorparameter.md"
        },
        {
          "title": "ParameterKind.Extension",
          "path": "cppsharp.ast.parameterkind.extension.md"
        },
        {
          "title": "ParameterKind.PropertyValue",
          "path": "cppsharp.ast.parameterkind.propertyvalue.md"
        },
        {
          "title": "ParameterKind",
          "path": "cppsharp.ast.parameterkind.md"
        },
        {
          "title": "Parameter()",
          "path": "cppsharp.ast.parameter..ctor-1.md"
        },
        {
          "title": "Parameter(Parameter)",
          "path": "cppsharp.ast.parameter..ctor-2.md"
        },
        {
          "title": "Parameter.Type",
          "path": "cppsharp.ast.parameter.type.md"
        },
        {
          "title": "Parameter.QualifiedType",
          "path": "cppsharp.ast.parameter.qualifiedtype.md"
        },
        {
          "title": "Parameter.IsIndirect",
          "path": "cppsharp.ast.parameter.isindirect.md"
        },
        {
          "title": "Parameter.Index",
          "path": "cppsharp.ast.parameter.index.md"
        },
        {
          "title": "Parameter.Kind",
          "path": "cppsharp.ast.parameter.kind.md"
        },
        {
          "title": "Parameter.Usage",
          "path": "cppsharp.ast.parameter.usage.md"
        },
        {
          "title": "Parameter.HasDefaultValue",
          "path": "cppsharp.ast.parameter.hasdefaultvalue.md"
        },
        {
          "title": "Parameter.DefaultValue",
          "path": "cppsharp.ast.parameter.defaultvalue.md"
        },
        {
          "title": "Parameter.OriginalDefaultValue",
          "path": "cppsharp.ast.parameter.originaldefaultvalue.md"
        },
        {
          "title": "Parameter.DefaultArgument",
          "path": "cppsharp.ast.parameter.defaultargument.md"
        },
        {
          "title": "Parameter.OriginalDefaultArgument",
          "path": "cppsharp.ast.parameter.originaldefaultargument.md"
        },
        {
          "title": "Parameter.IsIn",
          "path": "cppsharp.ast.parameter.isin.md"
        },
        {
          "title": "Parameter.IsOut",
          "path": "cppsharp.ast.parameter.isout.md"
        },
        {
          "title": "Parameter.IsInOut",
          "path": "cppsharp.ast.parameter.isinout.md"
        },
        {
          "title": "Parameter.IsSynthetized",
          "path": "cppsharp.ast.parameter.issynthetized.md"
        },
        {
          "title": "Parameter.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.parameter.visit.md"
        },
        {
          "title": "Parameter.IsConst",
          "path": "cppsharp.ast.parameter.isconst.md"
        },
        {
          "title": "Parameter",
          "path": "cppsharp.ast.parameter.md"
        },
        {
          "title": "ParameterTypeComparer.Instance",
          "path": "cppsharp.ast.parametertypecomparer.instance.md"
        },
        {
          "title": "ParameterTypeComparer.Equals(Parameter,Parameter)",
          "path": "cppsharp.ast.parametertypecomparer.equals.md"
        },
        {
          "title": "ParameterTypeComparer.GetHashCode(Parameter)",
          "path": "cppsharp.ast.parametertypecomparer.gethashcode.md"
        },
        {
          "title": "ParameterTypeComparer",
          "path": "cppsharp.ast.parametertypecomparer.md"
        },
        {
          "title": "FunctionSynthKind.None",
          "path": "cppsharp.ast.functionsynthkind.none.md"
        },
        {
          "title": "FunctionSynthKind.ComplementOperator",
          "path": "cppsharp.ast.functionsynthkind.complementoperator.md"
        },
        {
          "title": "FunctionSynthKind.AbstractImplCall",
          "path": "cppsharp.ast.functionsynthkind.abstractimplcall.md"
        },
        {
          "title": "FunctionSynthKind.DefaultValueOverload",
          "path": "cppsharp.ast.functionsynthkind.defaultvalueoverload.md"
        },
        {
          "title": "FunctionSynthKind.InterfaceInstance",
          "path": "cppsharp.ast.functionsynthkind.interfaceinstance.md"
        },
        {
          "title": "FunctionSynthKind.InterfaceDispose",
          "path": "cppsharp.ast.functionsynthkind.interfacedispose.md"
        },
        {
          "title": "FunctionSynthKind.FieldAcessor",
          "path": "cppsharp.ast.functionsynthkind.fieldacessor.md"
        },
        {
          "title": "FunctionSynthKind",
          "path": "cppsharp.ast.functionsynthkind.md"
        },
        {
          "title": "FriendKind.None",
          "path": "cppsharp.ast.friendkind.none.md"
        },
        {
          "title": "FriendKind.Declared",
          "path": "cppsharp.ast.friendkind.declared.md"
        },
        {
          "title": "FriendKind.Undeclared",
          "path": "cppsharp.ast.friendkind.undeclared.md"
        },
        {
          "title": "FriendKind",
          "path": "cppsharp.ast.friendkind.md"
        },
        {
          "title": "Function()",
          "path": "cppsharp.ast.function..ctor-1.md"
        },
        {
          "title": "Function(Function)",
          "path": "cppsharp.ast.function..ctor-2.md"
        },
        {
          "title": "Function.ReturnType",
          "path": "cppsharp.ast.function.returntype.md"
        },
        {
          "title": "Function.IsReturnIndirect",
          "path": "cppsharp.ast.function.isreturnindirect.md"
        },
        {
          "title": "Function.HasThisReturn",
          "path": "cppsharp.ast.function.hasthisreturn.md"
        },
        {
          "title": "Function.Parameters",
          "path": "cppsharp.ast.function.parameters.md"
        },
        {
          "title": "Function.IsConstExpr",
          "path": "cppsharp.ast.function.isconstexpr.md"
        },
        {
          "title": "Function.IsVariadic",
          "path": "cppsharp.ast.function.isvariadic.md"
        },
        {
          "title": "Function.IsInline",
          "path": "cppsharp.ast.function.isinline.md"
        },
        {
          "title": "Function.IsPure",
          "path": "cppsharp.ast.function.ispure.md"
        },
        {
          "title": "Function.IsDeleted",
          "path": "cppsharp.ast.function.isdeleted.md"
        },
        {
          "title": "Function.IsDefaulted",
          "path": "cppsharp.ast.function.isdefaulted.md"
        },
        {
          "title": "Function.IsAmbiguous",
          "path": "cppsharp.ast.function.isambiguous.md"
        },
        {
          "title": "Function.FriendKind",
          "path": "cppsharp.ast.function.friendkind.md"
        },
        {
          "title": "Function.OperatorKind",
          "path": "cppsharp.ast.function.operatorkind.md"
        },
        {
          "title": "Function.IsOperator",
          "path": "cppsharp.ast.function.isoperator.md"
        },
        {
          "title": "Function.CallingConvention",
          "path": "cppsharp.ast.function.callingconvention.md"
        },
        {
          "title": "Function.SpecializationInfo",
          "path": "cppsharp.ast.function.specializationinfo.md"
        },
        {
          "title": "Function.InstantiatedFrom",
          "path": "cppsharp.ast.function.instantiatedfrom.md"
        },
        {
          "title": "Function.FunctionType",
          "path": "cppsharp.ast.function.functiontype.md"
        },
        {
          "title": "Function.IsThisCall",
          "path": "cppsharp.ast.function.isthiscall.md"
        },
        {
          "title": "Function.IsStdCall",
          "path": "cppsharp.ast.function.isstdcall.md"
        },
        {
          "title": "Function.IsFastCall",
          "path": "cppsharp.ast.function.isfastcall.md"
        },
        {
          "title": "Function.IsCCall",
          "path": "cppsharp.ast.function.isccall.md"
        },
        {
          "title": "Function.HasIndirectReturnTypeParameter",
          "path": "cppsharp.ast.function.hasindirectreturntypeparameter.md"
        },
        {
          "title": "Function.OriginalReturnType",
          "path": "cppsharp.ast.function.originalreturntype.md"
        },
        {
          "title": "Function.SynthKind",
          "path": "cppsharp.ast.function.synthkind.md"
        },
        {
          "title": "Function.IsSynthetized",
          "path": "cppsharp.ast.function.issynthetized.md"
        },
        {
          "title": "Function.IsNonMemberOperator",
          "path": "cppsharp.ast.function.isnonmemberoperator.md"
        },
        {
          "title": "Function.OriginalFunction",
          "path": "cppsharp.ast.function.originalfunction.md"
        },
        {
          "title": "Function.Mangled",
          "path": "cppsharp.ast.function.mangled.md"
        },
        {
          "title": "Function.Signature",
          "path": "cppsharp.ast.function.signature.md"
        },
        {
          "title": "Function.Body",
          "path": "cppsharp.ast.function.body.md"
        },
        {
          "title": "Function.BodyStmt",
          "path": "cppsharp.ast.function.bodystmt.md"
        },
        {
          "title": "Function.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.function.visit.md"
        },
        {
          "title": "Function.Type",
          "path": "cppsharp.ast.function.type.md"
        },
        {
          "title": "Function.QualifiedType",
          "path": "cppsharp.ast.function.qualifiedtype.md"
        },
        {
          "title": "Function",
          "path": "cppsharp.ast.function.md"
        },
        {
          "title": "FunctionExtensions.GatherInternalParams(Function,bool,bool)",
          "path": "cppsharp.ast.functionextensions.gatherinternalparams.md"
        },
        {
          "title": "FunctionExtensions.IsGeneratedOverride(Method)",
          "path": "cppsharp.ast.functionextensions.isgeneratedoverride.md"
        },
        {
          "title": "FunctionExtensions.CanOverride(Method,Method)",
          "path": "cppsharp.ast.functionextensions.canoverride.md"
        },
        {
          "title": "FunctionExtensions.NeedsSymbol(Method)",
          "path": "cppsharp.ast.functionextensions.needssymbol.md"
        },
        {
          "title": "FunctionExtensions",
          "path": "cppsharp.ast.functionextensions.md"
        },
        {
          "title": "IExpressionPrinter.ToString(Type)",
          "path": "cppsharp.ast.iexpressionprinter.tostring.md"
        },
        {
          "title": "IExpressionPrinter",
          "path": "cppsharp.ast.iexpressionprinter-1.md"
        },
        {
          "title": "IExpressionPrinter",
          "path": "cppsharp.ast.iexpressionprinter-2.md"
        },
        {
          "title": "LayoutBase.Offset",
          "path": "cppsharp.ast.layoutbase.offset.md"
        },
        {
          "title": "LayoutBase.Class",
          "path": "cppsharp.ast.layoutbase.class.md"
        },
        {
          "title": "LayoutBase",
          "path": "cppsharp.ast.layoutbase.md"
        },
        {
          "title": "LayoutField.Offset",
          "path": "cppsharp.ast.layoutfield.offset.md"
        },
        {
          "title": "LayoutField.QualifiedType",
          "path": "cppsharp.ast.layoutfield.qualifiedtype.md"
        },
        {
          "title": "LayoutField.Name",
          "path": "cppsharp.ast.layoutfield.name.md"
        },
        {
          "title": "LayoutField.FieldPtr",
          "path": "cppsharp.ast.layoutfield.fieldptr.md"
        },
        {
          "title": "LayoutField.IsVTablePtr",
          "path": "cppsharp.ast.layoutfield.isvtableptr.md"
        },
        {
          "title": "LayoutField.Expression",
          "path": "cppsharp.ast.layoutfield.expression.md"
        },
        {
          "title": "LayoutField.ToString()",
          "path": "cppsharp.ast.layoutfield.tostring.md"
        },
        {
          "title": "LayoutField",
          "path": "cppsharp.ast.layoutfield.md"
        },
        {
          "title": "CXXMethodKind.Normal",
          "path": "cppsharp.ast.cxxmethodkind.normal.md"
        },
        {
          "title": "CXXMethodKind.Constructor",
          "path": "cppsharp.ast.cxxmethodkind.constructor.md"
        },
        {
          "title": "CXXMethodKind.Destructor",
          "path": "cppsharp.ast.cxxmethodkind.destructor.md"
        },
        {
          "title": "CXXMethodKind.Conversion",
          "path": "cppsharp.ast.cxxmethodkind.conversion.md"
        },
        {
          "title": "CXXMethodKind.Operator",
          "path": "cppsharp.ast.cxxmethodkind.operator.md"
        },
        {
          "title": "CXXMethodKind.UsingDirective",
          "path": "cppsharp.ast.cxxmethodkind.usingdirective.md"
        },
        {
          "title": "CXXMethodKind",
          "path": "cppsharp.ast.cxxmethodkind.md"
        },
        {
          "title": "CXXOperatorArity.Zero",
          "path": "cppsharp.ast.cxxoperatorarity.zero.md"
        },
        {
          "title": "CXXOperatorArity.Unary",
          "path": "cppsharp.ast.cxxoperatorarity.unary.md"
        },
        {
          "title": "CXXOperatorArity.Binary",
          "path": "cppsharp.ast.cxxoperatorarity.binary.md"
        },
        {
          "title": "CXXOperatorArity",
          "path": "cppsharp.ast.cxxoperatorarity.md"
        },
        {
          "title": "CXXOperatorKind.None",
          "path": "cppsharp.ast.cxxoperatorkind.none.md"
        },
        {
          "title": "CXXOperatorKind.New",
          "path": "cppsharp.ast.cxxoperatorkind.new.md"
        },
        {
          "title": "CXXOperatorKind.Delete",
          "path": "cppsharp.ast.cxxoperatorkind.delete.md"
        },
        {
          "title": "CXXOperatorKind.Array_New",
          "path": "cppsharp.ast.cxxoperatorkind.array_new.md"
        },
        {
          "title": "CXXOperatorKind.Array_Delete",
          "path": "cppsharp.ast.cxxoperatorkind.array_delete.md"
        },
        {
          "title": "CXXOperatorKind.Plus",
          "path": "cppsharp.ast.cxxoperatorkind.plus.md"
        },
        {
          "title": "CXXOperatorKind.Minus",
          "path": "cppsharp.ast.cxxoperatorkind.minus.md"
        },
        {
          "title": "CXXOperatorKind.Star",
          "path": "cppsharp.ast.cxxoperatorkind.star.md"
        },
        {
          "title": "CXXOperatorKind.Slash",
          "path": "cppsharp.ast.cxxoperatorkind.slash.md"
        },
        {
          "title": "CXXOperatorKind.Percent",
          "path": "cppsharp.ast.cxxoperatorkind.percent.md"
        },
        {
          "title": "CXXOperatorKind.Caret",
          "path": "cppsharp.ast.cxxoperatorkind.caret.md"
        },
        {
          "title": "CXXOperatorKind.Amp",
          "path": "cppsharp.ast.cxxoperatorkind.amp.md"
        },
        {
          "title": "CXXOperatorKind.Pipe",
          "path": "cppsharp.ast.cxxoperatorkind.pipe.md"
        },
        {
          "title": "CXXOperatorKind.Tilde",
          "path": "cppsharp.ast.cxxoperatorkind.tilde.md"
        },
        {
          "title": "CXXOperatorKind.Exclaim",
          "path": "cppsharp.ast.cxxoperatorkind.exclaim.md"
        },
        {
          "title": "CXXOperatorKind.Equal",
          "path": "cppsharp.ast.cxxoperatorkind.equal.md"
        },
        {
          "title": "CXXOperatorKind.Less",
          "path": "cppsharp.ast.cxxoperatorkind.less.md"
        },
        {
          "title": "CXXOperatorKind.Greater",
          "path": "cppsharp.ast.cxxoperatorkind.greater.md"
        },
        {
          "title": "CXXOperatorKind.PlusEqual",
          "path": "cppsharp.ast.cxxoperatorkind.plusequal.md"
        },
        {
          "title": "CXXOperatorKind.MinusEqual",
          "path": "cppsharp.ast.cxxoperatorkind.minusequal.md"
        },
        {
          "title": "CXXOperatorKind.StarEqual",
          "path": "cppsharp.ast.cxxoperatorkind.starequal.md"
        },
        {
          "title": "CXXOperatorKind.SlashEqual",
          "path": "cppsharp.ast.cxxoperatorkind.slashequal.md"
        },
        {
          "title": "CXXOperatorKind.PercentEqual",
          "path": "cppsharp.ast.cxxoperatorkind.percentequal.md"
        },
        {
          "title": "CXXOperatorKind.CaretEqual",
          "path": "cppsharp.ast.cxxoperatorkind.caretequal.md"
        },
        {
          "title": "CXXOperatorKind.AmpEqual",
          "path": "cppsharp.ast.cxxoperatorkind.ampequal.md"
        },
        {
          "title": "CXXOperatorKind.PipeEqual",
          "path": "cppsharp.ast.cxxoperatorkind.pipeequal.md"
        },
        {
          "title": "CXXOperatorKind.LessLess",
          "path": "cppsharp.ast.cxxoperatorkind.lessless.md"
        },
        {
          "title": "CXXOperatorKind.GreaterGreater",
          "path": "cppsharp.ast.cxxoperatorkind.greatergreater.md"
        },
        {
          "title": "CXXOperatorKind.LessLessEqual",
          "path": "cppsharp.ast.cxxoperatorkind.lesslessequal.md"
        },
        {
          "title": "CXXOperatorKind.GreaterGreaterEqual",
          "path": "cppsharp.ast.cxxoperatorkind.greatergreaterequal.md"
        },
        {
          "title": "CXXOperatorKind.EqualEqual",
          "path": "cppsharp.ast.cxxoperatorkind.equalequal.md"
        },
        {
          "title": "CXXOperatorKind.ExclaimEqual",
          "path": "cppsharp.ast.cxxoperatorkind.exclaimequal.md"
        },
        {
          "title": "CXXOperatorKind.LessEqual",
          "path": "cppsharp.ast.cxxoperatorkind.lessequal.md"
        },
        {
          "title": "CXXOperatorKind.GreaterEqual",
          "path": "cppsharp.ast.cxxoperatorkind.greaterequal.md"
        },
        {
          "title": "CXXOperatorKind.AmpAmp",
          "path": "cppsharp.ast.cxxoperatorkind.ampamp.md"
        },
        {
          "title": "CXXOperatorKind.PipePipe",
          "path": "cppsharp.ast.cxxoperatorkind.pipepipe.md"
        },
        {
          "title": "CXXOperatorKind.PlusPlus",
          "path": "cppsharp.ast.cxxoperatorkind.plusplus.md"
        },
        {
          "title": "CXXOperatorKind.MinusMinus",
          "path": "cppsharp.ast.cxxoperatorkind.minusminus.md"
        },
        {
          "title": "CXXOperatorKind.Comma",
          "path": "cppsharp.ast.cxxoperatorkind.comma.md"
        },
        {
          "title": "CXXOperatorKind.ArrowStar",
          "path": "cppsharp.ast.cxxoperatorkind.arrowstar.md"
        },
        {
          "title": "CXXOperatorKind.Arrow",
          "path": "cppsharp.ast.cxxoperatorkind.arrow.md"
        },
        {
          "title": "CXXOperatorKind.Call",
          "path": "cppsharp.ast.cxxoperatorkind.call.md"
        },
        {
          "title": "CXXOperatorKind.Subscript",
          "path": "cppsharp.ast.cxxoperatorkind.subscript.md"
        },
        {
          "title": "CXXOperatorKind.Conditional",
          "path": "cppsharp.ast.cxxoperatorkind.conditional.md"
        },
        {
          "title": "CXXOperatorKind.Coawait",
          "path": "cppsharp.ast.cxxoperatorkind.coawait.md"
        },
        {
          "title": "CXXOperatorKind.Conversion",
          "path": "cppsharp.ast.cxxoperatorkind.conversion.md"
        },
        {
          "title": "CXXOperatorKind.ExplicitConversion",
          "path": "cppsharp.ast.cxxoperatorkind.explicitconversion.md"
        },
        {
          "title": "CXXOperatorKind",
          "path": "cppsharp.ast.cxxoperatorkind.md"
        },
        {
          "title": "RefQualifier.None",
          "path": "cppsharp.ast.refqualifier.none.md"
        },
        {
          "title": "RefQualifier.LValue",
          "path": "cppsharp.ast.refqualifier.lvalue.md"
        },
        {
          "title": "RefQualifier.RValue",
          "path": "cppsharp.ast.refqualifier.rvalue.md"
        },
        {
          "title": "RefQualifier",
          "path": "cppsharp.ast.refqualifier.md"
        },
        {
          "title": "Method()",
          "path": "cppsharp.ast.method..ctor-1.md"
        },
        {
          "title": "Method(Method)",
          "path": "cppsharp.ast.method..ctor-2.md"
        },
        {
          "title": "Method(Function)",
          "path": "cppsharp.ast.method..ctor-3.md"
        },
        {
          "title": "Method.IsVirtual",
          "path": "cppsharp.ast.method.isvirtual.md"
        },
        {
          "title": "Method.IsStatic",
          "path": "cppsharp.ast.method.isstatic.md"
        },
        {
          "title": "Method.IsConst",
          "path": "cppsharp.ast.method.isconst.md"
        },
        {
          "title": "Method.IsExplicit",
          "path": "cppsharp.ast.method.isexplicit.md"
        },
        {
          "title": "Method.IsVolatile",
          "path": "cppsharp.ast.method.isvolatile.md"
        },
        {
          "title": "Method.IsOverride",
          "path": "cppsharp.ast.method.isoverride.md"
        },
        {
          "title": "Method.BaseMethod",
          "path": "cppsharp.ast.method.basemethod.md"
        },
        {
          "title": "Method.IsFinal",
          "path": "cppsharp.ast.method.isfinal.md"
        },
        {
          "title": "Method.IsProxy",
          "path": "cppsharp.ast.method.isproxy.md"
        },
        {
          "title": "Method.RefQualifier",
          "path": "cppsharp.ast.method.refqualifier.md"
        },
        {
          "title": "Method.Kind",
          "path": "cppsharp.ast.method.kind.md"
        },
        {
          "title": "Method.IsConstructor",
          "path": "cppsharp.ast.method.isconstructor.md"
        },
        {
          "title": "Method.IsDestructor",
          "path": "cppsharp.ast.method.isdestructor.md"
        },
        {
          "title": "Method.IsDefaultConstructor",
          "path": "cppsharp.ast.method.isdefaultconstructor.md"
        },
        {
          "title": "Method.IsCopyConstructor",
          "path": "cppsharp.ast.method.iscopyconstructor.md"
        },
        {
          "title": "Method.IsMoveConstructor",
          "path": "cppsharp.ast.method.ismoveconstructor.md"
        },
        {
          "title": "Method.Conversion",
          "path": "cppsharp.ast.method.conversion.md"
        },
        {
          "title": "Method.ConversionType",
          "path": "cppsharp.ast.method.conversiontype.md"
        },
        {
          "title": "Method.ExplicitInterfaceImpl",
          "path": "cppsharp.ast.method.explicitinterfaceimpl.md"
        },
        {
          "title": "Method.AdjustedOffset",
          "path": "cppsharp.ast.method.adjustedoffset.md"
        },
        {
          "title": "Method.OverriddenMethods",
          "path": "cppsharp.ast.method.overriddenmethods.md"
        },
        {
          "title": "Method.ConvertToProperty",
          "path": "cppsharp.ast.method.converttoproperty.md"
        },
        {
          "title": "Method.GetRootBaseMethod()",
          "path": "cppsharp.ast.method.getrootbasemethod.md"
        },
        {
          "title": "Method.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.method.visit.md"
        },
        {
          "title": "Method.HasSameSignature(Method)",
          "path": "cppsharp.ast.method.hassamesignature.md"
        },
        {
          "title": "Method.ToString()",
          "path": "cppsharp.ast.method.tostring.md"
        },
        {
          "title": "Method",
          "path": "cppsharp.ast.method.md"
        },
        {
          "title": "Module.IncludeDirs",
          "path": "cppsharp.ast.module.includedirs.md"
        },
        {
          "title": "Module.Headers",
          "path": "cppsharp.ast.module.headers.md"
        },
        {
          "title": "Module.LibraryDirs",
          "path": "cppsharp.ast.module.librarydirs.md"
        },
        {
          "title": "Module.Libraries",
          "path": "cppsharp.ast.module.libraries.md"
        },
        {
          "title": "Module.Defines",
          "path": "cppsharp.ast.module.defines.md"
        },
        {
          "title": "Module.Undefines",
          "path": "cppsharp.ast.module.undefines.md"
        },
        {
          "title": "Module.OutputNamespace",
          "path": "cppsharp.ast.module.outputnamespace.md"
        },
        {
          "title": "Module.Units",
          "path": "cppsharp.ast.module.units.md"
        },
        {
          "title": "Module.CodeFiles",
          "path": "cppsharp.ast.module.codefiles.md"
        },
        {
          "title": "Module.ReferencedAssemblies",
          "path": "cppsharp.ast.module.referencedassemblies.md"
        },
        {
          "title": "Module.Dependencies",
          "path": "cppsharp.ast.module.dependencies.md"
        },
        {
          "title": "Module()",
          "path": "cppsharp.ast.module..ctor-1.md"
        },
        {
          "title": "Module(string)",
          "path": "cppsharp.ast.module..ctor-2.md"
        },
        {
          "title": "Module.SharedLibraryName",
          "path": "cppsharp.ast.module.sharedlibraryname.md"
        },
        {
          "title": "Module.SymbolsLibraryName",
          "path": "cppsharp.ast.module.symbolslibraryname.md"
        },
        {
          "title": "Module.LibraryName",
          "path": "cppsharp.ast.module.libraryname.md"
        },
        {
          "title": "Module.ToString()",
          "path": "cppsharp.ast.module.tostring.md"
        },
        {
          "title": "Module.ExternalClassTemplateSpecializations",
          "path": "cppsharp.ast.module.externalclasstemplatespecializations.md"
        },
        {
          "title": "Module",
          "path": "cppsharp.ast.module.md"
        },
        {
          "title": "DeclarationContext.IsAnonymous",
          "path": "cppsharp.ast.declarationcontext.isanonymous.md"
        },
        {
          "title": "DeclarationContext.Declarations",
          "path": "cppsharp.ast.declarationcontext.declarations.md"
        },
        {
          "title": "DeclarationContext.TypeReferences",
          "path": "cppsharp.ast.declarationcontext.typereferences.md"
        },
        {
          "title": "DeclarationContext.Namespaces",
          "path": "cppsharp.ast.declarationcontext.namespaces.md"
        },
        {
          "title": "DeclarationContext.Enums",
          "path": "cppsharp.ast.declarationcontext.enums.md"
        },
        {
          "title": "DeclarationContext.Functions",
          "path": "cppsharp.ast.declarationcontext.functions.md"
        },
        {
          "title": "DeclarationContext.Classes",
          "path": "cppsharp.ast.declarationcontext.classes.md"
        },
        {
          "title": "DeclarationContext.Templates",
          "path": "cppsharp.ast.declarationcontext.templates.md"
        },
        {
          "title": "DeclarationContext.Typedefs",
          "path": "cppsharp.ast.declarationcontext.typedefs.md"
        },
        {
          "title": "DeclarationContext.Variables",
          "path": "cppsharp.ast.declarationcontext.variables.md"
        },
        {
          "title": "DeclarationContext.Events",
          "path": "cppsharp.ast.declarationcontext.events.md"
        },
        {
          "title": "DeclarationContext.Anonymous",
          "path": "cppsharp.ast.declarationcontext.anonymous.md"
        },
        {
          "title": "DeclarationContext.IsExternCContext",
          "path": "cppsharp.ast.declarationcontext.isexternccontext.md"
        },
        {
          "title": "DeclarationContext.LogicalName",
          "path": "cppsharp.ast.declarationcontext.logicalname.md"
        },
        {
          "title": "DeclarationContext.LogicalOriginalName",
          "path": "cppsharp.ast.declarationcontext.logicaloriginalname.md"
        },
        {
          "title": "DeclarationContext.GatherParentNamespaces()",
          "path": "cppsharp.ast.declarationcontext.gatherparentnamespaces.md"
        },
        {
          "title": "DeclarationContext.FindAnonymous(ulong)",
          "path": "cppsharp.ast.declarationcontext.findanonymous.md"
        },
        {
          "title": "DeclarationContext.FindNamespace(string)",
          "path": "cppsharp.ast.declarationcontext.findnamespace-1.md"
        },
        {
          "title": "DeclarationContext.FindNamespace(IEnumerable\u003Cstring\u003E)",
          "path": "cppsharp.ast.declarationcontext.findnamespace-2.md"
        },
        {
          "title": "DeclarationContext.FindCreateNamespace(string)",
          "path": "cppsharp.ast.declarationcontext.findcreatenamespace.md"
        },
        {
          "title": "DeclarationContext.FindEnum(string,bool)",
          "path": "cppsharp.ast.declarationcontext.findenum-1.md"
        },
        {
          "title": "DeclarationContext.FindEnum(IntPtr)",
          "path": "cppsharp.ast.declarationcontext.findenum-2.md"
        },
        {
          "title": "DeclarationContext.FindFunction(string,bool)",
          "path": "cppsharp.ast.declarationcontext.findfunction.md"
        },
        {
          "title": "DeclarationContext.FindFunctionByUSR(string)",
          "path": "cppsharp.ast.declarationcontext.findfunctionbyusr.md"
        },
        {
          "title": "DeclarationContext.FindClass(string,StringComparison)",
          "path": "cppsharp.ast.declarationcontext.findclass-1.md"
        },
        {
          "title": "DeclarationContext.FindClass(string,bool,bool)",
          "path": "cppsharp.ast.declarationcontext.findclass-2.md"
        },
        {
          "title": "DeclarationContext.FindFunctionTemplate(string)",
          "path": "cppsharp.ast.declarationcontext.findfunctiontemplate.md"
        },
        {
          "title": "DeclarationContext.FindFunctionTemplateByUSR(string)",
          "path": "cppsharp.ast.declarationcontext.findfunctiontemplatebyusr.md"
        },
        {
          "title": "DeclarationContext.FindClassTemplate(string)",
          "path": "cppsharp.ast.declarationcontext.findclasstemplate.md"
        },
        {
          "title": "DeclarationContext.FindClassTemplateByUSR(string)",
          "path": "cppsharp.ast.declarationcontext.findclasstemplatebyusr.md"
        },
        {
          "title": "DeclarationContext.FindTypedef(string,bool)",
          "path": "cppsharp.ast.declarationcontext.findtypedef.md"
        },
        {
          "title": "DeclarationContext.FindType(string)",
          "path": "cppsharp.ast.declarationcontext.findtype.md"
        },
        {
          "title": "DeclarationContext.FindEnumWithItem(string)",
          "path": "cppsharp.ast.declarationcontext.findenumwithitem.md"
        },
        {
          "title": "DeclarationContext.FindOperator(CXXOperatorKind)",
          "path": "cppsharp.ast.declarationcontext.findoperator.md"
        },
        {
          "title": "DeclarationContext.GetOverloads(Function)",
          "path": "cppsharp.ast.declarationcontext.getoverloads.md"
        },
        {
          "title": "DeclarationContext.HasDeclarations",
          "path": "cppsharp.ast.declarationcontext.hasdeclarations.md"
        },
        {
          "title": "DeclarationContext.HasFunctions",
          "path": "cppsharp.ast.declarationcontext.hasfunctions.md"
        },
        {
          "title": "DeclarationContext.IsRoot",
          "path": "cppsharp.ast.declarationcontext.isroot.md"
        },
        {
          "title": "DeclarationContext",
          "path": "cppsharp.ast.declarationcontext.md"
        },
        {
          "title": "Namespace.LogicalName",
          "path": "cppsharp.ast.namespace.logicalname.md"
        },
        {
          "title": "Namespace.LogicalOriginalName",
          "path": "cppsharp.ast.namespace.logicaloriginalname.md"
        },
        {
          "title": "Namespace.IsInline",
          "path": "cppsharp.ast.namespace.isinline.md"
        },
        {
          "title": "Namespace.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.namespace.visit.md"
        },
        {
          "title": "Namespace",
          "path": "cppsharp.ast.namespace.md"
        },
        {
          "title": "MacroLocation.Unknown",
          "path": "cppsharp.ast.macrolocation.unknown.md"
        },
        {
          "title": "MacroLocation.ClassHead",
          "path": "cppsharp.ast.macrolocation.classhead.md"
        },
        {
          "title": "MacroLocation.ClassBody",
          "path": "cppsharp.ast.macrolocation.classbody.md"
        },
        {
          "title": "MacroLocation.FunctionHead",
          "path": "cppsharp.ast.macrolocation.functionhead.md"
        },
        {
          "title": "MacroLocation.FunctionParameters",
          "path": "cppsharp.ast.macrolocation.functionparameters.md"
        },
        {
          "title": "MacroLocation.FunctionBody",
          "path": "cppsharp.ast.macrolocation.functionbody.md"
        },
        {
          "title": "MacroLocation",
          "path": "cppsharp.ast.macrolocation.md"
        },
        {
          "title": "PreprocessedEntity.MacroLocation",
          "path": "cppsharp.ast.preprocessedentity.macrolocation.md"
        },
        {
          "title": "PreprocessedEntity.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.preprocessedentity.visit.md"
        },
        {
          "title": "PreprocessedEntity",
          "path": "cppsharp.ast.preprocessedentity.md"
        },
        {
          "title": "MacroExpansion.Name",
          "path": "cppsharp.ast.macroexpansion.name.md"
        },
        {
          "title": "MacroExpansion.Text",
          "path": "cppsharp.ast.macroexpansion.text.md"
        },
        {
          "title": "MacroExpansion.Definition",
          "path": "cppsharp.ast.macroexpansion.definition.md"
        },
        {
          "title": "MacroExpansion.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.macroexpansion.visit.md"
        },
        {
          "title": "MacroExpansion.ToString()",
          "path": "cppsharp.ast.macroexpansion.tostring.md"
        },
        {
          "title": "MacroExpansion",
          "path": "cppsharp.ast.macroexpansion.md"
        },
        {
          "title": "MacroDefinition.Expression",
          "path": "cppsharp.ast.macrodefinition.expression.md"
        },
        {
          "title": "MacroDefinition.Enumeration",
          "path": "cppsharp.ast.macrodefinition.enumeration.md"
        },
        {
          "title": "MacroDefinition.Name",
          "path": "cppsharp.ast.macrodefinition.name.md"
        },
        {
          "title": "MacroDefinition.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.macrodefinition.visit.md"
        },
        {
          "title": "MacroDefinition.ToString()",
          "path": "cppsharp.ast.macrodefinition.tostring.md"
        },
        {
          "title": "MacroDefinition",
          "path": "cppsharp.ast.macrodefinition.md"
        },
        {
          "title": "Property()",
          "path": "cppsharp.ast.property..ctor-1.md"
        },
        {
          "title": "Property(Property)",
          "path": "cppsharp.ast.property..ctor-2.md"
        },
        {
          "title": "Property.Type",
          "path": "cppsharp.ast.property.type.md"
        },
        {
          "title": "Property.QualifiedType",
          "path": "cppsharp.ast.property.qualifiedtype.md"
        },
        {
          "title": "Property.IsStatic",
          "path": "cppsharp.ast.property.isstatic.md"
        },
        {
          "title": "Property.IsPure",
          "path": "cppsharp.ast.property.ispure.md"
        },
        {
          "title": "Property.IsVirtual",
          "path": "cppsharp.ast.property.isvirtual.md"
        },
        {
          "title": "Property.IsOverride",
          "path": "cppsharp.ast.property.isoverride.md"
        },
        {
          "title": "Property.GetMethod",
          "path": "cppsharp.ast.property.getmethod.md"
        },
        {
          "title": "Property.SetMethod",
          "path": "cppsharp.ast.property.setmethod.md"
        },
        {
          "title": "Property.HasGetter",
          "path": "cppsharp.ast.property.hasgetter.md"
        },
        {
          "title": "Property.HasSetter",
          "path": "cppsharp.ast.property.hassetter.md"
        },
        {
          "title": "Property.Field",
          "path": "cppsharp.ast.property.field.md"
        },
        {
          "title": "Property.ExplicitInterfaceImpl",
          "path": "cppsharp.ast.property.explicitinterfaceimpl.md"
        },
        {
          "title": "Property.Parameters",
          "path": "cppsharp.ast.property.parameters.md"
        },
        {
          "title": "Property.IsIndexer",
          "path": "cppsharp.ast.property.isindexer.md"
        },
        {
          "title": "Property.IsSynthetized",
          "path": "cppsharp.ast.property.issynthetized.md"
        },
        {
          "title": "Property.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.property.visit.md"
        },
        {
          "title": "Property",
          "path": "cppsharp.ast.property.md"
        },
        {
          "title": "PropertyExtensions.IsInRefTypeAndBackedByValueClassField(Property)",
          "path": "cppsharp.ast.propertyextensions.isinreftypeandbackedbyvalueclassfield.md"
        },
        {
          "title": "PropertyExtensions",
          "path": "cppsharp.ast.propertyextensions.md"
        },
        {
          "title": "TypeReference.Declaration",
          "path": "cppsharp.ast.typereference.declaration.md"
        },
        {
          "title": "TypeReference.FowardReference",
          "path": "cppsharp.ast.typereference.fowardreference.md"
        },
        {
          "title": "TypeReference.ToString()",
          "path": "cppsharp.ast.typereference.tostring.md"
        },
        {
          "title": "TypeReference",
          "path": "cppsharp.ast.typereference.md"
        },
        {
          "title": "SourceLocation(uint)",
          "path": "cppsharp.ast.sourcelocation..ctor.md"
        },
        {
          "title": "SourceLocation.ID",
          "path": "cppsharp.ast.sourcelocation.id.md"
        },
        {
          "title": "SourceLocation.IsFileID",
          "path": "cppsharp.ast.sourcelocation.isfileid.md"
        },
        {
          "title": "SourceLocation.IsMacroID",
          "path": "cppsharp.ast.sourcelocation.ismacroid.md"
        },
        {
          "title": "SourceLocation.IsValid",
          "path": "cppsharp.ast.sourcelocation.isvalid.md"
        },
        {
          "title": "SourceLocation.IsInvalid",
          "path": "cppsharp.ast.sourcelocation.isinvalid.md"
        },
        {
          "title": "SourceLocation.Offset",
          "path": "cppsharp.ast.sourcelocation.offset.md"
        },
        {
          "title": "M:CppSharp.AST.SourceLocation.op_Equality(CppSharp.AST.SourceLocation,CppSharp.AST.SourceLocation)~System.Boolean",
          "path": "cppsharp.ast.sourcelocation.op_equality.md"
        },
        {
          "title": "M:CppSharp.AST.SourceLocation.op_Inequality(CppSharp.AST.SourceLocation,CppSharp.AST.SourceLocation)~System.Boolean",
          "path": "cppsharp.ast.sourcelocation.op_inequality.md"
        },
        {
          "title": "SourceLocation.Equals(SourceLocation)",
          "path": "cppsharp.ast.sourcelocation.equals-1.md"
        },
        {
          "title": "SourceLocation.Equals(object)",
          "path": "cppsharp.ast.sourcelocation.equals-2.md"
        },
        {
          "title": "SourceLocation.GetHashCode()",
          "path": "cppsharp.ast.sourcelocation.gethashcode.md"
        },
        {
          "title": "SourceLocation.ToString()",
          "path": "cppsharp.ast.sourcelocation.tostring.md"
        },
        {
          "title": "SourceLocation",
          "path": "cppsharp.ast.sourcelocation.md"
        },
        {
          "title": "SourceRange",
          "path": "cppsharp.ast.sourcerange.md"
        },
        {
          "title": "StatementClass.Any",
          "path": "cppsharp.ast.statementclass.any.md"
        },
        {
          "title": "StatementClass.BinaryOperator",
          "path": "cppsharp.ast.statementclass.binaryoperator.md"
        },
        {
          "title": "StatementClass.DeclarationReference",
          "path": "cppsharp.ast.statementclass.declarationreference.md"
        },
        {
          "title": "StatementClass.Call",
          "path": "cppsharp.ast.statementclass.call.md"
        },
        {
          "title": "StatementClass.ConstructorReference",
          "path": "cppsharp.ast.statementclass.constructorreference.md"
        },
        {
          "title": "StatementClass.CXXOperatorCall",
          "path": "cppsharp.ast.statementclass.cxxoperatorcall.md"
        },
        {
          "title": "StatementClass.ImplicitCast",
          "path": "cppsharp.ast.statementclass.implicitcast.md"
        },
        {
          "title": "StatementClass.ExplicitCast",
          "path": "cppsharp.ast.statementclass.explicitcast.md"
        },
        {
          "title": "StatementClass",
          "path": "cppsharp.ast.statementclass.md"
        },
        {
          "title": "Statement.Class",
          "path": "cppsharp.ast.statement.class.md"
        },
        {
          "title": "Statement.Declaration",
          "path": "cppsharp.ast.statement.declaration.md"
        },
        {
          "title": "Statement.String",
          "path": "cppsharp.ast.statement.string.md"
        },
        {
          "title": "Statement",
          "path": "cppsharp.ast.statement.md"
        },
        {
          "title": "StmtClass.NoStmt",
          "path": "cppsharp.ast.stmtclass.nostmt.md"
        },
        {
          "title": "StmtClass.GCCAsmStmt",
          "path": "cppsharp.ast.stmtclass.gccasmstmt.md"
        },
        {
          "title": "StmtClass.MSAsmStmt",
          "path": "cppsharp.ast.stmtclass.msasmstmt.md"
        },
        {
          "title": "StmtClass.AttributedStmt",
          "path": "cppsharp.ast.stmtclass.attributedstmt.md"
        },
        {
          "title": "StmtClass.BreakStmt",
          "path": "cppsharp.ast.stmtclass.breakstmt.md"
        },
        {
          "title": "StmtClass.CXXCatchStmt",
          "path": "cppsharp.ast.stmtclass.cxxcatchstmt.md"
        },
        {
          "title": "StmtClass.CXXForRangeStmt",
          "path": "cppsharp.ast.stmtclass.cxxforrangestmt.md"
        },
        {
          "title": "StmtClass.CXXTryStmt",
          "path": "cppsharp.ast.stmtclass.cxxtrystmt.md"
        },
        {
          "title": "StmtClass.CapturedStmt",
          "path": "cppsharp.ast.stmtclass.capturedstmt.md"
        },
        {
          "title": "StmtClass.CompoundStmt",
          "path": "cppsharp.ast.stmtclass.compoundstmt.md"
        },
        {
          "title": "StmtClass.ContinueStmt",
          "path": "cppsharp.ast.stmtclass.continuestmt.md"
        },
        {
          "title": "StmtClass.CoreturnStmt",
          "path": "cppsharp.ast.stmtclass.coreturnstmt.md"
        },
        {
          "title": "StmtClass.CoroutineBodyStmt",
          "path": "cppsharp.ast.stmtclass.coroutinebodystmt.md"
        },
        {
          "title": "StmtClass.DeclStmt",
          "path": "cppsharp.ast.stmtclass.declstmt.md"
        },
        {
          "title": "StmtClass.DoStmt",
          "path": "cppsharp.ast.stmtclass.dostmt.md"
        },
        {
          "title": "StmtClass.BinaryConditionalOperator",
          "path": "cppsharp.ast.stmtclass.binaryconditionaloperator.md"
        },
        {
          "title": "StmtClass.ConditionalOperator",
          "path": "cppsharp.ast.stmtclass.conditionaloperator.md"
        },
        {
          "title": "StmtClass.AddrLabelExpr",
          "path": "cppsharp.ast.stmtclass.addrlabelexpr.md"
        },
        {
          "title": "StmtClass.ArrayInitIndexExpr",
          "path": "cppsharp.ast.stmtclass.arrayinitindexexpr.md"
        },
        {
          "title": "StmtClass.ArrayInitLoopExpr",
          "path": "cppsharp.ast.stmtclass.arrayinitloopexpr.md"
        },
        {
          "title": "StmtClass.ArraySubscriptExpr",
          "path": "cppsharp.ast.stmtclass.arraysubscriptexpr.md"
        },
        {
          "title": "StmtClass.ArrayTypeTraitExpr",
          "path": "cppsharp.ast.stmtclass.arraytypetraitexpr.md"
        },
        {
          "title": "StmtClass.AsTypeExpr",
          "path": "cppsharp.ast.stmtclass.astypeexpr.md"
        },
        {
          "title": "StmtClass.AtomicExpr",
          "path": "cppsharp.ast.stmtclass.atomicexpr.md"
        },
        {
          "title": "StmtClass.BinaryOperator",
          "path": "cppsharp.ast.stmtclass.binaryoperator.md"
        },
        {
          "title": "StmtClass.CompoundAssignOperator",
          "path": "cppsharp.ast.stmtclass.compoundassignoperator.md"
        },
        {
          "title": "StmtClass.BlockExpr",
          "path": "cppsharp.ast.stmtclass.blockexpr.md"
        },
        {
          "title": "StmtClass.CXXBindTemporaryExpr",
          "path": "cppsharp.ast.stmtclass.cxxbindtemporaryexpr.md"
        },
        {
          "title": "StmtClass.CXXBoolLiteralExpr",
          "path": "cppsharp.ast.stmtclass.cxxboolliteralexpr.md"
        },
        {
          "title": "StmtClass.CXXConstructExpr",
          "path": "cppsharp.ast.stmtclass.cxxconstructexpr.md"
        },
        {
          "title": "StmtClass.CXXTemporaryObjectExpr",
          "path": "cppsharp.ast.stmtclass.cxxtemporaryobjectexpr.md"
        },
        {
          "title": "StmtClass.CXXDefaultArgExpr",
          "path": "cppsharp.ast.stmtclass.cxxdefaultargexpr.md"
        },
        {
          "title": "StmtClass.CXXDefaultInitExpr",
          "path": "cppsharp.ast.stmtclass.cxxdefaultinitexpr.md"
        },
        {
          "title": "StmtClass.CXXDeleteExpr",
          "path": "cppsharp.ast.stmtclass.cxxdeleteexpr.md"
        },
        {
          "title": "StmtClass.CXXDependentScopeMemberExpr",
          "path": "cppsharp.ast.stmtclass.cxxdependentscopememberexpr.md"
        },
        {
          "title": "StmtClass.CXXFoldExpr",
          "path": "cppsharp.ast.stmtclass.cxxfoldexpr.md"
        },
        {
          "title": "StmtClass.CXXInheritedCtorInitExpr",
          "path": "cppsharp.ast.stmtclass.cxxinheritedctorinitexpr.md"
        },
        {
          "title": "StmtClass.CXXNewExpr",
          "path": "cppsharp.ast.stmtclass.cxxnewexpr.md"
        },
        {
          "title": "StmtClass.CXXNoexceptExpr",
          "path": "cppsharp.ast.stmtclass.cxxnoexceptexpr.md"
        },
        {
          "title": "StmtClass.CXXNullPtrLiteralExpr",
          "path": "cppsharp.ast.stmtclass.cxxnullptrliteralexpr.md"
        },
        {
          "title": "StmtClass.CXXPseudoDestructorExpr",
          "path": "cppsharp.ast.stmtclass.cxxpseudodestructorexpr.md"
        },
        {
          "title": "StmtClass.CXXScalarValueInitExpr",
          "path": "cppsharp.ast.stmtclass.cxxscalarvalueinitexpr.md"
        },
        {
          "title": "StmtClass.CXXStdInitializerListExpr",
          "path": "cppsharp.ast.stmtclass.cxxstdinitializerlistexpr.md"
        },
        {
          "title": "StmtClass.CXXThisExpr",
          "path": "cppsharp.ast.stmtclass.cxxthisexpr.md"
        },
        {
          "title": "StmtClass.CXXThrowExpr",
          "path": "cppsharp.ast.stmtclass.cxxthrowexpr.md"
        },
        {
          "title": "StmtClass.CXXTypeidExpr",
          "path": "cppsharp.ast.stmtclass.cxxtypeidexpr.md"
        },
        {
          "title": "StmtClass.CXXUnresolvedConstructExpr",
          "path": "cppsharp.ast.stmtclass.cxxunresolvedconstructexpr.md"
        },
        {
          "title": "StmtClass.CXXUuidofExpr",
          "path": "cppsharp.ast.stmtclass.cxxuuidofexpr.md"
        },
        {
          "title": "StmtClass.CallExpr",
          "path": "cppsharp.ast.stmtclass.callexpr.md"
        },
        {
          "title": "StmtClass.CUDAKernelCallExpr",
          "path": "cppsharp.ast.stmtclass.cudakernelcallexpr.md"
        },
        {
          "title": "StmtClass.CXXMemberCallExpr",
          "path": "cppsharp.ast.stmtclass.cxxmembercallexpr.md"
        },
        {
          "title": "StmtClass.CXXOperatorCallExpr",
          "path": "cppsharp.ast.stmtclass.cxxoperatorcallexpr.md"
        },
        {
          "title": "StmtClass.UserDefinedLiteral",
          "path": "cppsharp.ast.stmtclass.userdefinedliteral.md"
        },
        {
          "title": "StmtClass.CStyleCastExpr",
          "path": "cppsharp.ast.stmtclass.cstylecastexpr.md"
        },
        {
          "title": "StmtClass.CXXFunctionalCastExpr",
          "path": "cppsharp.ast.stmtclass.cxxfunctionalcastexpr.md"
        },
        {
          "title": "StmtClass.CXXConstCastExpr",
          "path": "cppsharp.ast.stmtclass.cxxconstcastexpr.md"
        },
        {
          "title": "StmtClass.CXXDynamicCastExpr",
          "path": "cppsharp.ast.stmtclass.cxxdynamiccastexpr.md"
        },
        {
          "title": "StmtClass.CXXReinterpretCastExpr",
          "path": "cppsharp.ast.stmtclass.cxxreinterpretcastexpr.md"
        },
        {
          "title": "StmtClass.CXXStaticCastExpr",
          "path": "cppsharp.ast.stmtclass.cxxstaticcastexpr.md"
        },
        {
          "title": "StmtClass.ImplicitCastExpr",
          "path": "cppsharp.ast.stmtclass.implicitcastexpr.md"
        },
        {
          "title": "StmtClass.CharacterLiteral",
          "path": "cppsharp.ast.stmtclass.characterliteral.md"
        },
        {
          "title": "StmtClass.ChooseExpr",
          "path": "cppsharp.ast.stmtclass.chooseexpr.md"
        },
        {
          "title": "StmtClass.CompoundLiteralExpr",
          "path": "cppsharp.ast.stmtclass.compoundliteralexpr.md"
        },
        {
          "title": "StmtClass.ConvertVectorExpr",
          "path": "cppsharp.ast.stmtclass.convertvectorexpr.md"
        },
        {
          "title": "StmtClass.CoawaitExpr",
          "path": "cppsharp.ast.stmtclass.coawaitexpr.md"
        },
        {
          "title": "StmtClass.CoyieldExpr",
          "path": "cppsharp.ast.stmtclass.coyieldexpr.md"
        },
        {
          "title": "StmtClass.DeclRefExpr",
          "path": "cppsharp.ast.stmtclass.declrefexpr.md"
        },
        {
          "title": "StmtClass.DependentCoawaitExpr",
          "path": "cppsharp.ast.stmtclass.dependentcoawaitexpr.md"
        },
        {
          "title": "StmtClass.DependentScopeDeclRefExpr",
          "path": "cppsharp.ast.stmtclass.dependentscopedeclrefexpr.md"
        },
        {
          "title": "StmtClass.DesignatedInitExpr",
          "path": "cppsharp.ast.stmtclass.designatedinitexpr.md"
        },
        {
          "title": "StmtClass.DesignatedInitUpdateExpr",
          "path": "cppsharp.ast.stmtclass.designatedinitupdateexpr.md"
        },
        {
          "title": "StmtClass.ExpressionTraitExpr",
          "path": "cppsharp.ast.stmtclass.expressiontraitexpr.md"
        },
        {
          "title": "StmtClass.ExtVectorElementExpr",
          "path": "cppsharp.ast.stmtclass.extvectorelementexpr.md"
        },
        {
          "title": "StmtClass.FixedPointLiteral",
          "path": "cppsharp.ast.stmtclass.fixedpointliteral.md"
        },
        {
          "title": "StmtClass.FloatingLiteral",
          "path": "cppsharp.ast.stmtclass.floatingliteral.md"
        },
        {
          "title": "StmtClass.ConstantExpr",
          "path": "cppsharp.ast.stmtclass.constantexpr.md"
        },
        {
          "title": "StmtClass.ExprWithCleanups",
          "path": "cppsharp.ast.stmtclass.exprwithcleanups.md"
        },
        {
          "title": "StmtClass.FunctionParmPackExpr",
          "path": "cppsharp.ast.stmtclass.functionparmpackexpr.md"
        },
        {
          "title": "StmtClass.GNUNullExpr",
          "path": "cppsharp.ast.stmtclass.gnunullexpr.md"
        },
        {
          "title": "StmtClass.GenericSelectionExpr",
          "path": "cppsharp.ast.stmtclass.genericselectionexpr.md"
        },
        {
          "title": "StmtClass.ImaginaryLiteral",
          "path": "cppsharp.ast.stmtclass.imaginaryliteral.md"
        },
        {
          "title": "StmtClass.ImplicitValueInitExpr",
          "path": "cppsharp.ast.stmtclass.implicitvalueinitexpr.md"
        },
        {
          "title": "StmtClass.InitListExpr",
          "path": "cppsharp.ast.stmtclass.initlistexpr.md"
        },
        {
          "title": "StmtClass.IntegerLiteral",
          "path": "cppsharp.ast.stmtclass.integerliteral.md"
        },
        {
          "title": "StmtClass.LambdaExpr",
          "path": "cppsharp.ast.stmtclass.lambdaexpr.md"
        },
        {
          "title": "StmtClass.MSPropertyRefExpr",
          "path": "cppsharp.ast.stmtclass.mspropertyrefexpr.md"
        },
        {
          "title": "StmtClass.MSPropertySubscriptExpr",
          "path": "cppsharp.ast.stmtclass.mspropertysubscriptexpr.md"
        },
        {
          "title": "StmtClass.MaterializeTemporaryExpr",
          "path": "cppsharp.ast.stmtclass.materializetemporaryexpr.md"
        },
        {
          "title": "StmtClass.MemberExpr",
          "path": "cppsharp.ast.stmtclass.memberexpr.md"
        },
        {
          "title": "StmtClass.NoInitExpr",
          "path": "cppsharp.ast.stmtclass.noinitexpr.md"
        },
        {
          "title": "StmtClass.OffsetOfExpr",
          "path": "cppsharp.ast.stmtclass.offsetofexpr.md"
        },
        {
          "title": "StmtClass.OpaqueValueExpr",
          "path": "cppsharp.ast.stmtclass.opaquevalueexpr.md"
        },
        {
          "title": "StmtClass.UnresolvedLookupExpr",
          "path": "cppsharp.ast.stmtclass.unresolvedlookupexpr.md"
        },
        {
          "title": "StmtClass.UnresolvedMemberExpr",
          "path": "cppsharp.ast.stmtclass.unresolvedmemberexpr.md"
        },
        {
          "title": "StmtClass.PackExpansionExpr",
          "path": "cppsharp.ast.stmtclass.packexpansionexpr.md"
        },
        {
          "title": "StmtClass.ParenExpr",
          "path": "cppsharp.ast.stmtclass.parenexpr.md"
        },
        {
          "title": "StmtClass.ParenListExpr",
          "path": "cppsharp.ast.stmtclass.parenlistexpr.md"
        },
        {
          "title": "StmtClass.PredefinedExpr",
          "path": "cppsharp.ast.stmtclass.predefinedexpr.md"
        },
        {
          "title": "StmtClass.PseudoObjectExpr",
          "path": "cppsharp.ast.stmtclass.pseudoobjectexpr.md"
        },
        {
          "title": "StmtClass.ShuffleVectorExpr",
          "path": "cppsharp.ast.stmtclass.shufflevectorexpr.md"
        },
        {
          "title": "StmtClass.SizeOfPackExpr",
          "path": "cppsharp.ast.stmtclass.sizeofpackexpr.md"
        },
        {
          "title": "StmtClass.StmtExpr",
          "path": "cppsharp.ast.stmtclass.stmtexpr.md"
        },
        {
          "title": "StmtClass.StringLiteral",
          "path": "cppsharp.ast.stmtclass.stringliteral.md"
        },
        {
          "title": "StmtClass.SubstNonTypeTemplateParmExpr",
          "path": "cppsharp.ast.stmtclass.substnontypetemplateparmexpr.md"
        },
        {
          "title": "StmtClass.SubstNonTypeTemplateParmPackExpr",
          "path": "cppsharp.ast.stmtclass.substnontypetemplateparmpackexpr.md"
        },
        {
          "title": "StmtClass.TypeTraitExpr",
          "path": "cppsharp.ast.stmtclass.typetraitexpr.md"
        },
        {
          "title": "StmtClass.TypoExpr",
          "path": "cppsharp.ast.stmtclass.typoexpr.md"
        },
        {
          "title": "StmtClass.UnaryExprOrTypeTraitExpr",
          "path": "cppsharp.ast.stmtclass.unaryexprortypetraitexpr.md"
        },
        {
          "title": "StmtClass.UnaryOperator",
          "path": "cppsharp.ast.stmtclass.unaryoperator.md"
        },
        {
          "title": "StmtClass.VAArgExpr",
          "path": "cppsharp.ast.stmtclass.vaargexpr.md"
        },
        {
          "title": "StmtClass.ForStmt",
          "path": "cppsharp.ast.stmtclass.forstmt.md"
        },
        {
          "title": "StmtClass.GotoStmt",
          "path": "cppsharp.ast.stmtclass.gotostmt.md"
        },
        {
          "title": "StmtClass.IfStmt",
          "path": "cppsharp.ast.stmtclass.ifstmt.md"
        },
        {
          "title": "StmtClass.IndirectGotoStmt",
          "path": "cppsharp.ast.stmtclass.indirectgotostmt.md"
        },
        {
          "title": "StmtClass.LabelStmt",
          "path": "cppsharp.ast.stmtclass.labelstmt.md"
        },
        {
          "title": "StmtClass.MSDependentExistsStmt",
          "path": "cppsharp.ast.stmtclass.msdependentexistsstmt.md"
        },
        {
          "title": "StmtClass.NullStmt",
          "path": "cppsharp.ast.stmtclass.nullstmt.md"
        },
        {
          "title": "StmtClass.ReturnStmt",
          "path": "cppsharp.ast.stmtclass.returnstmt.md"
        },
        {
          "title": "StmtClass.SEHExceptStmt",
          "path": "cppsharp.ast.stmtclass.sehexceptstmt.md"
        },
        {
          "title": "StmtClass.SEHFinallyStmt",
          "path": "cppsharp.ast.stmtclass.sehfinallystmt.md"
        },
        {
          "title": "StmtClass.SEHLeaveStmt",
          "path": "cppsharp.ast.stmtclass.sehleavestmt.md"
        },
        {
          "title": "StmtClass.SEHTryStmt",
          "path": "cppsharp.ast.stmtclass.sehtrystmt.md"
        },
        {
          "title": "StmtClass.CaseStmt",
          "path": "cppsharp.ast.stmtclass.casestmt.md"
        },
        {
          "title": "StmtClass.DefaultStmt",
          "path": "cppsharp.ast.stmtclass.defaultstmt.md"
        },
        {
          "title": "StmtClass.SwitchStmt",
          "path": "cppsharp.ast.stmtclass.switchstmt.md"
        },
        {
          "title": "StmtClass.WhileStmt",
          "path": "cppsharp.ast.stmtclass.whilestmt.md"
        },
        {
          "title": "StmtClass",
          "path": "cppsharp.ast.stmtclass.md"
        },
        {
          "title": "Stmt()",
          "path": "cppsharp.ast.stmt..ctor.md"
        },
        {
          "title": "Stmt.SourceRange",
          "path": "cppsharp.ast.stmt.sourcerange.md"
        },
        {
          "title": "Stmt.BeginLoc",
          "path": "cppsharp.ast.stmt.beginloc.md"
        },
        {
          "title": "Stmt.EndLoc",
          "path": "cppsharp.ast.stmt.endloc.md"
        },
        {
          "title": "Stmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.stmt.visit.md"
        },
        {
          "title": "Stmt",
          "path": "cppsharp.ast.stmt.md"
        },
        {
          "title": "DeclStmt()",
          "path": "cppsharp.ast.declstmt..ctor.md"
        },
        {
          "title": "DeclStmt.Decls",
          "path": "cppsharp.ast.declstmt.decls.md"
        },
        {
          "title": "DeclStmt.IsSingleDecl",
          "path": "cppsharp.ast.declstmt.issingledecl.md"
        },
        {
          "title": "DeclStmt.SingleDecl",
          "path": "cppsharp.ast.declstmt.singledecl.md"
        },
        {
          "title": "DeclStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.declstmt.visit.md"
        },
        {
          "title": "DeclStmt",
          "path": "cppsharp.ast.declstmt.md"
        },
        {
          "title": "NullStmt()",
          "path": "cppsharp.ast.nullstmt..ctor.md"
        },
        {
          "title": "NullStmt.SemiLoc",
          "path": "cppsharp.ast.nullstmt.semiloc.md"
        },
        {
          "title": "NullStmt.HasLeadingEmptyMacro",
          "path": "cppsharp.ast.nullstmt.hasleadingemptymacro.md"
        },
        {
          "title": "NullStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.nullstmt.visit.md"
        },
        {
          "title": "NullStmt",
          "path": "cppsharp.ast.nullstmt.md"
        },
        {
          "title": "CompoundStmt()",
          "path": "cppsharp.ast.compoundstmt..ctor.md"
        },
        {
          "title": "CompoundStmt.Body",
          "path": "cppsharp.ast.compoundstmt.body.md"
        },
        {
          "title": "CompoundStmt.BodyEmpty",
          "path": "cppsharp.ast.compoundstmt.bodyempty.md"
        },
        {
          "title": "CompoundStmt.Size",
          "path": "cppsharp.ast.compoundstmt.size.md"
        },
        {
          "title": "CompoundStmt.BodyFront",
          "path": "cppsharp.ast.compoundstmt.bodyfront.md"
        },
        {
          "title": "CompoundStmt.BodyBack",
          "path": "cppsharp.ast.compoundstmt.bodyback.md"
        },
        {
          "title": "CompoundStmt.LBracLoc",
          "path": "cppsharp.ast.compoundstmt.lbracloc.md"
        },
        {
          "title": "CompoundStmt.RBracLoc",
          "path": "cppsharp.ast.compoundstmt.rbracloc.md"
        },
        {
          "title": "CompoundStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.compoundstmt.visit.md"
        },
        {
          "title": "CompoundStmt",
          "path": "cppsharp.ast.compoundstmt.md"
        },
        {
          "title": "SwitchCase()",
          "path": "cppsharp.ast.switchcase..ctor.md"
        },
        {
          "title": "SwitchCase.KeywordLoc",
          "path": "cppsharp.ast.switchcase.keywordloc.md"
        },
        {
          "title": "SwitchCase.ColonLoc",
          "path": "cppsharp.ast.switchcase.colonloc.md"
        },
        {
          "title": "SwitchCase.SubStmt",
          "path": "cppsharp.ast.switchcase.substmt.md"
        },
        {
          "title": "SwitchCase",
          "path": "cppsharp.ast.switchcase.md"
        },
        {
          "title": "CaseStmt()",
          "path": "cppsharp.ast.casestmt..ctor.md"
        },
        {
          "title": "CaseStmt.CaseLoc",
          "path": "cppsharp.ast.casestmt.caseloc.md"
        },
        {
          "title": "CaseStmt.EllipsisLoc",
          "path": "cppsharp.ast.casestmt.ellipsisloc.md"
        },
        {
          "title": "CaseStmt.LHS",
          "path": "cppsharp.ast.casestmt.lhs.md"
        },
        {
          "title": "CaseStmt.RHS",
          "path": "cppsharp.ast.casestmt.rhs.md"
        },
        {
          "title": "CaseStmt.CaseStmtIsGNURange",
          "path": "cppsharp.ast.casestmt.casestmtisgnurange.md"
        },
        {
          "title": "CaseStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.casestmt.visit.md"
        },
        {
          "title": "CaseStmt",
          "path": "cppsharp.ast.casestmt.md"
        },
        {
          "title": "DefaultStmt()",
          "path": "cppsharp.ast.defaultstmt..ctor.md"
        },
        {
          "title": "DefaultStmt.DefaultLoc",
          "path": "cppsharp.ast.defaultstmt.defaultloc.md"
        },
        {
          "title": "DefaultStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.defaultstmt.visit.md"
        },
        {
          "title": "DefaultStmt",
          "path": "cppsharp.ast.defaultstmt.md"
        },
        {
          "title": "LabelStmt()",
          "path": "cppsharp.ast.labelstmt..ctor.md"
        },
        {
          "title": "LabelStmt.IdentLoc",
          "path": "cppsharp.ast.labelstmt.identloc.md"
        },
        {
          "title": "LabelStmt.SubStmt",
          "path": "cppsharp.ast.labelstmt.substmt.md"
        },
        {
          "title": "LabelStmt.Name",
          "path": "cppsharp.ast.labelstmt.name.md"
        },
        {
          "title": "LabelStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.labelstmt.visit.md"
        },
        {
          "title": "LabelStmt",
          "path": "cppsharp.ast.labelstmt.md"
        },
        {
          "title": "AttributedStmt()",
          "path": "cppsharp.ast.attributedstmt..ctor.md"
        },
        {
          "title": "AttributedStmt.AttrLoc",
          "path": "cppsharp.ast.attributedstmt.attrloc.md"
        },
        {
          "title": "AttributedStmt.SubStmt",
          "path": "cppsharp.ast.attributedstmt.substmt.md"
        },
        {
          "title": "AttributedStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.attributedstmt.visit.md"
        },
        {
          "title": "AttributedStmt",
          "path": "cppsharp.ast.attributedstmt.md"
        },
        {
          "title": "IfStmt()",
          "path": "cppsharp.ast.ifstmt..ctor.md"
        },
        {
          "title": "IfStmt.Cond",
          "path": "cppsharp.ast.ifstmt.cond.md"
        },
        {
          "title": "IfStmt.Then",
          "path": "cppsharp.ast.ifstmt.then.md"
        },
        {
          "title": "IfStmt.Else",
          "path": "cppsharp.ast.ifstmt.else.md"
        },
        {
          "title": "IfStmt.Init",
          "path": "cppsharp.ast.ifstmt.init.md"
        },
        {
          "title": "IfStmt.IfLoc",
          "path": "cppsharp.ast.ifstmt.ifloc.md"
        },
        {
          "title": "IfStmt.ElseLoc",
          "path": "cppsharp.ast.ifstmt.elseloc.md"
        },
        {
          "title": "IfStmt.Constexpr",
          "path": "cppsharp.ast.ifstmt.constexpr.md"
        },
        {
          "title": "IfStmt.HasInitStorage",
          "path": "cppsharp.ast.ifstmt.hasinitstorage.md"
        },
        {
          "title": "IfStmt.HasVarStorage",
          "path": "cppsharp.ast.ifstmt.hasvarstorage.md"
        },
        {
          "title": "IfStmt.HasElseStorage",
          "path": "cppsharp.ast.ifstmt.haselsestorage.md"
        },
        {
          "title": "IfStmt.ConditionVariableDeclStmt",
          "path": "cppsharp.ast.ifstmt.conditionvariabledeclstmt.md"
        },
        {
          "title": "IfStmt.IsObjCAvailabilityCheck",
          "path": "cppsharp.ast.ifstmt.isobjcavailabilitycheck.md"
        },
        {
          "title": "IfStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.ifstmt.visit.md"
        },
        {
          "title": "IfStmt",
          "path": "cppsharp.ast.ifstmt.md"
        },
        {
          "title": "SwitchStmt()",
          "path": "cppsharp.ast.switchstmt..ctor.md"
        },
        {
          "title": "SwitchStmt.Cond",
          "path": "cppsharp.ast.switchstmt.cond.md"
        },
        {
          "title": "SwitchStmt.Body",
          "path": "cppsharp.ast.switchstmt.body.md"
        },
        {
          "title": "SwitchStmt.Init",
          "path": "cppsharp.ast.switchstmt.init.md"
        },
        {
          "title": "SwitchStmt.SwitchLoc",
          "path": "cppsharp.ast.switchstmt.switchloc.md"
        },
        {
          "title": "SwitchStmt.HasInitStorage",
          "path": "cppsharp.ast.switchstmt.hasinitstorage.md"
        },
        {
          "title": "SwitchStmt.HasVarStorage",
          "path": "cppsharp.ast.switchstmt.hasvarstorage.md"
        },
        {
          "title": "SwitchStmt.ConditionVariableDeclStmt",
          "path": "cppsharp.ast.switchstmt.conditionvariabledeclstmt.md"
        },
        {
          "title": "SwitchStmt.IsAllEnumCasesCovered",
          "path": "cppsharp.ast.switchstmt.isallenumcasescovered.md"
        },
        {
          "title": "SwitchStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.switchstmt.visit.md"
        },
        {
          "title": "SwitchStmt",
          "path": "cppsharp.ast.switchstmt.md"
        },
        {
          "title": "WhileStmt()",
          "path": "cppsharp.ast.whilestmt..ctor.md"
        },
        {
          "title": "WhileStmt.Cond",
          "path": "cppsharp.ast.whilestmt.cond.md"
        },
        {
          "title": "WhileStmt.Body",
          "path": "cppsharp.ast.whilestmt.body.md"
        },
        {
          "title": "WhileStmt.WhileLoc",
          "path": "cppsharp.ast.whilestmt.whileloc.md"
        },
        {
          "title": "WhileStmt.HasVarStorage",
          "path": "cppsharp.ast.whilestmt.hasvarstorage.md"
        },
        {
          "title": "WhileStmt.ConditionVariableDeclStmt",
          "path": "cppsharp.ast.whilestmt.conditionvariabledeclstmt.md"
        },
        {
          "title": "WhileStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.whilestmt.visit.md"
        },
        {
          "title": "WhileStmt",
          "path": "cppsharp.ast.whilestmt.md"
        },
        {
          "title": "DoStmt()",
          "path": "cppsharp.ast.dostmt..ctor.md"
        },
        {
          "title": "DoStmt.Cond",
          "path": "cppsharp.ast.dostmt.cond.md"
        },
        {
          "title": "DoStmt.Body",
          "path": "cppsharp.ast.dostmt.body.md"
        },
        {
          "title": "DoStmt.DoLoc",
          "path": "cppsharp.ast.dostmt.doloc.md"
        },
        {
          "title": "DoStmt.WhileLoc",
          "path": "cppsharp.ast.dostmt.whileloc.md"
        },
        {
          "title": "DoStmt.RParenLoc",
          "path": "cppsharp.ast.dostmt.rparenloc.md"
        },
        {
          "title": "DoStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.dostmt.visit.md"
        },
        {
          "title": "DoStmt",
          "path": "cppsharp.ast.dostmt.md"
        },
        {
          "title": "ForStmt()",
          "path": "cppsharp.ast.forstmt..ctor.md"
        },
        {
          "title": "ForStmt.Init",
          "path": "cppsharp.ast.forstmt.init.md"
        },
        {
          "title": "ForStmt.Cond",
          "path": "cppsharp.ast.forstmt.cond.md"
        },
        {
          "title": "ForStmt.Inc",
          "path": "cppsharp.ast.forstmt.inc.md"
        },
        {
          "title": "ForStmt.Body",
          "path": "cppsharp.ast.forstmt.body.md"
        },
        {
          "title": "ForStmt.ForLoc",
          "path": "cppsharp.ast.forstmt.forloc.md"
        },
        {
          "title": "ForStmt.LParenLoc",
          "path": "cppsharp.ast.forstmt.lparenloc.md"
        },
        {
          "title": "ForStmt.RParenLoc",
          "path": "cppsharp.ast.forstmt.rparenloc.md"
        },
        {
          "title": "ForStmt.ConditionVariableDeclStmt",
          "path": "cppsharp.ast.forstmt.conditionvariabledeclstmt.md"
        },
        {
          "title": "ForStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.forstmt.visit.md"
        },
        {
          "title": "ForStmt",
          "path": "cppsharp.ast.forstmt.md"
        },
        {
          "title": "GotoStmt()",
          "path": "cppsharp.ast.gotostmt..ctor.md"
        },
        {
          "title": "GotoStmt.GotoLoc",
          "path": "cppsharp.ast.gotostmt.gotoloc.md"
        },
        {
          "title": "GotoStmt.LabelLoc",
          "path": "cppsharp.ast.gotostmt.labelloc.md"
        },
        {
          "title": "GotoStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.gotostmt.visit.md"
        },
        {
          "title": "GotoStmt",
          "path": "cppsharp.ast.gotostmt.md"
        },
        {
          "title": "IndirectGotoStmt()",
          "path": "cppsharp.ast.indirectgotostmt..ctor.md"
        },
        {
          "title": "IndirectGotoStmt.GotoLoc",
          "path": "cppsharp.ast.indirectgotostmt.gotoloc.md"
        },
        {
          "title": "IndirectGotoStmt.StarLoc",
          "path": "cppsharp.ast.indirectgotostmt.starloc.md"
        },
        {
          "title": "IndirectGotoStmt.Target",
          "path": "cppsharp.ast.indirectgotostmt.target.md"
        },
        {
          "title": "IndirectGotoStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.indirectgotostmt.visit.md"
        },
        {
          "title": "IndirectGotoStmt",
          "path": "cppsharp.ast.indirectgotostmt.md"
        },
        {
          "title": "ContinueStmt()",
          "path": "cppsharp.ast.continuestmt..ctor.md"
        },
        {
          "title": "ContinueStmt.ContinueLoc",
          "path": "cppsharp.ast.continuestmt.continueloc.md"
        },
        {
          "title": "ContinueStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.continuestmt.visit.md"
        },
        {
          "title": "ContinueStmt",
          "path": "cppsharp.ast.continuestmt.md"
        },
        {
          "title": "BreakStmt()",
          "path": "cppsharp.ast.breakstmt..ctor.md"
        },
        {
          "title": "BreakStmt.BreakLoc",
          "path": "cppsharp.ast.breakstmt.breakloc.md"
        },
        {
          "title": "BreakStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.breakstmt.visit.md"
        },
        {
          "title": "BreakStmt",
          "path": "cppsharp.ast.breakstmt.md"
        },
        {
          "title": "ReturnStmt()",
          "path": "cppsharp.ast.returnstmt..ctor.md"
        },
        {
          "title": "ReturnStmt.RetValue",
          "path": "cppsharp.ast.returnstmt.retvalue.md"
        },
        {
          "title": "ReturnStmt.ReturnLoc",
          "path": "cppsharp.ast.returnstmt.returnloc.md"
        },
        {
          "title": "ReturnStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.returnstmt.visit.md"
        },
        {
          "title": "ReturnStmt",
          "path": "cppsharp.ast.returnstmt.md"
        },
        {
          "title": "AsmStmt()",
          "path": "cppsharp.ast.asmstmt..ctor.md"
        },
        {
          "title": "AsmStmt.Inputs",
          "path": "cppsharp.ast.asmstmt.inputs.md"
        },
        {
          "title": "AsmStmt.Outputs",
          "path": "cppsharp.ast.asmstmt.outputs.md"
        },
        {
          "title": "AsmStmt.AsmLoc",
          "path": "cppsharp.ast.asmstmt.asmloc.md"
        },
        {
          "title": "AsmStmt.Simple",
          "path": "cppsharp.ast.asmstmt.simple.md"
        },
        {
          "title": "AsmStmt.Volatile",
          "path": "cppsharp.ast.asmstmt.volatile.md"
        },
        {
          "title": "AsmStmt.NumOutputs",
          "path": "cppsharp.ast.asmstmt.numoutputs.md"
        },
        {
          "title": "AsmStmt.NumPlusOperands",
          "path": "cppsharp.ast.asmstmt.numplusoperands.md"
        },
        {
          "title": "AsmStmt.NumInputs",
          "path": "cppsharp.ast.asmstmt.numinputs.md"
        },
        {
          "title": "AsmStmt.NumClobbers",
          "path": "cppsharp.ast.asmstmt.numclobbers.md"
        },
        {
          "title": "AsmStmt",
          "path": "cppsharp.ast.asmstmt.md"
        },
        {
          "title": "Kind.String",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece.kind.string.md"
        },
        {
          "title": "Kind.Operand",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece.kind.operand.md"
        },
        {
          "title": "Kind",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece.kind.md"
        },
        {
          "title": "AsmStringPiece()",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece..ctor.md"
        },
        {
          "title": "AsmStringPiece.IsString",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece.isstring.md"
        },
        {
          "title": "AsmStringPiece.IsOperand",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece.isoperand.md"
        },
        {
          "title": "AsmStringPiece.String",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece.string.md"
        },
        {
          "title": "AsmStringPiece.OperandNo",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece.operandno.md"
        },
        {
          "title": "AsmStringPiece.Modifier",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece.modifier.md"
        },
        {
          "title": "AsmStringPiece",
          "path": "cppsharp.ast.gccasmstmt.asmstringpiece.md"
        },
        {
          "title": "GCCAsmStmt()",
          "path": "cppsharp.ast.gccasmstmt..ctor.md"
        },
        {
          "title": "GCCAsmStmt.RParenLoc",
          "path": "cppsharp.ast.gccasmstmt.rparenloc.md"
        },
        {
          "title": "GCCAsmStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.gccasmstmt.visit.md"
        },
        {
          "title": "GCCAsmStmt",
          "path": "cppsharp.ast.gccasmstmt.md"
        },
        {
          "title": "MSAsmStmt()",
          "path": "cppsharp.ast.msasmstmt..ctor.md"
        },
        {
          "title": "MSAsmStmt.LBraceLoc",
          "path": "cppsharp.ast.msasmstmt.lbraceloc.md"
        },
        {
          "title": "MSAsmStmt.HasBraces",
          "path": "cppsharp.ast.msasmstmt.hasbraces.md"
        },
        {
          "title": "MSAsmStmt.NumAsmToks",
          "path": "cppsharp.ast.msasmstmt.numasmtoks.md"
        },
        {
          "title": "MSAsmStmt.AsmString",
          "path": "cppsharp.ast.msasmstmt.asmstring.md"
        },
        {
          "title": "MSAsmStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.msasmstmt.visit.md"
        },
        {
          "title": "MSAsmStmt",
          "path": "cppsharp.ast.msasmstmt.md"
        },
        {
          "title": "SEHExceptStmt()",
          "path": "cppsharp.ast.sehexceptstmt..ctor.md"
        },
        {
          "title": "SEHExceptStmt.ExceptLoc",
          "path": "cppsharp.ast.sehexceptstmt.exceptloc.md"
        },
        {
          "title": "SEHExceptStmt.FilterExpr",
          "path": "cppsharp.ast.sehexceptstmt.filterexpr.md"
        },
        {
          "title": "SEHExceptStmt.Block",
          "path": "cppsharp.ast.sehexceptstmt.block.md"
        },
        {
          "title": "SEHExceptStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.sehexceptstmt.visit.md"
        },
        {
          "title": "SEHExceptStmt",
          "path": "cppsharp.ast.sehexceptstmt.md"
        },
        {
          "title": "SEHFinallyStmt()",
          "path": "cppsharp.ast.sehfinallystmt..ctor.md"
        },
        {
          "title": "SEHFinallyStmt.FinallyLoc",
          "path": "cppsharp.ast.sehfinallystmt.finallyloc.md"
        },
        {
          "title": "SEHFinallyStmt.Block",
          "path": "cppsharp.ast.sehfinallystmt.block.md"
        },
        {
          "title": "SEHFinallyStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.sehfinallystmt.visit.md"
        },
        {
          "title": "SEHFinallyStmt",
          "path": "cppsharp.ast.sehfinallystmt.md"
        },
        {
          "title": "SEHTryStmt()",
          "path": "cppsharp.ast.sehtrystmt..ctor.md"
        },
        {
          "title": "SEHTryStmt.TryLoc",
          "path": "cppsharp.ast.sehtrystmt.tryloc.md"
        },
        {
          "title": "SEHTryStmt.IsCXXTry",
          "path": "cppsharp.ast.sehtrystmt.iscxxtry.md"
        },
        {
          "title": "SEHTryStmt.TryBlock",
          "path": "cppsharp.ast.sehtrystmt.tryblock.md"
        },
        {
          "title": "SEHTryStmt.Handler",
          "path": "cppsharp.ast.sehtrystmt.handler.md"
        },
        {
          "title": "SEHTryStmt.ExceptHandler",
          "path": "cppsharp.ast.sehtrystmt.excepthandler.md"
        },
        {
          "title": "SEHTryStmt.FinallyHandler",
          "path": "cppsharp.ast.sehtrystmt.finallyhandler.md"
        },
        {
          "title": "SEHTryStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.sehtrystmt.visit.md"
        },
        {
          "title": "SEHTryStmt",
          "path": "cppsharp.ast.sehtrystmt.md"
        },
        {
          "title": "SEHLeaveStmt()",
          "path": "cppsharp.ast.sehleavestmt..ctor.md"
        },
        {
          "title": "SEHLeaveStmt.LeaveLoc",
          "path": "cppsharp.ast.sehleavestmt.leaveloc.md"
        },
        {
          "title": "SEHLeaveStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.sehleavestmt.visit.md"
        },
        {
          "title": "SEHLeaveStmt",
          "path": "cppsharp.ast.sehleavestmt.md"
        },
        {
          "title": "VariableCaptureKind.This",
          "path": "cppsharp.ast.capturedstmt.variablecapturekind.this.md"
        },
        {
          "title": "VariableCaptureKind.ByRef",
          "path": "cppsharp.ast.capturedstmt.variablecapturekind.byref.md"
        },
        {
          "title": "VariableCaptureKind.ByCopy",
          "path": "cppsharp.ast.capturedstmt.variablecapturekind.bycopy.md"
        },
        {
          "title": "VariableCaptureKind.VLAType",
          "path": "cppsharp.ast.capturedstmt.variablecapturekind.vlatype.md"
        },
        {
          "title": "VariableCaptureKind",
          "path": "cppsharp.ast.capturedstmt.variablecapturekind.md"
        },
        {
          "title": "Capture()",
          "path": "cppsharp.ast.capturedstmt.capture..ctor.md"
        },
        {
          "title": "Capture.CaptureKind",
          "path": "cppsharp.ast.capturedstmt.capture.capturekind.md"
        },
        {
          "title": "Capture.Location",
          "path": "cppsharp.ast.capturedstmt.capture.location.md"
        },
        {
          "title": "Capture.CapturesThis",
          "path": "cppsharp.ast.capturedstmt.capture.capturesthis.md"
        },
        {
          "title": "Capture.CapturesVariable",
          "path": "cppsharp.ast.capturedstmt.capture.capturesvariable.md"
        },
        {
          "title": "Capture.CapturesVariableByCopy",
          "path": "cppsharp.ast.capturedstmt.capture.capturesvariablebycopy.md"
        },
        {
          "title": "Capture.CapturesVariableArrayType",
          "path": "cppsharp.ast.capturedstmt.capture.capturesvariablearraytype.md"
        },
        {
          "title": "Capture",
          "path": "cppsharp.ast.capturedstmt.capture.md"
        },
        {
          "title": "CapturedStmt()",
          "path": "cppsharp.ast.capturedstmt..ctor.md"
        },
        {
          "title": "CapturedStmt.CaptureInits",
          "path": "cppsharp.ast.capturedstmt.captureinits.md"
        },
        {
          "title": "CapturedStmt.capturedStmt",
          "path": "cppsharp.ast.capturedstmt.capturedstmt.md"
        },
        {
          "title": "CapturedStmt.CaptureSize",
          "path": "cppsharp.ast.capturedstmt.capturesize.md"
        },
        {
          "title": "CapturedStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.capturedstmt.visit.md"
        },
        {
          "title": "CapturedStmt",
          "path": "cppsharp.ast.capturedstmt.md"
        },
        {
          "title": "CXXCatchStmt()",
          "path": "cppsharp.ast.cxxcatchstmt..ctor.md"
        },
        {
          "title": "CXXCatchStmt.CatchLoc",
          "path": "cppsharp.ast.cxxcatchstmt.catchloc.md"
        },
        {
          "title": "CXXCatchStmt.CaughtType",
          "path": "cppsharp.ast.cxxcatchstmt.caughttype.md"
        },
        {
          "title": "CXXCatchStmt.HandlerBlock",
          "path": "cppsharp.ast.cxxcatchstmt.handlerblock.md"
        },
        {
          "title": "CXXCatchStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxcatchstmt.visit.md"
        },
        {
          "title": "CXXCatchStmt",
          "path": "cppsharp.ast.cxxcatchstmt.md"
        },
        {
          "title": "CXXTryStmt()",
          "path": "cppsharp.ast.cxxtrystmt..ctor.md"
        },
        {
          "title": "CXXTryStmt.TryLoc",
          "path": "cppsharp.ast.cxxtrystmt.tryloc.md"
        },
        {
          "title": "CXXTryStmt.TryBlock",
          "path": "cppsharp.ast.cxxtrystmt.tryblock.md"
        },
        {
          "title": "CXXTryStmt.NumHandlers",
          "path": "cppsharp.ast.cxxtrystmt.numhandlers.md"
        },
        {
          "title": "CXXTryStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxtrystmt.visit.md"
        },
        {
          "title": "CXXTryStmt",
          "path": "cppsharp.ast.cxxtrystmt.md"
        },
        {
          "title": "CXXForRangeStmt()",
          "path": "cppsharp.ast.cxxforrangestmt..ctor.md"
        },
        {
          "title": "CXXForRangeStmt.Init",
          "path": "cppsharp.ast.cxxforrangestmt.init.md"
        },
        {
          "title": "CXXForRangeStmt.RangeInit",
          "path": "cppsharp.ast.cxxforrangestmt.rangeinit.md"
        },
        {
          "title": "CXXForRangeStmt.Cond",
          "path": "cppsharp.ast.cxxforrangestmt.cond.md"
        },
        {
          "title": "CXXForRangeStmt.Inc",
          "path": "cppsharp.ast.cxxforrangestmt.inc.md"
        },
        {
          "title": "CXXForRangeStmt.Body",
          "path": "cppsharp.ast.cxxforrangestmt.body.md"
        },
        {
          "title": "CXXForRangeStmt.RangeStmt",
          "path": "cppsharp.ast.cxxforrangestmt.rangestmt.md"
        },
        {
          "title": "CXXForRangeStmt.BeginStmt",
          "path": "cppsharp.ast.cxxforrangestmt.beginstmt.md"
        },
        {
          "title": "CXXForRangeStmt.EndStmt",
          "path": "cppsharp.ast.cxxforrangestmt.endstmt.md"
        },
        {
          "title": "CXXForRangeStmt.LoopVarStmt",
          "path": "cppsharp.ast.cxxforrangestmt.loopvarstmt.md"
        },
        {
          "title": "CXXForRangeStmt.ForLoc",
          "path": "cppsharp.ast.cxxforrangestmt.forloc.md"
        },
        {
          "title": "CXXForRangeStmt.CoawaitLoc",
          "path": "cppsharp.ast.cxxforrangestmt.coawaitloc.md"
        },
        {
          "title": "CXXForRangeStmt.ColonLoc",
          "path": "cppsharp.ast.cxxforrangestmt.colonloc.md"
        },
        {
          "title": "CXXForRangeStmt.RParenLoc",
          "path": "cppsharp.ast.cxxforrangestmt.rparenloc.md"
        },
        {
          "title": "CXXForRangeStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.cxxforrangestmt.visit.md"
        },
        {
          "title": "CXXForRangeStmt",
          "path": "cppsharp.ast.cxxforrangestmt.md"
        },
        {
          "title": "MSDependentExistsStmt()",
          "path": "cppsharp.ast.msdependentexistsstmt..ctor.md"
        },
        {
          "title": "MSDependentExistsStmt.KeywordLoc",
          "path": "cppsharp.ast.msdependentexistsstmt.keywordloc.md"
        },
        {
          "title": "MSDependentExistsStmt.IsIfExists",
          "path": "cppsharp.ast.msdependentexistsstmt.isifexists.md"
        },
        {
          "title": "MSDependentExistsStmt.IsIfNotExists",
          "path": "cppsharp.ast.msdependentexistsstmt.isifnotexists.md"
        },
        {
          "title": "MSDependentExistsStmt.SubStmt",
          "path": "cppsharp.ast.msdependentexistsstmt.substmt.md"
        },
        {
          "title": "MSDependentExistsStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.msdependentexistsstmt.visit.md"
        },
        {
          "title": "MSDependentExistsStmt",
          "path": "cppsharp.ast.msdependentexistsstmt.md"
        },
        {
          "title": "CtorArgs()",
          "path": "cppsharp.ast.coroutinebodystmt.ctorargs..ctor.md"
        },
        {
          "title": "CtorArgs",
          "path": "cppsharp.ast.coroutinebodystmt.ctorargs.md"
        },
        {
          "title": "CoroutineBodyStmt()",
          "path": "cppsharp.ast.coroutinebodystmt..ctor.md"
        },
        {
          "title": "CoroutineBodyStmt.HasDependentPromiseType",
          "path": "cppsharp.ast.coroutinebodystmt.hasdependentpromisetype.md"
        },
        {
          "title": "CoroutineBodyStmt.Body",
          "path": "cppsharp.ast.coroutinebodystmt.body.md"
        },
        {
          "title": "CoroutineBodyStmt.PromiseDeclStmt",
          "path": "cppsharp.ast.coroutinebodystmt.promisedeclstmt.md"
        },
        {
          "title": "CoroutineBodyStmt.InitSuspendStmt",
          "path": "cppsharp.ast.coroutinebodystmt.initsuspendstmt.md"
        },
        {
          "title": "CoroutineBodyStmt.FinalSuspendStmt",
          "path": "cppsharp.ast.coroutinebodystmt.finalsuspendstmt.md"
        },
        {
          "title": "CoroutineBodyStmt.ExceptionHandler",
          "path": "cppsharp.ast.coroutinebodystmt.exceptionhandler.md"
        },
        {
          "title": "CoroutineBodyStmt.FallthroughHandler",
          "path": "cppsharp.ast.coroutinebodystmt.fallthroughhandler.md"
        },
        {
          "title": "CoroutineBodyStmt.Allocate",
          "path": "cppsharp.ast.coroutinebodystmt.allocate.md"
        },
        {
          "title": "CoroutineBodyStmt.Deallocate",
          "path": "cppsharp.ast.coroutinebodystmt.deallocate.md"
        },
        {
          "title": "CoroutineBodyStmt.ReturnValueInit",
          "path": "cppsharp.ast.coroutinebodystmt.returnvalueinit.md"
        },
        {
          "title": "CoroutineBodyStmt.ResultDecl",
          "path": "cppsharp.ast.coroutinebodystmt.resultdecl.md"
        },
        {
          "title": "CoroutineBodyStmt.ReturnStmt",
          "path": "cppsharp.ast.coroutinebodystmt.returnstmt.md"
        },
        {
          "title": "CoroutineBodyStmt.ReturnStmtOnAllocFailure",
          "path": "cppsharp.ast.coroutinebodystmt.returnstmtonallocfailure.md"
        },
        {
          "title": "CoroutineBodyStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.coroutinebodystmt.visit.md"
        },
        {
          "title": "CoroutineBodyStmt",
          "path": "cppsharp.ast.coroutinebodystmt.md"
        },
        {
          "title": "CoreturnStmt()",
          "path": "cppsharp.ast.coreturnstmt..ctor.md"
        },
        {
          "title": "CoreturnStmt.IsImplicit",
          "path": "cppsharp.ast.coreturnstmt.isimplicit.md"
        },
        {
          "title": "CoreturnStmt.KeywordLoc",
          "path": "cppsharp.ast.coreturnstmt.keywordloc.md"
        },
        {
          "title": "CoreturnStmt.Operand",
          "path": "cppsharp.ast.coreturnstmt.operand.md"
        },
        {
          "title": "CoreturnStmt.PromiseCall",
          "path": "cppsharp.ast.coreturnstmt.promisecall.md"
        },
        {
          "title": "CoreturnStmt.Visit(IStmtVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.coreturnstmt.visit.md"
        },
        {
          "title": "CoreturnStmt",
          "path": "cppsharp.ast.coreturnstmt.md"
        },
        {
          "title": "AstVisitor.VisitDeclStmt(DeclStmt)",
          "path": "cppsharp.ast.astvisitor.visitdeclstmt.md"
        },
        {
          "title": "AstVisitor.VisitNullStmt(NullStmt)",
          "path": "cppsharp.ast.astvisitor.visitnullstmt.md"
        },
        {
          "title": "AstVisitor.VisitCompoundStmt(CompoundStmt)",
          "path": "cppsharp.ast.astvisitor.visitcompoundstmt.md"
        },
        {
          "title": "AstVisitor.VisitSwitchCase(SwitchCase)",
          "path": "cppsharp.ast.astvisitor.visitswitchcase.md"
        },
        {
          "title": "AstVisitor.VisitCaseStmt(CaseStmt)",
          "path": "cppsharp.ast.astvisitor.visitcasestmt.md"
        },
        {
          "title": "AstVisitor.VisitDefaultStmt(DefaultStmt)",
          "path": "cppsharp.ast.astvisitor.visitdefaultstmt.md"
        },
        {
          "title": "AstVisitor.VisitLabelStmt(LabelStmt)",
          "path": "cppsharp.ast.astvisitor.visitlabelstmt.md"
        },
        {
          "title": "AstVisitor.VisitAttributedStmt(AttributedStmt)",
          "path": "cppsharp.ast.astvisitor.visitattributedstmt.md"
        },
        {
          "title": "AstVisitor.VisitIfStmt(IfStmt)",
          "path": "cppsharp.ast.astvisitor.visitifstmt.md"
        },
        {
          "title": "AstVisitor.VisitSwitchStmt(SwitchStmt)",
          "path": "cppsharp.ast.astvisitor.visitswitchstmt.md"
        },
        {
          "title": "AstVisitor.VisitWhileStmt(WhileStmt)",
          "path": "cppsharp.ast.astvisitor.visitwhilestmt.md"
        },
        {
          "title": "AstVisitor.VisitDoStmt(DoStmt)",
          "path": "cppsharp.ast.astvisitor.visitdostmt.md"
        },
        {
          "title": "AstVisitor.VisitForStmt(ForStmt)",
          "path": "cppsharp.ast.astvisitor.visitforstmt.md"
        },
        {
          "title": "AstVisitor.VisitGotoStmt(GotoStmt)",
          "path": "cppsharp.ast.astvisitor.visitgotostmt.md"
        },
        {
          "title": "AstVisitor.VisitIndirectGotoStmt(IndirectGotoStmt)",
          "path": "cppsharp.ast.astvisitor.visitindirectgotostmt.md"
        },
        {
          "title": "AstVisitor.VisitContinueStmt(ContinueStmt)",
          "path": "cppsharp.ast.astvisitor.visitcontinuestmt.md"
        },
        {
          "title": "AstVisitor.VisitBreakStmt(BreakStmt)",
          "path": "cppsharp.ast.astvisitor.visitbreakstmt.md"
        },
        {
          "title": "AstVisitor.VisitReturnStmt(ReturnStmt)",
          "path": "cppsharp.ast.astvisitor.visitreturnstmt.md"
        },
        {
          "title": "AstVisitor.VisitAsmStmt(AsmStmt)",
          "path": "cppsharp.ast.astvisitor.visitasmstmt.md"
        },
        {
          "title": "AstVisitor.VisitGCCAsmStmt(GCCAsmStmt)",
          "path": "cppsharp.ast.astvisitor.visitgccasmstmt.md"
        },
        {
          "title": "AstVisitor.VisitMSAsmStmt(MSAsmStmt)",
          "path": "cppsharp.ast.astvisitor.visitmsasmstmt.md"
        },
        {
          "title": "AstVisitor.VisitSEHExceptStmt(SEHExceptStmt)",
          "path": "cppsharp.ast.astvisitor.visitsehexceptstmt.md"
        },
        {
          "title": "AstVisitor.VisitSEHFinallyStmt(SEHFinallyStmt)",
          "path": "cppsharp.ast.astvisitor.visitsehfinallystmt.md"
        },
        {
          "title": "AstVisitor.VisitSEHTryStmt(SEHTryStmt)",
          "path": "cppsharp.ast.astvisitor.visitsehtrystmt.md"
        },
        {
          "title": "AstVisitor.VisitSEHLeaveStmt(SEHLeaveStmt)",
          "path": "cppsharp.ast.astvisitor.visitsehleavestmt.md"
        },
        {
          "title": "AstVisitor.VisitCapturedStmt(CapturedStmt)",
          "path": "cppsharp.ast.astvisitor.visitcapturedstmt.md"
        },
        {
          "title": "AstVisitor.VisitCXXCatchStmt(CXXCatchStmt)",
          "path": "cppsharp.ast.astvisitor.visitcxxcatchstmt.md"
        },
        {
          "title": "AstVisitor.VisitCXXTryStmt(CXXTryStmt)",
          "path": "cppsharp.ast.astvisitor.visitcxxtrystmt.md"
        },
        {
          "title": "AstVisitor.VisitCXXForRangeStmt(CXXForRangeStmt)",
          "path": "cppsharp.ast.astvisitor.visitcxxforrangestmt.md"
        },
        {
          "title": "AstVisitor.VisitMSDependentExistsStmt(MSDependentExistsStmt)",
          "path": "cppsharp.ast.astvisitor.visitmsdependentexistsstmt.md"
        },
        {
          "title": "AstVisitor.VisitCoroutineBodyStmt(CoroutineBodyStmt)",
          "path": "cppsharp.ast.astvisitor.visitcoroutinebodystmt.md"
        },
        {
          "title": "AstVisitor.VisitCoreturnStmt(CoreturnStmt)",
          "path": "cppsharp.ast.astvisitor.visitcoreturnstmt.md"
        },
        {
          "title": "AstVisitor.VisitExpr(Expr)",
          "path": "cppsharp.ast.astvisitor.visitexpr.md"
        },
        {
          "title": "AstVisitor.VisitFullExpr(FullExpr)",
          "path": "cppsharp.ast.astvisitor.visitfullexpr.md"
        },
        {
          "title": "AstVisitor.VisitConstantExpr(ConstantExpr)",
          "path": "cppsharp.ast.astvisitor.visitconstantexpr.md"
        },
        {
          "title": "AstVisitor.VisitOpaqueValueExpr(OpaqueValueExpr)",
          "path": "cppsharp.ast.astvisitor.visitopaquevalueexpr.md"
        },
        {
          "title": "AstVisitor.VisitDeclRefExpr(DeclRefExpr)",
          "path": "cppsharp.ast.astvisitor.visitdeclrefexpr.md"
        },
        {
          "title": "AstVisitor.VisitIntegerLiteral(IntegerLiteral)",
          "path": "cppsharp.ast.astvisitor.visitintegerliteral.md"
        },
        {
          "title": "AstVisitor.VisitFixedPointLiteral(FixedPointLiteral)",
          "path": "cppsharp.ast.astvisitor.visitfixedpointliteral.md"
        },
        {
          "title": "AstVisitor.VisitCharacterLiteral(CharacterLiteral)",
          "path": "cppsharp.ast.astvisitor.visitcharacterliteral.md"
        },
        {
          "title": "AstVisitor.VisitFloatingLiteral(FloatingLiteral)",
          "path": "cppsharp.ast.astvisitor.visitfloatingliteral.md"
        },
        {
          "title": "AstVisitor.VisitImaginaryLiteral(ImaginaryLiteral)",
          "path": "cppsharp.ast.astvisitor.visitimaginaryliteral.md"
        },
        {
          "title": "AstVisitor.VisitStringLiteral(StringLiteral)",
          "path": "cppsharp.ast.astvisitor.visitstringliteral.md"
        },
        {
          "title": "AstVisitor.VisitPredefinedExpr(PredefinedExpr)",
          "path": "cppsharp.ast.astvisitor.visitpredefinedexpr.md"
        },
        {
          "title": "AstVisitor.VisitParenExpr(ParenExpr)",
          "path": "cppsharp.ast.astvisitor.visitparenexpr.md"
        },
        {
          "title": "AstVisitor.VisitUnaryOperator(UnaryOperator)",
          "path": "cppsharp.ast.astvisitor.visitunaryoperator.md"
        },
        {
          "title": "AstVisitor.VisitOffsetOfExpr(OffsetOfExpr)",
          "path": "cppsharp.ast.astvisitor.visitoffsetofexpr.md"
        },
        {
          "title": "AstVisitor.VisitUnaryExprOrTypeTraitExpr(UnaryExprOrTypeTraitExpr)",
          "path": "cppsharp.ast.astvisitor.visitunaryexprortypetraitexpr.md"
        },
        {
          "title": "AstVisitor.VisitArraySubscriptExpr(ArraySubscriptExpr)",
          "path": "cppsharp.ast.astvisitor.visitarraysubscriptexpr.md"
        },
        {
          "title": "AstVisitor.VisitCallExpr(CallExpr)",
          "path": "cppsharp.ast.astvisitor.visitcallexpr.md"
        },
        {
          "title": "AstVisitor.VisitMemberExpr(MemberExpr)",
          "path": "cppsharp.ast.astvisitor.visitmemberexpr.md"
        },
        {
          "title": "AstVisitor.VisitCompoundLiteralExpr(CompoundLiteralExpr)",
          "path": "cppsharp.ast.astvisitor.visitcompoundliteralexpr.md"
        },
        {
          "title": "AstVisitor.VisitCastExpr(CastExpr)",
          "path": "cppsharp.ast.astvisitor.visitcastexpr.md"
        },
        {
          "title": "AstVisitor.VisitImplicitCastExpr(ImplicitCastExpr)",
          "path": "cppsharp.ast.astvisitor.visitimplicitcastexpr.md"
        },
        {
          "title": "AstVisitor.VisitExplicitCastExpr(ExplicitCastExpr)",
          "path": "cppsharp.ast.astvisitor.visitexplicitcastexpr.md"
        },
        {
          "title": "AstVisitor.VisitCStyleCastExpr(CStyleCastExpr)",
          "path": "cppsharp.ast.astvisitor.visitcstylecastexpr.md"
        },
        {
          "title": "AstVisitor.VisitBinaryOperator(BinaryOperator)",
          "path": "cppsharp.ast.astvisitor.visitbinaryoperator.md"
        },
        {
          "title": "AstVisitor.VisitCompoundAssignOperator(CompoundAssignOperator)",
          "path": "cppsharp.ast.astvisitor.visitcompoundassignoperator.md"
        },
        {
          "title": "AstVisitor.VisitAbstractConditionalOperator(AbstractConditionalOperator)",
          "path": "cppsharp.ast.astvisitor.visitabstractconditionaloperator.md"
        },
        {
          "title": "AstVisitor.VisitConditionalOperator(ConditionalOperator)",
          "path": "cppsharp.ast.astvisitor.visitconditionaloperator.md"
        },
        {
          "title": "AstVisitor.VisitBinaryConditionalOperator(BinaryConditionalOperator)",
          "path": "cppsharp.ast.astvisitor.visitbinaryconditionaloperator.md"
        },
        {
          "title": "AstVisitor.VisitAddrLabelExpr(AddrLabelExpr)",
          "path": "cppsharp.ast.astvisitor.visitaddrlabelexpr.md"
        },
        {
          "title": "AstVisitor.VisitStmtExpr(StmtExpr)",
          "path": "cppsharp.ast.astvisitor.visitstmtexpr.md"
        },
        {
          "title": "AstVisitor.VisitShuffleVectorExpr(ShuffleVectorExpr)",
          "path": "cppsharp.ast.astvisitor.visitshufflevectorexpr.md"
        },
        {
          "title": "AstVisitor.VisitConvertVectorExpr(ConvertVectorExpr)",
          "path": "cppsharp.ast.astvisitor.visitconvertvectorexpr.md"
        },
        {
          "title": "AstVisitor.VisitChooseExpr(ChooseExpr)",
          "path": "cppsharp.ast.astvisitor.visitchooseexpr.md"
        },
        {
          "title": "AstVisitor.VisitGNUNullExpr(GNUNullExpr)",
          "path": "cppsharp.ast.astvisitor.visitgnunullexpr.md"
        },
        {
          "title": "AstVisitor.VisitVAArgExpr(VAArgExpr)",
          "path": "cppsharp.ast.astvisitor.visitvaargexpr.md"
        },
        {
          "title": "AstVisitor.VisitInitListExpr(InitListExpr)",
          "path": "cppsharp.ast.astvisitor.visitinitlistexpr.md"
        },
        {
          "title": "AstVisitor.VisitDesignatedInitExpr(DesignatedInitExpr)",
          "path": "cppsharp.ast.astvisitor.visitdesignatedinitexpr.md"
        },
        {
          "title": "AstVisitor.VisitNoInitExpr(NoInitExpr)",
          "path": "cppsharp.ast.astvisitor.visitnoinitexpr.md"
        },
        {
          "title": "AstVisitor.VisitDesignatedInitUpdateExpr(DesignatedInitUpdateExpr)",
          "path": "cppsharp.ast.astvisitor.visitdesignatedinitupdateexpr.md"
        },
        {
          "title": "AstVisitor.VisitArrayInitLoopExpr(ArrayInitLoopExpr)",
          "path": "cppsharp.ast.astvisitor.visitarrayinitloopexpr.md"
        },
        {
          "title": "AstVisitor.VisitArrayInitIndexExpr(ArrayInitIndexExpr)",
          "path": "cppsharp.ast.astvisitor.visitarrayinitindexexpr.md"
        },
        {
          "title": "AstVisitor.VisitImplicitValueInitExpr(ImplicitValueInitExpr)",
          "path": "cppsharp.ast.astvisitor.visitimplicitvalueinitexpr.md"
        },
        {
          "title": "AstVisitor.VisitParenListExpr(ParenListExpr)",
          "path": "cppsharp.ast.astvisitor.visitparenlistexpr.md"
        },
        {
          "title": "AstVisitor.VisitGenericSelectionExpr(GenericSelectionExpr)",
          "path": "cppsharp.ast.astvisitor.visitgenericselectionexpr.md"
        },
        {
          "title": "AstVisitor.VisitExtVectorElementExpr(ExtVectorElementExpr)",
          "path": "cppsharp.ast.astvisitor.visitextvectorelementexpr.md"
        },
        {
          "title": "AstVisitor.VisitBlockExpr(BlockExpr)",
          "path": "cppsharp.ast.astvisitor.visitblockexpr.md"
        },
        {
          "title": "AstVisitor.VisitAsTypeExpr(AsTypeExpr)",
          "path": "cppsharp.ast.astvisitor.visitastypeexpr.md"
        },
        {
          "title": "AstVisitor.VisitPseudoObjectExpr(PseudoObjectExpr)",
          "path": "cppsharp.ast.astvisitor.visitpseudoobjectexpr.md"
        },
        {
          "title": "AstVisitor.VisitAtomicExpr(AtomicExpr)",
          "path": "cppsharp.ast.astvisitor.visitatomicexpr.md"
        },
        {
          "title": "AstVisitor.VisitTypoExpr(TypoExpr)",
          "path": "cppsharp.ast.astvisitor.visittypoexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXOperatorCallExpr(CXXOperatorCallExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxoperatorcallexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXMemberCallExpr(CXXMemberCallExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxmembercallexpr.md"
        },
        {
          "title": "AstVisitor.VisitCUDAKernelCallExpr(CUDAKernelCallExpr)",
          "path": "cppsharp.ast.astvisitor.visitcudakernelcallexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXNamedCastExpr(CXXNamedCastExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxnamedcastexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXStaticCastExpr(CXXStaticCastExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxstaticcastexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXDynamicCastExpr(CXXDynamicCastExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxdynamiccastexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXReinterpretCastExpr(CXXReinterpretCastExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxreinterpretcastexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXConstCastExpr(CXXConstCastExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxconstcastexpr.md"
        },
        {
          "title": "AstVisitor.VisitUserDefinedLiteral(UserDefinedLiteral)",
          "path": "cppsharp.ast.astvisitor.visituserdefinedliteral.md"
        },
        {
          "title": "AstVisitor.VisitCXXBoolLiteralExpr(CXXBoolLiteralExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxboolliteralexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXNullPtrLiteralExpr(CXXNullPtrLiteralExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxnullptrliteralexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXStdInitializerListExpr(CXXStdInitializerListExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxstdinitializerlistexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXTypeidExpr(CXXTypeidExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxtypeidexpr.md"
        },
        {
          "title": "AstVisitor.VisitMSPropertyRefExpr(MSPropertyRefExpr)",
          "path": "cppsharp.ast.astvisitor.visitmspropertyrefexpr.md"
        },
        {
          "title": "AstVisitor.VisitMSPropertySubscriptExpr(MSPropertySubscriptExpr)",
          "path": "cppsharp.ast.astvisitor.visitmspropertysubscriptexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXUuidofExpr(CXXUuidofExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxuuidofexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXThisExpr(CXXThisExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxthisexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXThrowExpr(CXXThrowExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxthrowexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXDefaultArgExpr(CXXDefaultArgExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxdefaultargexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXDefaultInitExpr(CXXDefaultInitExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxdefaultinitexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXBindTemporaryExpr(CXXBindTemporaryExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxbindtemporaryexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXConstructExpr(CXXConstructExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxconstructexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXInheritedCtorInitExpr(CXXInheritedCtorInitExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxinheritedctorinitexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXFunctionalCastExpr(CXXFunctionalCastExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxfunctionalcastexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXTemporaryObjectExpr(CXXTemporaryObjectExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxtemporaryobjectexpr.md"
        },
        {
          "title": "AstVisitor.VisitLambdaExpr(LambdaExpr)",
          "path": "cppsharp.ast.astvisitor.visitlambdaexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXScalarValueInitExpr(CXXScalarValueInitExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxscalarvalueinitexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXNewExpr(CXXNewExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxnewexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXDeleteExpr(CXXDeleteExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxdeleteexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXPseudoDestructorExpr(CXXPseudoDestructorExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxpseudodestructorexpr.md"
        },
        {
          "title": "AstVisitor.VisitTypeTraitExpr(TypeTraitExpr)",
          "path": "cppsharp.ast.astvisitor.visittypetraitexpr.md"
        },
        {
          "title": "AstVisitor.VisitArrayTypeTraitExpr(ArrayTypeTraitExpr)",
          "path": "cppsharp.ast.astvisitor.visitarraytypetraitexpr.md"
        },
        {
          "title": "AstVisitor.VisitExpressionTraitExpr(ExpressionTraitExpr)",
          "path": "cppsharp.ast.astvisitor.visitexpressiontraitexpr.md"
        },
        {
          "title": "AstVisitor.VisitOverloadExpr(OverloadExpr)",
          "path": "cppsharp.ast.astvisitor.visitoverloadexpr.md"
        },
        {
          "title": "AstVisitor.VisitUnresolvedLookupExpr(UnresolvedLookupExpr)",
          "path": "cppsharp.ast.astvisitor.visitunresolvedlookupexpr.md"
        },
        {
          "title": "AstVisitor.VisitDependentScopeDeclRefExpr(DependentScopeDeclRefExpr)",
          "path": "cppsharp.ast.astvisitor.visitdependentscopedeclrefexpr.md"
        },
        {
          "title": "AstVisitor.VisitExprWithCleanups(ExprWithCleanups)",
          "path": "cppsharp.ast.astvisitor.visitexprwithcleanups.md"
        },
        {
          "title": "AstVisitor.VisitCXXUnresolvedConstructExpr(CXXUnresolvedConstructExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxunresolvedconstructexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXDependentScopeMemberExpr(CXXDependentScopeMemberExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxdependentscopememberexpr.md"
        },
        {
          "title": "AstVisitor.VisitUnresolvedMemberExpr(UnresolvedMemberExpr)",
          "path": "cppsharp.ast.astvisitor.visitunresolvedmemberexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXNoexceptExpr(CXXNoexceptExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxnoexceptexpr.md"
        },
        {
          "title": "AstVisitor.VisitPackExpansionExpr(PackExpansionExpr)",
          "path": "cppsharp.ast.astvisitor.visitpackexpansionexpr.md"
        },
        {
          "title": "AstVisitor.VisitSizeOfPackExpr(SizeOfPackExpr)",
          "path": "cppsharp.ast.astvisitor.visitsizeofpackexpr.md"
        },
        {
          "title": "AstVisitor.VisitSubstNonTypeTemplateParmExpr(SubstNonTypeTemplateParmExpr)",
          "path": "cppsharp.ast.astvisitor.visitsubstnontypetemplateparmexpr.md"
        },
        {
          "title": "AstVisitor.VisitSubstNonTypeTemplateParmPackExpr(SubstNonTypeTemplateParmPackExpr)",
          "path": "cppsharp.ast.astvisitor.visitsubstnontypetemplateparmpackexpr.md"
        },
        {
          "title": "AstVisitor.VisitFunctionParmPackExpr(FunctionParmPackExpr)",
          "path": "cppsharp.ast.astvisitor.visitfunctionparmpackexpr.md"
        },
        {
          "title": "AstVisitor.VisitMaterializeTemporaryExpr(MaterializeTemporaryExpr)",
          "path": "cppsharp.ast.astvisitor.visitmaterializetemporaryexpr.md"
        },
        {
          "title": "AstVisitor.VisitCXXFoldExpr(CXXFoldExpr)",
          "path": "cppsharp.ast.astvisitor.visitcxxfoldexpr.md"
        },
        {
          "title": "AstVisitor.VisitCoroutineSuspendExpr(CoroutineSuspendExpr)",
          "path": "cppsharp.ast.astvisitor.visitcoroutinesuspendexpr.md"
        },
        {
          "title": "AstVisitor.VisitCoawaitExpr(CoawaitExpr)",
          "path": "cppsharp.ast.astvisitor.visitcoawaitexpr.md"
        },
        {
          "title": "AstVisitor.VisitDependentCoawaitExpr(DependentCoawaitExpr)",
          "path": "cppsharp.ast.astvisitor.visitdependentcoawaitexpr.md"
        },
        {
          "title": "AstVisitor.VisitCoyieldExpr(CoyieldExpr)",
          "path": "cppsharp.ast.astvisitor.visitcoyieldexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitStmt(Stmt)",
          "path": "cppsharp.ast.istmtvisitor.visitstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitDeclStmt(DeclStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitdeclstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitNullStmt(NullStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitnullstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitCompoundStmt(CompoundStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitcompoundstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitSwitchCase(SwitchCase)",
          "path": "cppsharp.ast.istmtvisitor.visitswitchcase.md"
        },
        {
          "title": "IStmtVisitor.VisitCaseStmt(CaseStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitcasestmt.md"
        },
        {
          "title": "IStmtVisitor.VisitDefaultStmt(DefaultStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitdefaultstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitLabelStmt(LabelStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitlabelstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitAttributedStmt(AttributedStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitattributedstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitIfStmt(IfStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitifstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitSwitchStmt(SwitchStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitswitchstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitWhileStmt(WhileStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitwhilestmt.md"
        },
        {
          "title": "IStmtVisitor.VisitDoStmt(DoStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitdostmt.md"
        },
        {
          "title": "IStmtVisitor.VisitForStmt(ForStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitforstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitGotoStmt(GotoStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitgotostmt.md"
        },
        {
          "title": "IStmtVisitor.VisitIndirectGotoStmt(IndirectGotoStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitindirectgotostmt.md"
        },
        {
          "title": "IStmtVisitor.VisitContinueStmt(ContinueStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitcontinuestmt.md"
        },
        {
          "title": "IStmtVisitor.VisitBreakStmt(BreakStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitbreakstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitReturnStmt(ReturnStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitreturnstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitAsmStmt(AsmStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitasmstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitGCCAsmStmt(GCCAsmStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitgccasmstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitMSAsmStmt(MSAsmStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitmsasmstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitSEHExceptStmt(SEHExceptStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitsehexceptstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitSEHFinallyStmt(SEHFinallyStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitsehfinallystmt.md"
        },
        {
          "title": "IStmtVisitor.VisitSEHTryStmt(SEHTryStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitsehtrystmt.md"
        },
        {
          "title": "IStmtVisitor.VisitSEHLeaveStmt(SEHLeaveStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitsehleavestmt.md"
        },
        {
          "title": "IStmtVisitor.VisitCapturedStmt(CapturedStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitcapturedstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXCatchStmt(CXXCatchStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxcatchstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXTryStmt(CXXTryStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxtrystmt.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXForRangeStmt(CXXForRangeStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxforrangestmt.md"
        },
        {
          "title": "IStmtVisitor.VisitMSDependentExistsStmt(MSDependentExistsStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitmsdependentexistsstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitCoroutineBodyStmt(CoroutineBodyStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitcoroutinebodystmt.md"
        },
        {
          "title": "IStmtVisitor.VisitCoreturnStmt(CoreturnStmt)",
          "path": "cppsharp.ast.istmtvisitor.visitcoreturnstmt.md"
        },
        {
          "title": "IStmtVisitor.VisitExpr(Expr)",
          "path": "cppsharp.ast.istmtvisitor.visitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitFullExpr(FullExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitfullexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitConstantExpr(ConstantExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitconstantexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitOpaqueValueExpr(OpaqueValueExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitopaquevalueexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitDeclRefExpr(DeclRefExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitdeclrefexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitIntegerLiteral(IntegerLiteral)",
          "path": "cppsharp.ast.istmtvisitor.visitintegerliteral.md"
        },
        {
          "title": "IStmtVisitor.VisitFixedPointLiteral(FixedPointLiteral)",
          "path": "cppsharp.ast.istmtvisitor.visitfixedpointliteral.md"
        },
        {
          "title": "IStmtVisitor.VisitCharacterLiteral(CharacterLiteral)",
          "path": "cppsharp.ast.istmtvisitor.visitcharacterliteral.md"
        },
        {
          "title": "IStmtVisitor.VisitFloatingLiteral(FloatingLiteral)",
          "path": "cppsharp.ast.istmtvisitor.visitfloatingliteral.md"
        },
        {
          "title": "IStmtVisitor.VisitImaginaryLiteral(ImaginaryLiteral)",
          "path": "cppsharp.ast.istmtvisitor.visitimaginaryliteral.md"
        },
        {
          "title": "IStmtVisitor.VisitStringLiteral(StringLiteral)",
          "path": "cppsharp.ast.istmtvisitor.visitstringliteral.md"
        },
        {
          "title": "IStmtVisitor.VisitPredefinedExpr(PredefinedExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitpredefinedexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitParenExpr(ParenExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitparenexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitUnaryOperator(UnaryOperator)",
          "path": "cppsharp.ast.istmtvisitor.visitunaryoperator.md"
        },
        {
          "title": "IStmtVisitor.VisitOffsetOfExpr(OffsetOfExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitoffsetofexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitUnaryExprOrTypeTraitExpr(UnaryExprOrTypeTraitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitunaryexprortypetraitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitArraySubscriptExpr(ArraySubscriptExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitarraysubscriptexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCallExpr(CallExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcallexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitMemberExpr(MemberExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitmemberexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCompoundLiteralExpr(CompoundLiteralExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcompoundliteralexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCastExpr(CastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitImplicitCastExpr(ImplicitCastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitimplicitcastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitExplicitCastExpr(ExplicitCastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitexplicitcastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCStyleCastExpr(CStyleCastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcstylecastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitBinaryOperator(BinaryOperator)",
          "path": "cppsharp.ast.istmtvisitor.visitbinaryoperator.md"
        },
        {
          "title": "IStmtVisitor.VisitCompoundAssignOperator(CompoundAssignOperator)",
          "path": "cppsharp.ast.istmtvisitor.visitcompoundassignoperator.md"
        },
        {
          "title": "IStmtVisitor.VisitAbstractConditionalOperator(AbstractConditionalOperator)",
          "path": "cppsharp.ast.istmtvisitor.visitabstractconditionaloperator.md"
        },
        {
          "title": "IStmtVisitor.VisitConditionalOperator(ConditionalOperator)",
          "path": "cppsharp.ast.istmtvisitor.visitconditionaloperator.md"
        },
        {
          "title": "IStmtVisitor.VisitBinaryConditionalOperator(BinaryConditionalOperator)",
          "path": "cppsharp.ast.istmtvisitor.visitbinaryconditionaloperator.md"
        },
        {
          "title": "IStmtVisitor.VisitAddrLabelExpr(AddrLabelExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitaddrlabelexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitStmtExpr(StmtExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitstmtexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitShuffleVectorExpr(ShuffleVectorExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitshufflevectorexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitConvertVectorExpr(ConvertVectorExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitconvertvectorexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitChooseExpr(ChooseExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitchooseexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitGNUNullExpr(GNUNullExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitgnunullexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitVAArgExpr(VAArgExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitvaargexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitInitListExpr(InitListExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitinitlistexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitDesignatedInitExpr(DesignatedInitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitdesignatedinitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitNoInitExpr(NoInitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitnoinitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitDesignatedInitUpdateExpr(DesignatedInitUpdateExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitdesignatedinitupdateexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitArrayInitLoopExpr(ArrayInitLoopExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitarrayinitloopexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitArrayInitIndexExpr(ArrayInitIndexExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitarrayinitindexexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitImplicitValueInitExpr(ImplicitValueInitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitimplicitvalueinitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitParenListExpr(ParenListExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitparenlistexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitGenericSelectionExpr(GenericSelectionExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitgenericselectionexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitExtVectorElementExpr(ExtVectorElementExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitextvectorelementexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitBlockExpr(BlockExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitblockexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitAsTypeExpr(AsTypeExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitastypeexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitPseudoObjectExpr(PseudoObjectExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitpseudoobjectexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitAtomicExpr(AtomicExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitatomicexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitTypoExpr(TypoExpr)",
          "path": "cppsharp.ast.istmtvisitor.visittypoexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXOperatorCallExpr(CXXOperatorCallExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxoperatorcallexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXMemberCallExpr(CXXMemberCallExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxmembercallexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCUDAKernelCallExpr(CUDAKernelCallExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcudakernelcallexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXNamedCastExpr(CXXNamedCastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxnamedcastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXStaticCastExpr(CXXStaticCastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxstaticcastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXDynamicCastExpr(CXXDynamicCastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxdynamiccastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXReinterpretCastExpr(CXXReinterpretCastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxreinterpretcastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXConstCastExpr(CXXConstCastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxconstcastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitUserDefinedLiteral(UserDefinedLiteral)",
          "path": "cppsharp.ast.istmtvisitor.visituserdefinedliteral.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXBoolLiteralExpr(CXXBoolLiteralExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxboolliteralexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXNullPtrLiteralExpr(CXXNullPtrLiteralExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxnullptrliteralexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXStdInitializerListExpr(CXXStdInitializerListExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxstdinitializerlistexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXTypeidExpr(CXXTypeidExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxtypeidexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitMSPropertyRefExpr(MSPropertyRefExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitmspropertyrefexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitMSPropertySubscriptExpr(MSPropertySubscriptExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitmspropertysubscriptexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXUuidofExpr(CXXUuidofExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxuuidofexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXThisExpr(CXXThisExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxthisexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXThrowExpr(CXXThrowExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxthrowexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXDefaultArgExpr(CXXDefaultArgExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxdefaultargexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXDefaultInitExpr(CXXDefaultInitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxdefaultinitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXBindTemporaryExpr(CXXBindTemporaryExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxbindtemporaryexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXConstructExpr(CXXConstructExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxconstructexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXInheritedCtorInitExpr(CXXInheritedCtorInitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxinheritedctorinitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXFunctionalCastExpr(CXXFunctionalCastExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxfunctionalcastexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXTemporaryObjectExpr(CXXTemporaryObjectExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxtemporaryobjectexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitLambdaExpr(LambdaExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitlambdaexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXScalarValueInitExpr(CXXScalarValueInitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxscalarvalueinitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXNewExpr(CXXNewExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxnewexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXDeleteExpr(CXXDeleteExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxdeleteexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXPseudoDestructorExpr(CXXPseudoDestructorExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxpseudodestructorexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitTypeTraitExpr(TypeTraitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visittypetraitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitArrayTypeTraitExpr(ArrayTypeTraitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitarraytypetraitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitExpressionTraitExpr(ExpressionTraitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitexpressiontraitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitOverloadExpr(OverloadExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitoverloadexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitUnresolvedLookupExpr(UnresolvedLookupExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitunresolvedlookupexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitDependentScopeDeclRefExpr(DependentScopeDeclRefExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitdependentscopedeclrefexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitExprWithCleanups(ExprWithCleanups)",
          "path": "cppsharp.ast.istmtvisitor.visitexprwithcleanups.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXUnresolvedConstructExpr(CXXUnresolvedConstructExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxunresolvedconstructexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXDependentScopeMemberExpr(CXXDependentScopeMemberExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxdependentscopememberexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitUnresolvedMemberExpr(UnresolvedMemberExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitunresolvedmemberexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXNoexceptExpr(CXXNoexceptExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxnoexceptexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitPackExpansionExpr(PackExpansionExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitpackexpansionexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitSizeOfPackExpr(SizeOfPackExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitsizeofpackexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitSubstNonTypeTemplateParmExpr(SubstNonTypeTemplateParmExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitsubstnontypetemplateparmexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitSubstNonTypeTemplateParmPackExpr(SubstNonTypeTemplateParmPackExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitsubstnontypetemplateparmpackexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitFunctionParmPackExpr(FunctionParmPackExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitfunctionparmpackexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitMaterializeTemporaryExpr(MaterializeTemporaryExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitmaterializetemporaryexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCXXFoldExpr(CXXFoldExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcxxfoldexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCoroutineSuspendExpr(CoroutineSuspendExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcoroutinesuspendexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCoawaitExpr(CoawaitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcoawaitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitDependentCoawaitExpr(DependentCoawaitExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitdependentcoawaitexpr.md"
        },
        {
          "title": "IStmtVisitor.VisitCoyieldExpr(CoyieldExpr)",
          "path": "cppsharp.ast.istmtvisitor.visitcoyieldexpr.md"
        },
        {
          "title": "IStmtVisitor",
          "path": "cppsharp.ast.istmtvisitor.md"
        },
        {
          "title": "ArchType.UnknownArch",
          "path": "cppsharp.ast.archtype.unknownarch.md"
        },
        {
          "title": "ArchType.x86",
          "path": "cppsharp.ast.archtype.x86.md"
        },
        {
          "title": "ArchType.x86_64",
          "path": "cppsharp.ast.archtype.x86_64.md"
        },
        {
          "title": "ArchType",
          "path": "cppsharp.ast.archtype.md"
        },
        {
          "title": "NativeLibrary(string)",
          "path": "cppsharp.ast.nativelibrary..ctor-1.md"
        },
        {
          "title": "NativeLibrary()",
          "path": "cppsharp.ast.nativelibrary..ctor-2.md"
        },
        {
          "title": "NativeLibrary.FileName",
          "path": "cppsharp.ast.nativelibrary.filename.md"
        },
        {
          "title": "NativeLibrary.ArchType",
          "path": "cppsharp.ast.nativelibrary.archtype.md"
        },
        {
          "title": "NativeLibrary.Symbols",
          "path": "cppsharp.ast.nativelibrary.symbols.md"
        },
        {
          "title": "NativeLibrary.Dependencies",
          "path": "cppsharp.ast.nativelibrary.dependencies.md"
        },
        {
          "title": "NativeLibrary",
          "path": "cppsharp.ast.nativelibrary.md"
        },
        {
          "title": "SymbolContext.Libraries",
          "path": "cppsharp.ast.symbolcontext.libraries.md"
        },
        {
          "title": "SymbolContext.Symbols",
          "path": "cppsharp.ast.symbolcontext.symbols.md"
        },
        {
          "title": "SymbolContext()",
          "path": "cppsharp.ast.symbolcontext..ctor.md"
        },
        {
          "title": "SymbolContext.FindOrCreateLibrary(string)",
          "path": "cppsharp.ast.symbolcontext.findorcreatelibrary.md"
        },
        {
          "title": "SymbolContext.IndexSymbols()",
          "path": "cppsharp.ast.symbolcontext.indexsymbols.md"
        },
        {
          "title": "SymbolContext.FindLibraryBySymbol(string,NativeLibrary)",
          "path": "cppsharp.ast.symbolcontext.findlibrarybysymbol.md"
        },
        {
          "title": "SymbolContext",
          "path": "cppsharp.ast.symbolcontext.md"
        },
        {
          "title": "TargetTriple.IsWindows(string)",
          "path": "cppsharp.ast.targettriple.iswindows.md"
        },
        {
          "title": "TargetTriple.IsMacOS(string)",
          "path": "cppsharp.ast.targettriple.ismacos.md"
        },
        {
          "title": "TargetTriple",
          "path": "cppsharp.ast.targettriple.md"
        },
        {
          "title": "TemplateTemplateParameter.IsParameterPack",
          "path": "cppsharp.ast.templatetemplateparameter.isparameterpack.md"
        },
        {
          "title": "TemplateTemplateParameter.IsPackExpansion",
          "path": "cppsharp.ast.templatetemplateparameter.ispackexpansion.md"
        },
        {
          "title": "TemplateTemplateParameter.IsExpandedParameterPack",
          "path": "cppsharp.ast.templatetemplateparameter.isexpandedparameterpack.md"
        },
        {
          "title": "TemplateTemplateParameter.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.templatetemplateparameter.visit.md"
        },
        {
          "title": "TemplateTemplateParameter",
          "path": "cppsharp.ast.templatetemplateparameter.md"
        },
        {
          "title": "TypeTemplateParameter.Depth",
          "path": "cppsharp.ast.typetemplateparameter.depth.md"
        },
        {
          "title": "TypeTemplateParameter.Index",
          "path": "cppsharp.ast.typetemplateparameter.index.md"
        },
        {
          "title": "TypeTemplateParameter.IsParameterPack",
          "path": "cppsharp.ast.typetemplateparameter.isparameterpack.md"
        },
        {
          "title": "TypeTemplateParameter.Constraint",
          "path": "cppsharp.ast.typetemplateparameter.constraint.md"
        },
        {
          "title": "TypeTemplateParameter.DefaultArgument",
          "path": "cppsharp.ast.typetemplateparameter.defaultargument.md"
        },
        {
          "title": "TypeTemplateParameter.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.typetemplateparameter.visit.md"
        },
        {
          "title": "TypeTemplateParameter",
          "path": "cppsharp.ast.typetemplateparameter.md"
        },
        {
          "title": "NonTypeTemplateParameter.Depth",
          "path": "cppsharp.ast.nontypetemplateparameter.depth.md"
        },
        {
          "title": "NonTypeTemplateParameter.Index",
          "path": "cppsharp.ast.nontypetemplateparameter.index.md"
        },
        {
          "title": "NonTypeTemplateParameter.IsParameterPack",
          "path": "cppsharp.ast.nontypetemplateparameter.isparameterpack.md"
        },
        {
          "title": "NonTypeTemplateParameter.DefaultArgument",
          "path": "cppsharp.ast.nontypetemplateparameter.defaultargument.md"
        },
        {
          "title": "NonTypeTemplateParameter.Position",
          "path": "cppsharp.ast.nontypetemplateparameter.position.md"
        },
        {
          "title": "NonTypeTemplateParameter.IsPackExpansion",
          "path": "cppsharp.ast.nontypetemplateparameter.ispackexpansion.md"
        },
        {
          "title": "NonTypeTemplateParameter.IsExpandedParameterPack",
          "path": "cppsharp.ast.nontypetemplateparameter.isexpandedparameterpack.md"
        },
        {
          "title": "NonTypeTemplateParameter.Type",
          "path": "cppsharp.ast.nontypetemplateparameter.type.md"
        },
        {
          "title": "NonTypeTemplateParameter.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.nontypetemplateparameter.visit.md"
        },
        {
          "title": "NonTypeTemplateParameter",
          "path": "cppsharp.ast.nontypetemplateparameter.md"
        },
        {
          "title": "Template.Name",
          "path": "cppsharp.ast.template.name.md"
        },
        {
          "title": "Template.TemplatedDecl",
          "path": "cppsharp.ast.template.templateddecl.md"
        },
        {
          "title": "Template.Parameters",
          "path": "cppsharp.ast.template.parameters.md"
        },
        {
          "title": "Template.ToString()",
          "path": "cppsharp.ast.template.tostring.md"
        },
        {
          "title": "Template",
          "path": "cppsharp.ast.template.md"
        },
        {
          "title": "TypeAliasTemplate.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.typealiastemplate.visit.md"
        },
        {
          "title": "TypeAliasTemplate",
          "path": "cppsharp.ast.typealiastemplate.md"
        },
        {
          "title": "ClassTemplate.Specializations",
          "path": "cppsharp.ast.classtemplate.specializations.md"
        },
        {
          "title": "ClassTemplate.TemplatedClass",
          "path": "cppsharp.ast.classtemplate.templatedclass.md"
        },
        {
          "title": "ClassTemplate()",
          "path": "cppsharp.ast.classtemplate..ctor-1.md"
        },
        {
          "title": "ClassTemplate(Declaration)",
          "path": "cppsharp.ast.classtemplate..ctor-2.md"
        },
        {
          "title": "ClassTemplate.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.classtemplate.visit.md"
        },
        {
          "title": "ClassTemplate.Name",
          "path": "cppsharp.ast.classtemplate.name.md"
        },
        {
          "title": "ClassTemplate.OriginalName",
          "path": "cppsharp.ast.classtemplate.originalname.md"
        },
        {
          "title": "ClassTemplate.FindSpecializationByUSR(string)",
          "path": "cppsharp.ast.classtemplate.findspecializationbyusr.md"
        },
        {
          "title": "ClassTemplate.FindPartialSpecializationByUSR(string)",
          "path": "cppsharp.ast.classtemplate.findpartialspecializationbyusr.md"
        },
        {
          "title": "ClassTemplate",
          "path": "cppsharp.ast.classtemplate.md"
        },
        {
          "title": "TemplateSpecializationKind.Undeclared",
          "path": "cppsharp.ast.templatespecializationkind.undeclared.md"
        },
        {
          "title": "TemplateSpecializationKind.ImplicitInstantiation",
          "path": "cppsharp.ast.templatespecializationkind.implicitinstantiation.md"
        },
        {
          "title": "TemplateSpecializationKind.ExplicitSpecialization",
          "path": "cppsharp.ast.templatespecializationkind.explicitspecialization.md"
        },
        {
          "title": "TemplateSpecializationKind.ExplicitInstantiationDeclaration",
          "path": "cppsharp.ast.templatespecializationkind.explicitinstantiationdeclaration.md"
        },
        {
          "title": "TemplateSpecializationKind.ExplicitInstantiationDefinition",
          "path": "cppsharp.ast.templatespecializationkind.explicitinstantiationdefinition.md"
        },
        {
          "title": "TemplateSpecializationKind",
          "path": "cppsharp.ast.templatespecializationkind.md"
        },
        {
          "title": "ClassTemplateSpecialization.TemplatedDecl",
          "path": "cppsharp.ast.classtemplatespecialization.templateddecl.md"
        },
        {
          "title": "ClassTemplateSpecialization.Arguments",
          "path": "cppsharp.ast.classtemplatespecialization.arguments.md"
        },
        {
          "title": "ClassTemplateSpecialization.SpecializationKind",
          "path": "cppsharp.ast.classtemplatespecialization.specializationkind.md"
        },
        {
          "title": "ClassTemplateSpecialization()",
          "path": "cppsharp.ast.classtemplatespecialization..ctor.md"
        },
        {
          "title": "ClassTemplateSpecialization.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.classtemplatespecialization.visit.md"
        },
        {
          "title": "ClassTemplateSpecialization.ToString()",
          "path": "cppsharp.ast.classtemplatespecialization.tostring.md"
        },
        {
          "title": "ClassTemplateSpecialization",
          "path": "cppsharp.ast.classtemplatespecialization.md"
        },
        {
          "title": "ClassTemplatePartialSpecialization.Parameters",
          "path": "cppsharp.ast.classtemplatepartialspecialization.parameters.md"
        },
        {
          "title": "ClassTemplatePartialSpecialization()",
          "path": "cppsharp.ast.classtemplatepartialspecialization..ctor.md"
        },
        {
          "title": "ClassTemplatePartialSpecialization",
          "path": "cppsharp.ast.classtemplatepartialspecialization.md"
        },
        {
          "title": "FunctionTemplate.Specializations",
          "path": "cppsharp.ast.functiontemplate.specializations.md"
        },
        {
          "title": "FunctionTemplate()",
          "path": "cppsharp.ast.functiontemplate..ctor-1.md"
        },
        {
          "title": "FunctionTemplate(Declaration)",
          "path": "cppsharp.ast.functiontemplate..ctor-2.md"
        },
        {
          "title": "FunctionTemplate.TemplatedFunction",
          "path": "cppsharp.ast.functiontemplate.templatedfunction.md"
        },
        {
          "title": "FunctionTemplate.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.functiontemplate.visit.md"
        },
        {
          "title": "FunctionTemplate",
          "path": "cppsharp.ast.functiontemplate.md"
        },
        {
          "title": "FunctionTemplateSpecialization.Template",
          "path": "cppsharp.ast.functiontemplatespecialization.template.md"
        },
        {
          "title": "FunctionTemplateSpecialization.Arguments",
          "path": "cppsharp.ast.functiontemplatespecialization.arguments.md"
        },
        {
          "title": "FunctionTemplateSpecialization.SpecializedFunction",
          "path": "cppsharp.ast.functiontemplatespecialization.specializedfunction.md"
        },
        {
          "title": "FunctionTemplateSpecialization.SpecializationKind",
          "path": "cppsharp.ast.functiontemplatespecialization.specializationkind.md"
        },
        {
          "title": "FunctionTemplateSpecialization()",
          "path": "cppsharp.ast.functiontemplatespecialization..ctor-1.md"
        },
        {
          "title": "FunctionTemplateSpecialization(FunctionTemplateSpecialization)",
          "path": "cppsharp.ast.functiontemplatespecialization..ctor-2.md"
        },
        {
          "title": "FunctionTemplateSpecialization.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.functiontemplatespecialization.visit.md"
        },
        {
          "title": "FunctionTemplateSpecialization",
          "path": "cppsharp.ast.functiontemplatespecialization.md"
        },
        {
          "title": "VarTemplate.Specializations",
          "path": "cppsharp.ast.vartemplate.specializations.md"
        },
        {
          "title": "VarTemplate.TemplatedVariable",
          "path": "cppsharp.ast.vartemplate.templatedvariable.md"
        },
        {
          "title": "VarTemplate()",
          "path": "cppsharp.ast.vartemplate..ctor-1.md"
        },
        {
          "title": "VarTemplate(Variable)",
          "path": "cppsharp.ast.vartemplate..ctor-2.md"
        },
        {
          "title": "VarTemplate.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.vartemplate.visit.md"
        },
        {
          "title": "VarTemplate",
          "path": "cppsharp.ast.vartemplate.md"
        },
        {
          "title": "VarTemplateSpecialization.TemplatedDecl",
          "path": "cppsharp.ast.vartemplatespecialization.templateddecl.md"
        },
        {
          "title": "VarTemplateSpecialization.Arguments",
          "path": "cppsharp.ast.vartemplatespecialization.arguments.md"
        },
        {
          "title": "VarTemplateSpecialization.SpecializationKind",
          "path": "cppsharp.ast.vartemplatespecialization.specializationkind.md"
        },
        {
          "title": "VarTemplateSpecialization()",
          "path": "cppsharp.ast.vartemplatespecialization..ctor.md"
        },
        {
          "title": "VarTemplateSpecialization",
          "path": "cppsharp.ast.vartemplatespecialization.md"
        },
        {
          "title": "VarTemplatePartialSpecialization",
          "path": "cppsharp.ast.vartemplatepartialspecialization.md"
        },
        {
          "title": "UnresolvedUsingTypename.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.unresolvedusingtypename.visit.md"
        },
        {
          "title": "UnresolvedUsingTypename",
          "path": "cppsharp.ast.unresolvedusingtypename.md"
        },
        {
          "title": "TranslationUnit()",
          "path": "cppsharp.ast.translationunit..ctor-1.md"
        },
        {
          "title": "TranslationUnit(string)",
          "path": "cppsharp.ast.translationunit..ctor-2.md"
        },
        {
          "title": "TranslationUnit.Macros",
          "path": "cppsharp.ast.translationunit.macros.md"
        },
        {
          "title": "TranslationUnit.Module",
          "path": "cppsharp.ast.translationunit.module.md"
        },
        {
          "title": "TranslationUnit.IsSystemHeader",
          "path": "cppsharp.ast.translationunit.issystemheader.md"
        },
        {
          "title": "TranslationUnit.IsValid",
          "path": "cppsharp.ast.translationunit.isvalid.md"
        },
        {
          "title": "TranslationUnit.FilePath",
          "path": "cppsharp.ast.translationunit.filepath.md"
        },
        {
          "title": "TranslationUnit.FileName",
          "path": "cppsharp.ast.translationunit.filename.md"
        },
        {
          "title": "TranslationUnit.FileNameWithoutExtension",
          "path": "cppsharp.ast.translationunit.filenamewithoutextension.md"
        },
        {
          "title": "TranslationUnit.IncludePath",
          "path": "cppsharp.ast.translationunit.includepath.md"
        },
        {
          "title": "TranslationUnit.FileRelativeDirectory",
          "path": "cppsharp.ast.translationunit.filerelativedirectory.md"
        },
        {
          "title": "TranslationUnit.FileRelativePath",
          "path": "cppsharp.ast.translationunit.filerelativepath.md"
        },
        {
          "title": "TranslationUnit.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.translationunit.visit.md"
        },
        {
          "title": "TranslationUnit.ToString()",
          "path": "cppsharp.ast.translationunit.tostring.md"
        },
        {
          "title": "TranslationUnit",
          "path": "cppsharp.ast.translationunit.md"
        },
        {
          "title": "Type.TypePrinterDelegate",
          "path": "cppsharp.ast.type.typeprinterdelegate.md"
        },
        {
          "title": "Type.IsDependent",
          "path": "cppsharp.ast.type.isdependent.md"
        },
        {
          "title": "Type.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.type.visit.md"
        },
        {
          "title": "Type.ToString()",
          "path": "cppsharp.ast.type.tostring.md"
        },
        {
          "title": "Type.Clone()",
          "path": "cppsharp.ast.type.clone.md"
        },
        {
          "title": "Type",
          "path": "cppsharp.ast.type.md"
        },
        {
          "title": "TypeQualifiersMode.Default",
          "path": "cppsharp.ast.typequalifiersmode.default.md"
        },
        {
          "title": "TypeQualifiersMode.Native",
          "path": "cppsharp.ast.typequalifiersmode.native.md"
        },
        {
          "title": "TypeQualifiersMode",
          "path": "cppsharp.ast.typequalifiersmode.md"
        },
        {
          "title": "TypeQualifiers.IsConst",
          "path": "cppsharp.ast.typequalifiers.isconst.md"
        },
        {
          "title": "TypeQualifiers.IsVolatile",
          "path": "cppsharp.ast.typequalifiers.isvolatile.md"
        },
        {
          "title": "TypeQualifiers.IsRestrict",
          "path": "cppsharp.ast.typequalifiers.isrestrict.md"
        },
        {
          "title": "TypeQualifiers.Mode",
          "path": "cppsharp.ast.typequalifiers.mode.md"
        },
        {
          "title": "TypeQualifiers.GetHashCode()",
          "path": "cppsharp.ast.typequalifiers.gethashcode.md"
        },
        {
          "title": "TypeQualifiers",
          "path": "cppsharp.ast.typequalifiers.md"
        },
        {
          "title": "QualifiedType(Type)",
          "path": "cppsharp.ast.qualifiedtype..ctor-1.md"
        },
        {
          "title": "QualifiedType(Type,TypeQualifiers)",
          "path": "cppsharp.ast.qualifiedtype..ctor-2.md"
        },
        {
          "title": "QualifiedType.Type",
          "path": "cppsharp.ast.qualifiedtype.type.md"
        },
        {
          "title": "QualifiedType.Qualifiers",
          "path": "cppsharp.ast.qualifiedtype.qualifiers.md"
        },
        {
          "title": "QualifiedType.Visit(ITypeVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.qualifiedtype.visit.md"
        },
        {
          "title": "QualifiedType.ToString()",
          "path": "cppsharp.ast.qualifiedtype.tostring.md"
        },
        {
          "title": "QualifiedType.Equals(object)",
          "path": "cppsharp.ast.qualifiedtype.equals.md"
        },
        {
          "title": "M:CppSharp.AST.QualifiedType.op_Equality(CppSharp.AST.QualifiedType,CppSharp.AST.QualifiedType)~System.Boolean",
          "path": "cppsharp.ast.qualifiedtype.op_equality.md"
        },
        {
          "title": "M:CppSharp.AST.QualifiedType.op_Inequality(CppSharp.AST.QualifiedType,CppSharp.AST.QualifiedType)~System.Boolean",
          "path": "cppsharp.ast.qualifiedtype.op_inequality.md"
        },
        {
          "title": "QualifiedType.GetHashCode()",
          "path": "cppsharp.ast.qualifiedtype.gethashcode.md"
        },
        {
          "title": "QualifiedType",
          "path": "cppsharp.ast.qualifiedtype.md"
        },
        {
          "title": "TagType()",
          "path": "cppsharp.ast.tagtype..ctor-1.md"
        },
        {
          "title": "TagType(Declaration)",
          "path": "cppsharp.ast.tagtype..ctor-2.md"
        },
        {
          "title": "TagType(TagType)",
          "path": "cppsharp.ast.tagtype..ctor-3.md"
        },
        {
          "title": "TagType.Declaration",
          "path": "cppsharp.ast.tagtype.declaration.md"
        },
        {
          "title": "TagType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.tagtype.visit.md"
        },
        {
          "title": "TagType.Clone()",
          "path": "cppsharp.ast.tagtype.clone.md"
        },
        {
          "title": "TagType.Equals(object)",
          "path": "cppsharp.ast.tagtype.equals.md"
        },
        {
          "title": "TagType.GetHashCode()",
          "path": "cppsharp.ast.tagtype.gethashcode.md"
        },
        {
          "title": "TagType",
          "path": "cppsharp.ast.tagtype.md"
        },
        {
          "title": "ArraySize.Constant",
          "path": "cppsharp.ast.arraytype.arraysize.constant.md"
        },
        {
          "title": "ArraySize.Variable",
          "path": "cppsharp.ast.arraytype.arraysize.variable.md"
        },
        {
          "title": "ArraySize.Dependent",
          "path": "cppsharp.ast.arraytype.arraysize.dependent.md"
        },
        {
          "title": "ArraySize.Incomplete",
          "path": "cppsharp.ast.arraytype.arraysize.incomplete.md"
        },
        {
          "title": "ArraySize",
          "path": "cppsharp.ast.arraytype.arraysize.md"
        },
        {
          "title": "ArrayType.QualifiedType",
          "path": "cppsharp.ast.arraytype.qualifiedtype.md"
        },
        {
          "title": "ArrayType.SizeType",
          "path": "cppsharp.ast.arraytype.sizetype.md"
        },
        {
          "title": "ArrayType.Size",
          "path": "cppsharp.ast.arraytype.size.md"
        },
        {
          "title": "ArrayType.ElementSize",
          "path": "cppsharp.ast.arraytype.elementsize.md"
        },
        {
          "title": "ArrayType()",
          "path": "cppsharp.ast.arraytype..ctor-1.md"
        },
        {
          "title": "ArrayType(QualifiedType)",
          "path": "cppsharp.ast.arraytype..ctor-2.md"
        },
        {
          "title": "ArrayType(ArrayType)",
          "path": "cppsharp.ast.arraytype..ctor-3.md"
        },
        {
          "title": "ArrayType.Type",
          "path": "cppsharp.ast.arraytype.type.md"
        },
        {
          "title": "ArrayType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.arraytype.visit.md"
        },
        {
          "title": "ArrayType.Clone()",
          "path": "cppsharp.ast.arraytype.clone.md"
        },
        {
          "title": "ArrayType.Equals(object)",
          "path": "cppsharp.ast.arraytype.equals.md"
        },
        {
          "title": "ArrayType.GetHashCode()",
          "path": "cppsharp.ast.arraytype.gethashcode.md"
        },
        {
          "title": "ArrayType",
          "path": "cppsharp.ast.arraytype.md"
        },
        {
          "title": "ExceptionSpecType.None",
          "path": "cppsharp.ast.exceptionspectype.none.md"
        },
        {
          "title": "ExceptionSpecType.DynamicNone",
          "path": "cppsharp.ast.exceptionspectype.dynamicnone.md"
        },
        {
          "title": "ExceptionSpecType.Dynamic",
          "path": "cppsharp.ast.exceptionspectype.dynamic.md"
        },
        {
          "title": "ExceptionSpecType.MSAny",
          "path": "cppsharp.ast.exceptionspectype.msany.md"
        },
        {
          "title": "ExceptionSpecType.BasicNoexcept",
          "path": "cppsharp.ast.exceptionspectype.basicnoexcept.md"
        },
        {
          "title": "ExceptionSpecType.DependentNoexcept",
          "path": "cppsharp.ast.exceptionspectype.dependentnoexcept.md"
        },
        {
          "title": "ExceptionSpecType.NoexceptFalse",
          "path": "cppsharp.ast.exceptionspectype.noexceptfalse.md"
        },
        {
          "title": "ExceptionSpecType.NoexceptTrue",
          "path": "cppsharp.ast.exceptionspectype.noexcepttrue.md"
        },
        {
          "title": "ExceptionSpecType.Unevaluated",
          "path": "cppsharp.ast.exceptionspectype.unevaluated.md"
        },
        {
          "title": "ExceptionSpecType.Uninstantiated",
          "path": "cppsharp.ast.exceptionspectype.uninstantiated.md"
        },
        {
          "title": "ExceptionSpecType.Unparsed",
          "path": "cppsharp.ast.exceptionspectype.unparsed.md"
        },
        {
          "title": "ExceptionSpecType",
          "path": "cppsharp.ast.exceptionspectype.md"
        },
        {
          "title": "FunctionType.ReturnType",
          "path": "cppsharp.ast.functiontype.returntype.md"
        },
        {
          "title": "FunctionType.Parameters",
          "path": "cppsharp.ast.functiontype.parameters.md"
        },
        {
          "title": "FunctionType.CallingConvention",
          "path": "cppsharp.ast.functiontype.callingconvention.md"
        },
        {
          "title": "FunctionType.ExceptionSpecType",
          "path": "cppsharp.ast.functiontype.exceptionspectype.md"
        },
        {
          "title": "FunctionType()",
          "path": "cppsharp.ast.functiontype..ctor-1.md"
        },
        {
          "title": "FunctionType(FunctionType)",
          "path": "cppsharp.ast.functiontype..ctor-2.md"
        },
        {
          "title": "FunctionType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.functiontype.visit.md"
        },
        {
          "title": "FunctionType.Clone()",
          "path": "cppsharp.ast.functiontype.clone.md"
        },
        {
          "title": "FunctionType.Equals(object)",
          "path": "cppsharp.ast.functiontype.equals.md"
        },
        {
          "title": "FunctionType.GetHashCode()",
          "path": "cppsharp.ast.functiontype.gethashcode.md"
        },
        {
          "title": "FunctionType",
          "path": "cppsharp.ast.functiontype.md"
        },
        {
          "title": "PointerType(QualifiedType)",
          "path": "cppsharp.ast.pointertype..ctor-1.md"
        },
        {
          "title": "TypeModifier.Value",
          "path": "cppsharp.ast.pointertype.typemodifier.value.md"
        },
        {
          "title": "TypeModifier.Pointer",
          "path": "cppsharp.ast.pointertype.typemodifier.pointer.md"
        },
        {
          "title": "TypeModifier.LVReference",
          "path": "cppsharp.ast.pointertype.typemodifier.lvreference.md"
        },
        {
          "title": "TypeModifier.RVReference",
          "path": "cppsharp.ast.pointertype.typemodifier.rvreference.md"
        },
        {
          "title": "TypeModifier",
          "path": "cppsharp.ast.pointertype.typemodifier.md"
        },
        {
          "title": "PointerType()",
          "path": "cppsharp.ast.pointertype..ctor-2.md"
        },
        {
          "title": "PointerType(PointerType)",
          "path": "cppsharp.ast.pointertype..ctor-3.md"
        },
        {
          "title": "PointerType.IsReference",
          "path": "cppsharp.ast.pointertype.isreference.md"
        },
        {
          "title": "PointerType.QualifiedPointee",
          "path": "cppsharp.ast.pointertype.qualifiedpointee.md"
        },
        {
          "title": "PointerType.Pointee",
          "path": "cppsharp.ast.pointertype.pointee.md"
        },
        {
          "title": "PointerType.Modifier",
          "path": "cppsharp.ast.pointertype.modifier.md"
        },
        {
          "title": "PointerType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.pointertype.visit.md"
        },
        {
          "title": "PointerType.Clone()",
          "path": "cppsharp.ast.pointertype.clone.md"
        },
        {
          "title": "PointerType.Equals(object)",
          "path": "cppsharp.ast.pointertype.equals.md"
        },
        {
          "title": "PointerType.GetHashCode()",
          "path": "cppsharp.ast.pointertype.gethashcode.md"
        },
        {
          "title": "PointerType",
          "path": "cppsharp.ast.pointertype.md"
        },
        {
          "title": "MemberPointerType.QualifiedPointee",
          "path": "cppsharp.ast.memberpointertype.qualifiedpointee.md"
        },
        {
          "title": "MemberPointerType()",
          "path": "cppsharp.ast.memberpointertype..ctor-1.md"
        },
        {
          "title": "MemberPointerType(MemberPointerType)",
          "path": "cppsharp.ast.memberpointertype..ctor-2.md"
        },
        {
          "title": "MemberPointerType.Pointee",
          "path": "cppsharp.ast.memberpointertype.pointee.md"
        },
        {
          "title": "MemberPointerType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.memberpointertype.visit.md"
        },
        {
          "title": "MemberPointerType.Clone()",
          "path": "cppsharp.ast.memberpointertype.clone.md"
        },
        {
          "title": "MemberPointerType.Equals(object)",
          "path": "cppsharp.ast.memberpointertype.equals.md"
        },
        {
          "title": "MemberPointerType.GetHashCode()",
          "path": "cppsharp.ast.memberpointertype.gethashcode.md"
        },
        {
          "title": "MemberPointerType",
          "path": "cppsharp.ast.memberpointertype.md"
        },
        {
          "title": "TypedefType.Declaration",
          "path": "cppsharp.ast.typedeftype.declaration.md"
        },
        {
          "title": "TypedefType()",
          "path": "cppsharp.ast.typedeftype..ctor-1.md"
        },
        {
          "title": "TypedefType(TypedefNameDecl)",
          "path": "cppsharp.ast.typedeftype..ctor-2.md"
        },
        {
          "title": "TypedefType(TypedefType)",
          "path": "cppsharp.ast.typedeftype..ctor-3.md"
        },
        {
          "title": "TypedefType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.typedeftype.visit.md"
        },
        {
          "title": "TypedefType.Clone()",
          "path": "cppsharp.ast.typedeftype.clone.md"
        },
        {
          "title": "TypedefType.Equals(object)",
          "path": "cppsharp.ast.typedeftype.equals.md"
        },
        {
          "title": "TypedefType.GetHashCode()",
          "path": "cppsharp.ast.typedeftype.gethashcode.md"
        },
        {
          "title": "TypedefType",
          "path": "cppsharp.ast.typedeftype.md"
        },
        {
          "title": "AttributedType.Modified",
          "path": "cppsharp.ast.attributedtype.modified.md"
        },
        {
          "title": "AttributedType.Equivalent",
          "path": "cppsharp.ast.attributedtype.equivalent.md"
        },
        {
          "title": "AttributedType()",
          "path": "cppsharp.ast.attributedtype..ctor-1.md"
        },
        {
          "title": "AttributedType(AttributedType)",
          "path": "cppsharp.ast.attributedtype..ctor-2.md"
        },
        {
          "title": "AttributedType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.attributedtype.visit.md"
        },
        {
          "title": "AttributedType.Clone()",
          "path": "cppsharp.ast.attributedtype.clone.md"
        },
        {
          "title": "AttributedType.Equals(object)",
          "path": "cppsharp.ast.attributedtype.equals.md"
        },
        {
          "title": "AttributedType.GetHashCode()",
          "path": "cppsharp.ast.attributedtype.gethashcode.md"
        },
        {
          "title": "AttributedType",
          "path": "cppsharp.ast.attributedtype.md"
        },
        {
          "title": "DecayedType.Decayed",
          "path": "cppsharp.ast.decayedtype.decayed.md"
        },
        {
          "title": "DecayedType.Original",
          "path": "cppsharp.ast.decayedtype.original.md"
        },
        {
          "title": "DecayedType.Pointee",
          "path": "cppsharp.ast.decayedtype.pointee.md"
        },
        {
          "title": "DecayedType()",
          "path": "cppsharp.ast.decayedtype..ctor-1.md"
        },
        {
          "title": "DecayedType(DecayedType)",
          "path": "cppsharp.ast.decayedtype..ctor-2.md"
        },
        {
          "title": "DecayedType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.decayedtype.visit.md"
        },
        {
          "title": "DecayedType.Clone()",
          "path": "cppsharp.ast.decayedtype.clone.md"
        },
        {
          "title": "DecayedType.Equals(object)",
          "path": "cppsharp.ast.decayedtype.equals.md"
        },
        {
          "title": "DecayedType.GetHashCode()",
          "path": "cppsharp.ast.decayedtype.gethashcode.md"
        },
        {
          "title": "DecayedType",
          "path": "cppsharp.ast.decayedtype.md"
        },
        {
          "title": "ArgumentKind.Type",
          "path": "cppsharp.ast.templateargument.argumentkind.type.md"
        },
        {
          "title": "ArgumentKind.Declaration",
          "path": "cppsharp.ast.templateargument.argumentkind.declaration.md"
        },
        {
          "title": "ArgumentKind.NullPtr",
          "path": "cppsharp.ast.templateargument.argumentkind.nullptr.md"
        },
        {
          "title": "ArgumentKind.Integral",
          "path": "cppsharp.ast.templateargument.argumentkind.integral.md"
        },
        {
          "title": "ArgumentKind.Template",
          "path": "cppsharp.ast.templateargument.argumentkind.template.md"
        },
        {
          "title": "ArgumentKind.TemplateExpansion",
          "path": "cppsharp.ast.templateargument.argumentkind.templateexpansion.md"
        },
        {
          "title": "ArgumentKind.Expression",
          "path": "cppsharp.ast.templateargument.argumentkind.expression.md"
        },
        {
          "title": "ArgumentKind.Pack",
          "path": "cppsharp.ast.templateargument.argumentkind.pack.md"
        },
        {
          "title": "ArgumentKind",
          "path": "cppsharp.ast.templateargument.argumentkind.md"
        },
        {
          "title": "TemplateArgument.Kind",
          "path": "cppsharp.ast.templateargument.kind.md"
        },
        {
          "title": "TemplateArgument.Type",
          "path": "cppsharp.ast.templateargument.type.md"
        },
        {
          "title": "TemplateArgument.Declaration",
          "path": "cppsharp.ast.templateargument.declaration.md"
        },
        {
          "title": "TemplateArgument.Integral",
          "path": "cppsharp.ast.templateargument.integral.md"
        },
        {
          "title": "TemplateArgument.Equals(object)",
          "path": "cppsharp.ast.templateargument.equals.md"
        },
        {
          "title": "TemplateArgument.GetHashCode()",
          "path": "cppsharp.ast.templateargument.gethashcode.md"
        },
        {
          "title": "TemplateArgument.ToString()",
          "path": "cppsharp.ast.templateargument.tostring.md"
        },
        {
          "title": "TemplateArgument",
          "path": "cppsharp.ast.templateargument.md"
        },
        {
          "title": "TemplateSpecializationType()",
          "path": "cppsharp.ast.templatespecializationtype..ctor-1.md"
        },
        {
          "title": "TemplateSpecializationType(TemplateSpecializationType)",
          "path": "cppsharp.ast.templatespecializationtype..ctor-2.md"
        },
        {
          "title": "TemplateSpecializationType.Arguments",
          "path": "cppsharp.ast.templatespecializationtype.arguments.md"
        },
        {
          "title": "TemplateSpecializationType.Template",
          "path": "cppsharp.ast.templatespecializationtype.template.md"
        },
        {
          "title": "TemplateSpecializationType.Desugared",
          "path": "cppsharp.ast.templatespecializationtype.desugared.md"
        },
        {
          "title": "TemplateSpecializationType.GetClassTemplateSpecialization()",
          "path": "cppsharp.ast.templatespecializationtype.getclasstemplatespecialization.md"
        },
        {
          "title": "TemplateSpecializationType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.templatespecializationtype.visit.md"
        },
        {
          "title": "TemplateSpecializationType.Clone()",
          "path": "cppsharp.ast.templatespecializationtype.clone.md"
        },
        {
          "title": "TemplateSpecializationType.Equals(object)",
          "path": "cppsharp.ast.templatespecializationtype.equals.md"
        },
        {
          "title": "TemplateSpecializationType.GetHashCode()",
          "path": "cppsharp.ast.templatespecializationtype.gethashcode.md"
        },
        {
          "title": "TemplateSpecializationType",
          "path": "cppsharp.ast.templatespecializationtype.md"
        },
        {
          "title": "DependentTemplateSpecializationType()",
          "path": "cppsharp.ast.dependenttemplatespecializationtype..ctor-1.md"
        },
        {
          "title": "DependentTemplateSpecializationType(DependentTemplateSpecializationType)",
          "path": "cppsharp.ast.dependenttemplatespecializationtype..ctor-2.md"
        },
        {
          "title": "DependentTemplateSpecializationType.Arguments",
          "path": "cppsharp.ast.dependenttemplatespecializationtype.arguments.md"
        },
        {
          "title": "DependentTemplateSpecializationType.Desugared",
          "path": "cppsharp.ast.dependenttemplatespecializationtype.desugared.md"
        },
        {
          "title": "DependentTemplateSpecializationType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.dependenttemplatespecializationtype.visit.md"
        },
        {
          "title": "DependentTemplateSpecializationType.Clone()",
          "path": "cppsharp.ast.dependenttemplatespecializationtype.clone.md"
        },
        {
          "title": "DependentTemplateSpecializationType.Equals(object)",
          "path": "cppsharp.ast.dependenttemplatespecializationtype.equals.md"
        },
        {
          "title": "DependentTemplateSpecializationType.GetHashCode()",
          "path": "cppsharp.ast.dependenttemplatespecializationtype.gethashcode.md"
        },
        {
          "title": "DependentTemplateSpecializationType",
          "path": "cppsharp.ast.dependenttemplatespecializationtype.md"
        },
        {
          "title": "TemplateParameterType.Parameter",
          "path": "cppsharp.ast.templateparametertype.parameter.md"
        },
        {
          "title": "TemplateParameterType.Depth",
          "path": "cppsharp.ast.templateparametertype.depth.md"
        },
        {
          "title": "TemplateParameterType.Index",
          "path": "cppsharp.ast.templateparametertype.index.md"
        },
        {
          "title": "TemplateParameterType.IsParameterPack",
          "path": "cppsharp.ast.templateparametertype.isparameterpack.md"
        },
        {
          "title": "TemplateParameterType()",
          "path": "cppsharp.ast.templateparametertype..ctor-1.md"
        },
        {
          "title": "TemplateParameterType(TemplateParameterType)",
          "path": "cppsharp.ast.templateparametertype..ctor-2.md"
        },
        {
          "title": "TemplateParameterType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.templateparametertype.visit.md"
        },
        {
          "title": "TemplateParameterType.Clone()",
          "path": "cppsharp.ast.templateparametertype.clone.md"
        },
        {
          "title": "TemplateParameterType.Equals(object)",
          "path": "cppsharp.ast.templateparametertype.equals.md"
        },
        {
          "title": "TemplateParameterType.GetHashCode()",
          "path": "cppsharp.ast.templateparametertype.gethashcode.md"
        },
        {
          "title": "TemplateParameterType",
          "path": "cppsharp.ast.templateparametertype.md"
        },
        {
          "title": "TemplateParameterSubstitutionType.Replacement",
          "path": "cppsharp.ast.templateparametersubstitutiontype.replacement.md"
        },
        {
          "title": "TemplateParameterSubstitutionType.ReplacedParameter",
          "path": "cppsharp.ast.templateparametersubstitutiontype.replacedparameter.md"
        },
        {
          "title": "TemplateParameterSubstitutionType()",
          "path": "cppsharp.ast.templateparametersubstitutiontype..ctor-1.md"
        },
        {
          "title": "TemplateParameterSubstitutionType(TemplateParameterSubstitutionType)",
          "path": "cppsharp.ast.templateparametersubstitutiontype..ctor-2.md"
        },
        {
          "title": "TemplateParameterSubstitutionType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.templateparametersubstitutiontype.visit.md"
        },
        {
          "title": "TemplateParameterSubstitutionType.Clone()",
          "path": "cppsharp.ast.templateparametersubstitutiontype.clone.md"
        },
        {
          "title": "TemplateParameterSubstitutionType.Equals(object)",
          "path": "cppsharp.ast.templateparametersubstitutiontype.equals.md"
        },
        {
          "title": "TemplateParameterSubstitutionType.GetHashCode()",
          "path": "cppsharp.ast.templateparametersubstitutiontype.gethashcode.md"
        },
        {
          "title": "TemplateParameterSubstitutionType",
          "path": "cppsharp.ast.templateparametersubstitutiontype.md"
        },
        {
          "title": "InjectedClassNameType.TemplateSpecialization",
          "path": "cppsharp.ast.injectedclassnametype.templatespecialization.md"
        },
        {
          "title": "InjectedClassNameType.Class",
          "path": "cppsharp.ast.injectedclassnametype.class.md"
        },
        {
          "title": "InjectedClassNameType()",
          "path": "cppsharp.ast.injectedclassnametype..ctor-1.md"
        },
        {
          "title": "InjectedClassNameType(InjectedClassNameType)",
          "path": "cppsharp.ast.injectedclassnametype..ctor-2.md"
        },
        {
          "title": "InjectedClassNameType.InjectedSpecializationType",
          "path": "cppsharp.ast.injectedclassnametype.injectedspecializationtype.md"
        },
        {
          "title": "InjectedClassNameType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.injectedclassnametype.visit.md"
        },
        {
          "title": "InjectedClassNameType.Clone()",
          "path": "cppsharp.ast.injectedclassnametype.clone.md"
        },
        {
          "title": "InjectedClassNameType.Equals(object)",
          "path": "cppsharp.ast.injectedclassnametype.equals.md"
        },
        {
          "title": "InjectedClassNameType.GetHashCode()",
          "path": "cppsharp.ast.injectedclassnametype.gethashcode.md"
        },
        {
          "title": "InjectedClassNameType",
          "path": "cppsharp.ast.injectedclassnametype.md"
        },
        {
          "title": "DependentNameType()",
          "path": "cppsharp.ast.dependentnametype..ctor-1.md"
        },
        {
          "title": "DependentNameType(DependentNameType)",
          "path": "cppsharp.ast.dependentnametype..ctor-2.md"
        },
        {
          "title": "DependentNameType.Qualifier",
          "path": "cppsharp.ast.dependentnametype.qualifier.md"
        },
        {
          "title": "DependentNameType.Identifier",
          "path": "cppsharp.ast.dependentnametype.identifier.md"
        },
        {
          "title": "DependentNameType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.dependentnametype.visit.md"
        },
        {
          "title": "DependentNameType.Clone()",
          "path": "cppsharp.ast.dependentnametype.clone.md"
        },
        {
          "title": "DependentNameType.GetHashCode()",
          "path": "cppsharp.ast.dependentnametype.gethashcode.md"
        },
        {
          "title": "DependentNameType",
          "path": "cppsharp.ast.dependentnametype.md"
        },
        {
          "title": "CILType(System.Type)",
          "path": "cppsharp.ast.ciltype..ctor-1.md"
        },
        {
          "title": "CILType()",
          "path": "cppsharp.ast.ciltype..ctor-2.md"
        },
        {
          "title": "CILType(CILType)",
          "path": "cppsharp.ast.ciltype..ctor-3.md"
        },
        {
          "title": "CILType.Type",
          "path": "cppsharp.ast.ciltype.type.md"
        },
        {
          "title": "CILType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.ciltype.visit.md"
        },
        {
          "title": "CILType.Clone()",
          "path": "cppsharp.ast.ciltype.clone.md"
        },
        {
          "title": "CILType.Equals(object)",
          "path": "cppsharp.ast.ciltype.equals.md"
        },
        {
          "title": "CILType.GetHashCode()",
          "path": "cppsharp.ast.ciltype.gethashcode.md"
        },
        {
          "title": "CILType",
          "path": "cppsharp.ast.ciltype.md"
        },
        {
          "title": "PackExpansionType()",
          "path": "cppsharp.ast.packexpansiontype..ctor-1.md"
        },
        {
          "title": "PackExpansionType(PackExpansionType)",
          "path": "cppsharp.ast.packexpansiontype..ctor-2.md"
        },
        {
          "title": "PackExpansionType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.packexpansiontype.visit.md"
        },
        {
          "title": "PackExpansionType.Clone()",
          "path": "cppsharp.ast.packexpansiontype.clone.md"
        },
        {
          "title": "PackExpansionType",
          "path": "cppsharp.ast.packexpansiontype.md"
        },
        {
          "title": "UnaryTransformType()",
          "path": "cppsharp.ast.unarytransformtype..ctor-1.md"
        },
        {
          "title": "UnaryTransformType(UnaryTransformType)",
          "path": "cppsharp.ast.unarytransformtype..ctor-2.md"
        },
        {
          "title": "UnaryTransformType.Desugared",
          "path": "cppsharp.ast.unarytransformtype.desugared.md"
        },
        {
          "title": "UnaryTransformType.BaseType",
          "path": "cppsharp.ast.unarytransformtype.basetype.md"
        },
        {
          "title": "UnaryTransformType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.unarytransformtype.visit.md"
        },
        {
          "title": "UnaryTransformType.Clone()",
          "path": "cppsharp.ast.unarytransformtype.clone.md"
        },
        {
          "title": "UnaryTransformType.GetHashCode()",
          "path": "cppsharp.ast.unarytransformtype.gethashcode.md"
        },
        {
          "title": "UnaryTransformType",
          "path": "cppsharp.ast.unarytransformtype.md"
        },
        {
          "title": "UnresolvedUsingType()",
          "path": "cppsharp.ast.unresolvedusingtype..ctor-1.md"
        },
        {
          "title": "UnresolvedUsingType(UnresolvedUsingType)",
          "path": "cppsharp.ast.unresolvedusingtype..ctor-2.md"
        },
        {
          "title": "UnresolvedUsingType.Declaration",
          "path": "cppsharp.ast.unresolvedusingtype.declaration.md"
        },
        {
          "title": "UnresolvedUsingType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.unresolvedusingtype.visit.md"
        },
        {
          "title": "UnresolvedUsingType.Clone()",
          "path": "cppsharp.ast.unresolvedusingtype.clone.md"
        },
        {
          "title": "UnresolvedUsingType.GetHashCode()",
          "path": "cppsharp.ast.unresolvedusingtype.gethashcode.md"
        },
        {
          "title": "UnresolvedUsingType",
          "path": "cppsharp.ast.unresolvedusingtype.md"
        },
        {
          "title": "VectorType()",
          "path": "cppsharp.ast.vectortype..ctor-1.md"
        },
        {
          "title": "VectorType(VectorType)",
          "path": "cppsharp.ast.vectortype..ctor-2.md"
        },
        {
          "title": "VectorType.ElementType",
          "path": "cppsharp.ast.vectortype.elementtype.md"
        },
        {
          "title": "VectorType.NumElements",
          "path": "cppsharp.ast.vectortype.numelements.md"
        },
        {
          "title": "VectorType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.vectortype.visit.md"
        },
        {
          "title": "VectorType.Clone()",
          "path": "cppsharp.ast.vectortype.clone.md"
        },
        {
          "title": "VectorType.GetHashCode()",
          "path": "cppsharp.ast.vectortype.gethashcode.md"
        },
        {
          "title": "VectorType",
          "path": "cppsharp.ast.vectortype.md"
        },
        {
          "title": "UnsupportedType()",
          "path": "cppsharp.ast.unsupportedtype..ctor-1.md"
        },
        {
          "title": "UnsupportedType(string)",
          "path": "cppsharp.ast.unsupportedtype..ctor-2.md"
        },
        {
          "title": "UnsupportedType(UnsupportedType)",
          "path": "cppsharp.ast.unsupportedtype..ctor-3.md"
        },
        {
          "title": "UnsupportedType.Description",
          "path": "cppsharp.ast.unsupportedtype.description.md"
        },
        {
          "title": "UnsupportedType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.unsupportedtype.visit.md"
        },
        {
          "title": "UnsupportedType.Clone()",
          "path": "cppsharp.ast.unsupportedtype.clone.md"
        },
        {
          "title": "UnsupportedType.GetHashCode()",
          "path": "cppsharp.ast.unsupportedtype.gethashcode.md"
        },
        {
          "title": "UnsupportedType",
          "path": "cppsharp.ast.unsupportedtype.md"
        },
        {
          "title": "CustomType(string)",
          "path": "cppsharp.ast.customtype..ctor.md"
        },
        {
          "title": "CustomType",
          "path": "cppsharp.ast.customtype.md"
        },
        {
          "title": "PrimitiveType.Null",
          "path": "cppsharp.ast.primitivetype.null.md"
        },
        {
          "title": "PrimitiveType.Void",
          "path": "cppsharp.ast.primitivetype.void.md"
        },
        {
          "title": "PrimitiveType.Bool",
          "path": "cppsharp.ast.primitivetype.bool.md"
        },
        {
          "title": "PrimitiveType.WideChar",
          "path": "cppsharp.ast.primitivetype.widechar.md"
        },
        {
          "title": "PrimitiveType.Char",
          "path": "cppsharp.ast.primitivetype.char.md"
        },
        {
          "title": "PrimitiveType.SChar",
          "path": "cppsharp.ast.primitivetype.schar.md"
        },
        {
          "title": "PrimitiveType.UChar",
          "path": "cppsharp.ast.primitivetype.uchar.md"
        },
        {
          "title": "PrimitiveType.Char16",
          "path": "cppsharp.ast.primitivetype.char16.md"
        },
        {
          "title": "PrimitiveType.Char32",
          "path": "cppsharp.ast.primitivetype.char32.md"
        },
        {
          "title": "PrimitiveType.Short",
          "path": "cppsharp.ast.primitivetype.short.md"
        },
        {
          "title": "PrimitiveType.UShort",
          "path": "cppsharp.ast.primitivetype.ushort.md"
        },
        {
          "title": "PrimitiveType.Int",
          "path": "cppsharp.ast.primitivetype.int.md"
        },
        {
          "title": "PrimitiveType.UInt",
          "path": "cppsharp.ast.primitivetype.uint.md"
        },
        {
          "title": "PrimitiveType.Long",
          "path": "cppsharp.ast.primitivetype.long.md"
        },
        {
          "title": "PrimitiveType.ULong",
          "path": "cppsharp.ast.primitivetype.ulong.md"
        },
        {
          "title": "PrimitiveType.LongLong",
          "path": "cppsharp.ast.primitivetype.longlong.md"
        },
        {
          "title": "PrimitiveType.ULongLong",
          "path": "cppsharp.ast.primitivetype.ulonglong.md"
        },
        {
          "title": "PrimitiveType.Int128",
          "path": "cppsharp.ast.primitivetype.int128.md"
        },
        {
          "title": "PrimitiveType.UInt128",
          "path": "cppsharp.ast.primitivetype.uint128.md"
        },
        {
          "title": "PrimitiveType.Half",
          "path": "cppsharp.ast.primitivetype.half.md"
        },
        {
          "title": "PrimitiveType.Float",
          "path": "cppsharp.ast.primitivetype.float.md"
        },
        {
          "title": "PrimitiveType.Double",
          "path": "cppsharp.ast.primitivetype.double.md"
        },
        {
          "title": "PrimitiveType.LongDouble",
          "path": "cppsharp.ast.primitivetype.longdouble.md"
        },
        {
          "title": "PrimitiveType.Float128",
          "path": "cppsharp.ast.primitivetype.float128.md"
        },
        {
          "title": "PrimitiveType.IntPtr",
          "path": "cppsharp.ast.primitivetype.intptr.md"
        },
        {
          "title": "PrimitiveType.UIntPtr",
          "path": "cppsharp.ast.primitivetype.uintptr.md"
        },
        {
          "title": "PrimitiveType.String",
          "path": "cppsharp.ast.primitivetype.string.md"
        },
        {
          "title": "PrimitiveType.Decimal",
          "path": "cppsharp.ast.primitivetype.decimal.md"
        },
        {
          "title": "PrimitiveType",
          "path": "cppsharp.ast.primitivetype.md"
        },
        {
          "title": "BuiltinType()",
          "path": "cppsharp.ast.builtintype..ctor-1.md"
        },
        {
          "title": "BuiltinType(PrimitiveType)",
          "path": "cppsharp.ast.builtintype..ctor-2.md"
        },
        {
          "title": "BuiltinType(BuiltinType)",
          "path": "cppsharp.ast.builtintype..ctor-3.md"
        },
        {
          "title": "BuiltinType.IsUnsigned",
          "path": "cppsharp.ast.builtintype.isunsigned.md"
        },
        {
          "title": "BuiltinType.Type",
          "path": "cppsharp.ast.builtintype.type.md"
        },
        {
          "title": "BuiltinType.Visit(ITypeVisitor\u003CT\u003E,TypeQualifiers)",
          "path": "cppsharp.ast.builtintype.visit.md"
        },
        {
          "title": "BuiltinType.Clone()",
          "path": "cppsharp.ast.builtintype.clone.md"
        },
        {
          "title": "BuiltinType.Equals(object)",
          "path": "cppsharp.ast.builtintype.equals.md"
        },
        {
          "title": "BuiltinType.GetHashCode()",
          "path": "cppsharp.ast.builtintype.gethashcode.md"
        },
        {
          "title": "BuiltinType",
          "path": "cppsharp.ast.builtintype.md"
        },
        {
          "title": "ITypeVisitor.VisitTagType(TagType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visittagtype.md"
        },
        {
          "title": "ITypeVisitor.VisitArrayType(ArrayType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitarraytype.md"
        },
        {
          "title": "ITypeVisitor.VisitFunctionType(FunctionType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitfunctiontype.md"
        },
        {
          "title": "ITypeVisitor.VisitPointerType(PointerType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitpointertype.md"
        },
        {
          "title": "ITypeVisitor.VisitMemberPointerType(MemberPointerType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitmemberpointertype.md"
        },
        {
          "title": "ITypeVisitor.VisitBuiltinType(BuiltinType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitbuiltintype.md"
        },
        {
          "title": "ITypeVisitor.VisitTypedefType(TypedefType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visittypedeftype.md"
        },
        {
          "title": "ITypeVisitor.VisitAttributedType(AttributedType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitattributedtype.md"
        },
        {
          "title": "ITypeVisitor.VisitDecayedType(DecayedType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitdecayedtype.md"
        },
        {
          "title": "ITypeVisitor.VisitTemplateSpecializationType(TemplateSpecializationType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visittemplatespecializationtype.md"
        },
        {
          "title": "ITypeVisitor.VisitDependentTemplateSpecializationType(DependentTemplateSpecializationType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitdependenttemplatespecializationtype.md"
        },
        {
          "title": "ITypeVisitor.VisitPrimitiveType(PrimitiveType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitprimitivetype.md"
        },
        {
          "title": "ITypeVisitor.VisitDeclaration(Declaration,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitdeclaration.md"
        },
        {
          "title": "ITypeVisitor.VisitTemplateParameterType(TemplateParameterType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visittemplateparametertype.md"
        },
        {
          "title": "ITypeVisitor.VisitTemplateParameterSubstitutionType(TemplateParameterSubstitutionType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visittemplateparametersubstitutiontype.md"
        },
        {
          "title": "ITypeVisitor.VisitInjectedClassNameType(InjectedClassNameType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitinjectedclassnametype.md"
        },
        {
          "title": "ITypeVisitor.VisitDependentNameType(DependentNameType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitdependentnametype.md"
        },
        {
          "title": "ITypeVisitor.VisitPackExpansionType(PackExpansionType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitpackexpansiontype.md"
        },
        {
          "title": "ITypeVisitor.VisitUnaryTransformType(UnaryTransformType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitunarytransformtype.md"
        },
        {
          "title": "ITypeVisitor.VisitUnresolvedUsingType(UnresolvedUsingType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitunresolvedusingtype.md"
        },
        {
          "title": "ITypeVisitor.VisitVectorType(VectorType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitvectortype.md"
        },
        {
          "title": "ITypeVisitor.VisitCILType(CILType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitciltype.md"
        },
        {
          "title": "ITypeVisitor.VisitUnsupportedType(UnsupportedType,TypeQualifiers)",
          "path": "cppsharp.ast.itypevisitor.visitunsupportedtype.md"
        },
        {
          "title": "ITypeVisitor.VisitQualifiedType(QualifiedType)",
          "path": "cppsharp.ast.itypevisitor.visitqualifiedtype.md"
        },
        {
          "title": "ITypeVisitor",
          "path": "cppsharp.ast.itypevisitor.md"
        },
        {
          "title": "TypedefNameDecl.Type",
          "path": "cppsharp.ast.typedefnamedecl.type.md"
        },
        {
          "title": "TypedefNameDecl.QualifiedType",
          "path": "cppsharp.ast.typedefnamedecl.qualifiedtype.md"
        },
        {
          "title": "TypedefNameDecl.IsSynthetized",
          "path": "cppsharp.ast.typedefnamedecl.issynthetized.md"
        },
        {
          "title": "TypedefNameDecl",
          "path": "cppsharp.ast.typedefnamedecl.md"
        },
        {
          "title": "TypedefDecl.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.typedefdecl.visit.md"
        },
        {
          "title": "TypedefDecl",
          "path": "cppsharp.ast.typedefdecl.md"
        },
        {
          "title": "TypeAlias.DescribedAliasTemplate",
          "path": "cppsharp.ast.typealias.describedaliastemplate.md"
        },
        {
          "title": "TypeAlias.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.typealias.visit.md"
        },
        {
          "title": "TypeAlias",
          "path": "cppsharp.ast.typealias.md"
        },
        {
          "title": "TypeExtensions.IsPrimitiveType(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.isprimitivetype-1.md"
        },
        {
          "title": "TypeExtensions.IsPrimitiveType(Type,PrimitiveType)",
          "path": "cppsharp.ast.extensions.typeextensions.isprimitivetype-2.md"
        },
        {
          "title": "TypeExtensions.IsPrimitiveType(Type,PrimitiveType)",
          "path": "cppsharp.ast.extensions.typeextensions.isprimitivetype-3.md"
        },
        {
          "title": "TypeExtensions.IsEnumType(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.isenumtype.md"
        },
        {
          "title": "TypeExtensions.IsAddress(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.isaddress.md"
        },
        {
          "title": "TypeExtensions.IsPointer(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.ispointer.md"
        },
        {
          "title": "TypeExtensions.IsReference(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.isreference.md"
        },
        {
          "title": "TypeExtensions.IsPointerToPrimitiveType(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.ispointertoprimitivetype-1.md"
        },
        {
          "title": "TypeExtensions.IsPointerToPrimitiveType(Type,PrimitiveType)",
          "path": "cppsharp.ast.extensions.typeextensions.ispointertoprimitivetype-2.md"
        },
        {
          "title": "TypeExtensions.IsPointerToPrimitiveType(Type,PrimitiveType)",
          "path": "cppsharp.ast.extensions.typeextensions.ispointertoprimitivetype-3.md"
        },
        {
          "title": "TypeExtensions.IsPointerToEnum(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.ispointertoenum-1.md"
        },
        {
          "title": "TypeExtensions.IsPointerToEnum(Type,Enumeration)",
          "path": "cppsharp.ast.extensions.typeextensions.ispointertoenum-2.md"
        },
        {
          "title": "TypeExtensions.IsPointerTo(Type,T)",
          "path": "cppsharp.ast.extensions.typeextensions.ispointerto.md"
        },
        {
          "title": "TypeExtensions.IsClass(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.isclass.md"
        },
        {
          "title": "TypeExtensions.TryGetClass(Type,Class,Class)",
          "path": "cppsharp.ast.extensions.typeextensions.trygetclass.md"
        },
        {
          "title": "TypeExtensions.TryGetDeclaration(Type,T,T)",
          "path": "cppsharp.ast.extensions.typeextensions.trygetdeclaration.md"
        },
        {
          "title": "TypeExtensions.IsEnum(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.isenum.md"
        },
        {
          "title": "TypeExtensions.TryGetEnum(Type,Enumeration)",
          "path": "cppsharp.ast.extensions.typeextensions.trygetenum.md"
        },
        {
          "title": "TypeExtensions.Desugar(Type,bool)",
          "path": "cppsharp.ast.extensions.typeextensions.desugar.md"
        },
        {
          "title": "TypeExtensions.SkipPointerRefs(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.skippointerrefs.md"
        },
        {
          "title": "TypeExtensions.GetPointee(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.getpointee.md"
        },
        {
          "title": "TypeExtensions.GetFinalPointee(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.getfinalpointee.md"
        },
        {
          "title": "TypeExtensions.GetQualifiedPointee(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.getqualifiedpointee.md"
        },
        {
          "title": "TypeExtensions.GetFinalQualifiedPointee(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.getfinalqualifiedpointee.md"
        },
        {
          "title": "TypeExtensions.GetFinalPointer(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.getfinalpointer.md"
        },
        {
          "title": "TypeExtensions.ResolvesTo(QualifiedType,QualifiedType)",
          "path": "cppsharp.ast.extensions.typeextensions.resolvesto.md"
        },
        {
          "title": "TypeExtensions.IsConstRef(QualifiedType)",
          "path": "cppsharp.ast.extensions.typeextensions.isconstref.md"
        },
        {
          "title": "TypeExtensions.IsConstRefToPrimitive(QualifiedType)",
          "path": "cppsharp.ast.extensions.typeextensions.isconstreftoprimitive.md"
        },
        {
          "title": "TypeExtensions.IsConst(QualifiedType)",
          "path": "cppsharp.ast.extensions.typeextensions.isconst.md"
        },
        {
          "title": "TypeExtensions.StripConst(QualifiedType)",
          "path": "cppsharp.ast.extensions.typeextensions.stripconst.md"
        },
        {
          "title": "TypeExtensions.IsConstCharString(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.isconstcharstring-1.md"
        },
        {
          "title": "TypeExtensions.IsConstCharString(PointerType)",
          "path": "cppsharp.ast.extensions.typeextensions.isconstcharstring-2.md"
        },
        {
          "title": "TypeExtensions.IsDependentPointer(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.isdependentpointer.md"
        },
        {
          "title": "TypeExtensions.IsTemplateParameterType(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.istemplateparametertype.md"
        },
        {
          "title": "TypeExtensions.GetModule(Type)",
          "path": "cppsharp.ast.extensions.typeextensions.getmodule.md"
        },
        {
          "title": "TypeExtensions.GetSizeInBytes(ArrayType)",
          "path": "cppsharp.ast.extensions.typeextensions.getsizeinbytes.md"
        },
        {
          "title": "TypeExtensions.GetSizeInBits(ArrayType)",
          "path": "cppsharp.ast.extensions.typeextensions.getsizeinbits.md"
        },
        {
          "title": "TypeExtensions",
          "path": "cppsharp.ast.extensions.typeextensions.md"
        },
        {
          "title": "CppSharp.AST.Extensions Namespace",
          "path": "cppsharp.ast.extensions.md"
        },
        {
          "title": "Variable.Visit(IDeclVisitor\u003CT\u003E)",
          "path": "cppsharp.ast.variable.visit.md"
        },
        {
          "title": "Variable.IsConstExpr",
          "path": "cppsharp.ast.variable.isconstexpr.md"
        },
        {
          "title": "Variable.Type",
          "path": "cppsharp.ast.variable.type.md"
        },
        {
          "title": "Variable.QualifiedType",
          "path": "cppsharp.ast.variable.qualifiedtype.md"
        },
        {
          "title": "Variable.Initializer",
          "path": "cppsharp.ast.variable.initializer.md"
        },
        {
          "title": "Variable.Mangled",
          "path": "cppsharp.ast.variable.mangled.md"
        },
        {
          "title": "Variable",
          "path": "cppsharp.ast.variable.md"
        },
        {
          "title": "Summary",
          "path": "SUMMARY.md"
        },
        {
          "title": "Undocumented",
          "path": "UNDOCUMENTED.md"
        }
      ]
    }
  ]
}